
LinebotTemplate1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001df0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000052  00802000  00001df0  00001e84  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000011  00802052  00802052  00001ed6  2**0
                  ALLOC
  3 .comment      0000008c  00000000  00000000  00001ed6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001f64  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001d0  00000000  00000000  00001fa4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000047d2  00000000  00000000  00002174  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003057  00000000  00000000  00006946  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000012a3  00000000  00000000  0000999d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000508  00000000  00000000  0000ac40  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000029ac  00000000  00000000  0000b148  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000091a  00000000  00000000  0000daf4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000140  00000000  00000000  0000e40e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 89 01 	jmp	0x312	; 0x312 <__ctors_end>
       4:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
       8:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
       c:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      10:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      14:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      18:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      1c:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      20:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      24:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      28:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      2c:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      30:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      34:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      38:	0c 94 dc 04 	jmp	0x9b8	; 0x9b8 <__vector_14>
      3c:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      40:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      44:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      48:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      4c:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      50:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      54:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      58:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      5c:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      60:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      64:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      68:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      6c:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      70:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      74:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      78:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      7c:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      80:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      84:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      88:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      8c:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      90:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      94:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      98:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      9c:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      a0:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      a4:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      a8:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      ac:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      b0:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      b4:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      b8:	0c 94 1a 03 	jmp	0x634	; 0x634 <__vector_46>
      bc:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      c0:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      c4:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      c8:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      cc:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      d0:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      d4:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      d8:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      dc:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      e0:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      e4:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      e8:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      ec:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      f0:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      f4:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      f8:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
      fc:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     100:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     104:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     108:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     10c:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     110:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     114:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     118:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     11c:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     120:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     124:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     128:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     12c:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     130:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     134:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     138:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     13c:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     140:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     144:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     148:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     14c:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     150:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     154:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     158:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     15c:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     160:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     164:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     168:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     16c:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     170:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     174:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     178:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     17c:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     180:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     184:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     188:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     18c:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     190:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     194:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     198:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     19c:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     1a0:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     1a4:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     1a8:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     1ac:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     1b0:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     1b4:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     1b8:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     1bc:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     1c0:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     1c4:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     1c8:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     1cc:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     1d0:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     1d4:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     1d8:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     1dc:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     1e0:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     1e4:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     1e8:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     1ec:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     1f0:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     1f4:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
     1f8:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>

000001fc <__trampolines_start>:
     1fc:	0c 94 ae 03 	jmp	0x75c	; 0x75c <stdio_putchar>
     200:	0c 94 d3 03 	jmp	0x7a6	; 0x7a6 <stdio_getchar>

00000204 <__trampolines_end>:
     204:	6e 61       	ori	r22, 0x1E	; 30
     206:	6e 00       	.word	0x006e	; ????

00000208 <__c.2332>:
     208:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     218:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     228:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     238:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     248:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     258:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     268:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     278:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     288:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     298:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     2a8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     2b8:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     2c8:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     2d8:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     2e8:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     2f8:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000306 <__c.2474>:
     306:	63 64 69 6e 6f 70 73 75 78 58 5b 00                 cdinopsuxX[.

00000312 <__ctors_end>:
     312:	11 24       	eor	r1, r1
     314:	1f be       	out	0x3f, r1	; 63
     316:	cf ef       	ldi	r28, 0xFF	; 255
     318:	cd bf       	out	0x3d, r28	; 61
     31a:	df e9       	ldi	r29, 0x9F	; 159
     31c:	de bf       	out	0x3e, r29	; 62
     31e:	00 e0       	ldi	r16, 0x00	; 0
     320:	0c bf       	out	0x3c, r16	; 60

00000322 <__do_copy_data>:
     322:	10 e2       	ldi	r17, 0x20	; 32
     324:	a0 e0       	ldi	r26, 0x00	; 0
     326:	b0 e2       	ldi	r27, 0x20	; 32
     328:	e0 ef       	ldi	r30, 0xF0	; 240
     32a:	fd e1       	ldi	r31, 0x1D	; 29
     32c:	00 e0       	ldi	r16, 0x00	; 0
     32e:	0b bf       	out	0x3b, r16	; 59
     330:	02 c0       	rjmp	.+4      	; 0x336 <__do_copy_data+0x14>
     332:	07 90       	elpm	r0, Z+
     334:	0d 92       	st	X+, r0
     336:	a2 35       	cpi	r26, 0x52	; 82
     338:	b1 07       	cpc	r27, r17
     33a:	d9 f7       	brne	.-10     	; 0x332 <__do_copy_data+0x10>

0000033c <__do_clear_bss>:
     33c:	20 e2       	ldi	r18, 0x20	; 32
     33e:	a2 e5       	ldi	r26, 0x52	; 82
     340:	b0 e2       	ldi	r27, 0x20	; 32
     342:	01 c0       	rjmp	.+2      	; 0x346 <.do_clear_bss_start>

00000344 <.do_clear_bss_loop>:
     344:	1d 92       	st	X+, r1

00000346 <.do_clear_bss_start>:
     346:	a3 36       	cpi	r26, 0x63	; 99
     348:	b2 07       	cpc	r27, r18
     34a:	e1 f7       	brne	.-8      	; 0x344 <.do_clear_bss_loop>
     34c:	0e 94 ed 03 	call	0x7da	; 0x7da <main>
     350:	0c 94 f6 0e 	jmp	0x1dec	; 0x1dec <_exit>

00000354 <__bad_interrupt>:
     354:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000358 <DriverAdcInit>:
#include "DriverAdc.h"
#include <avr/io.h>
#include <avr/interrupt.h>

void DriverAdcInit(void)
{
     358:	cf 93       	push	r28
     35a:	df 93       	push	r29
     35c:	cd b7       	in	r28, 0x3d	; 61
     35e:	de b7       	in	r29, 0x3e	; 62
	//ADCA.CTRLA=
	//ADCA.CTRLB=
	//ADCA.REFCTRL=
	//ADCA.PRESCALER=
	//ADCA.CH0.INTCTRL=	
}
     360:	00 00       	nop
     362:	df 91       	pop	r29
     364:	cf 91       	pop	r28
     366:	08 95       	ret

00000368 <DriverCursorstickInit>:
#include "DriverCursorstick.h"

void DriverCursorstickInit(void)
{
     368:	cf 93       	push	r28
     36a:	df 93       	push	r29
     36c:	cd b7       	in	r28, 0x3d	; 61
     36e:	de b7       	in	r29, 0x3e	; 62
	//PORTB.PIN3CTRL=
	//PORTB.PIN4CTRL=	
	//PORTB.PIN5CTRL=
	//PORTB.PIN6CTRL=
	//PORTB.PIN7CTRL=
}
     370:	00 00       	nop
     372:	df 91       	pop	r29
     374:	cf 91       	pop	r28
     376:	08 95       	ret

00000378 <DriverLedInit>:
#include "DriverLed.h"

void DriverLedInit(void)
{
     378:	cf 93       	push	r28
     37a:	df 93       	push	r29
     37c:	cd b7       	in	r28, 0x3d	; 61
     37e:	de b7       	in	r29, 0x3e	; 62
	PORTB.DIRSET=0b00000111; // PB0-2 als uitgang zetten
     380:	80 e2       	ldi	r24, 0x20	; 32
     382:	96 e0       	ldi	r25, 0x06	; 6
     384:	27 e0       	ldi	r18, 0x07	; 7
     386:	fc 01       	movw	r30, r24
     388:	21 83       	std	Z+1, r18	; 0x01
	// Logica omdraaien zodat een 1 sturen naar de LED's ze laat branden ipv een 0
	// Zie pagina 133
	PORTB.PIN0CTRL=0b01000000;
     38a:	80 e2       	ldi	r24, 0x20	; 32
     38c:	96 e0       	ldi	r25, 0x06	; 6
     38e:	20 e4       	ldi	r18, 0x40	; 64
     390:	fc 01       	movw	r30, r24
     392:	20 8b       	std	Z+16, r18	; 0x10
	PORTB.PIN1CTRL=0b01000000;
     394:	80 e2       	ldi	r24, 0x20	; 32
     396:	96 e0       	ldi	r25, 0x06	; 6
     398:	20 e4       	ldi	r18, 0x40	; 64
     39a:	fc 01       	movw	r30, r24
     39c:	21 8b       	std	Z+17, r18	; 0x11
	PORTB.PIN2CTRL=0b01000000;
     39e:	80 e2       	ldi	r24, 0x20	; 32
     3a0:	96 e0       	ldi	r25, 0x06	; 6
     3a2:	20 e4       	ldi	r18, 0x40	; 64
     3a4:	fc 01       	movw	r30, r24
     3a6:	22 8b       	std	Z+18, r18	; 0x12
	
	PORTA.DIRSET=0b10000000; // PA7 als uitgang zetten
     3a8:	80 e0       	ldi	r24, 0x00	; 0
     3aa:	96 e0       	ldi	r25, 0x06	; 6
     3ac:	20 e8       	ldi	r18, 0x80	; 128
     3ae:	fc 01       	movw	r30, r24
     3b0:	21 83       	std	Z+1, r18	; 0x01
	// Logica omdraaien zodat een 1 sturen naar de LED's ze laat branden ipv een 0
	// Zie pagina 133
	PORTA.PIN7CTRL=0b01000000;
     3b2:	80 e0       	ldi	r24, 0x00	; 0
     3b4:	96 e0       	ldi	r25, 0x06	; 6
     3b6:	20 e4       	ldi	r18, 0x40	; 64
     3b8:	fc 01       	movw	r30, r24
     3ba:	27 8b       	std	Z+23, r18	; 0x17
}
     3bc:	00 00       	nop
     3be:	df 91       	pop	r29
     3c0:	cf 91       	pop	r28
     3c2:	08 95       	ret

000003c4 <DriverLedWrite>:

void DriverLedWrite(uint8_t LedData)
{	
     3c4:	cf 93       	push	r28
     3c6:	df 93       	push	r29
     3c8:	1f 92       	push	r1
     3ca:	cd b7       	in	r28, 0x3d	; 61
     3cc:	de b7       	in	r29, 0x3e	; 62
     3ce:	89 83       	std	Y+1, r24	; 0x01
	PORTB.OUT = LedData & 0b00000111;	// Alleen de de waarden van PB0-2 overhouden
     3d0:	80 e2       	ldi	r24, 0x20	; 32
     3d2:	96 e0       	ldi	r25, 0x06	; 6
     3d4:	29 81       	ldd	r18, Y+1	; 0x01
     3d6:	27 70       	andi	r18, 0x07	; 7
     3d8:	fc 01       	movw	r30, r24
     3da:	24 83       	std	Z+4, r18	; 0x04
	LedData = LedData<<4; // 4 nullen langs rechts inschuiven om de 4de bit op plaats 8 te krijgen voor PA7
     3dc:	89 81       	ldd	r24, Y+1	; 0x01
     3de:	82 95       	swap	r24
     3e0:	80 7f       	andi	r24, 0xF0	; 240
     3e2:	89 83       	std	Y+1, r24	; 0x01
	PORTA.OUT = LedData & 0b10000000; // Alleen waarde van PA7 overhouden
     3e4:	80 e0       	ldi	r24, 0x00	; 0
     3e6:	96 e0       	ldi	r25, 0x06	; 6
     3e8:	29 81       	ldd	r18, Y+1	; 0x01
     3ea:	20 78       	andi	r18, 0x80	; 128
     3ec:	fc 01       	movw	r30, r24
     3ee:	24 83       	std	Z+4, r18	; 0x04
}
     3f0:	00 00       	nop
     3f2:	0f 90       	pop	r0
     3f4:	df 91       	pop	r29
     3f6:	cf 91       	pop	r28
     3f8:	08 95       	ret

000003fa <DriverMotorInit>:
#include <stdio.h>
#include <stdint.h>


void DriverMotorInit(void)
{
     3fa:	cf 93       	push	r28
     3fc:	df 93       	push	r29
     3fe:	cd b7       	in	r28, 0x3d	; 61
     400:	de b7       	in	r29, 0x3e	; 62

	
	//Encoder 2

	
}
     402:	00 00       	nop
     404:	df 91       	pop	r29
     406:	cf 91       	pop	r28
     408:	08 95       	ret

0000040a <DriverSysClkXtalInit>:
    // Clock setup          
    if (F_XTAL<400E3) return -1; //Invalid frequency
    if (F_XTAL<=2E6) OSC.XOSCCTRL=0b00001011; //Select <2 Mhz XTAL osc, max startup time
    else if(F_XTAL<=9E6) OSC.XOSCCTRL=0b01001011; //Select <2 Mhz XTAL osc, max startup time 
    else if(F_XTAL<=12E6) OSC.XOSCCTRL=0b10001011; //Select <2 Mhz XTAL osc, max startup time 
    else if(F_XTAL<=16E6) OSC.XOSCCTRL=0b11001011; //Select <2 Mhz XTAL osc, max startup time 
     40a:	8b ec       	ldi	r24, 0xCB	; 203
     40c:	80 93 52 00 	sts	0x0052, r24	; 0x800052 <__TEXT_REGION_LENGTH__+0x700052>
    else return -1; //Invalid frequency
    OSC.CTRL=0b01000; //Enable oscillator
     410:	88 e0       	ldi	r24, 0x08	; 8
     412:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <__TEXT_REGION_LENGTH__+0x700050>
    
	//Wait until XTAL osc is ready
    while (!(OSC.STATUS&0b1000)); 
     416:	80 91 51 00 	lds	r24, 0x0051	; 0x800051 <__TEXT_REGION_LENGTH__+0x700051>
     41a:	83 ff       	sbrs	r24, 3
     41c:	fc cf       	rjmp	.-8      	; 0x416 <DriverSysClkXtalInit+0xc>
	{
		//Configure PLL
		Mult=F_CPU/F_XTAL;
		if (Mult>31) return -1; //Invalid frequency; too high
		if (F_XTAL * (uint32_t) Mult !=F_CPU) return -1; //Only supports whole dividers
		OSC.PLLCTRL=0b11000000 | (Mult);
     41e:	82 ec       	ldi	r24, 0xC2	; 194
     420:	80 93 55 00 	sts	0x0055, r24	; 0x800055 <__TEXT_REGION_LENGTH__+0x700055>
		OSC.CTRL=0b00011000; //Enable PLL
     424:	88 e1       	ldi	r24, 0x18	; 24
     426:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <__TEXT_REGION_LENGTH__+0x700050>
		
		//Wait until PLL is ready
		while (!(OSC.STATUS & 0b00010000));
     42a:	80 91 51 00 	lds	r24, 0x0051	; 0x800051 <__TEXT_REGION_LENGTH__+0x700051>
     42e:	84 ff       	sbrs	r24, 4
     430:	fc cf       	rjmp	.-8      	; 0x42a <DriverSysClkXtalInit+0x20>
		
		//Select PLL as system CLK source
		CCP=0xd8;
     432:	88 ed       	ldi	r24, 0xD8	; 216
     434:	84 bf       	out	0x34, r24	; 52
		CLK.CTRL=0b100;
     436:	84 e0       	ldi	r24, 0x04	; 4
     438:	80 93 40 00 	sts	0x0040, r24	; 0x800040 <__TEXT_REGION_LENGTH__+0x700040>
	}
	return 0;
}
     43c:	80 e0       	ldi	r24, 0x00	; 0
     43e:	08 95       	ret

00000440 <DriverTWIMInit>:
	} 
	else 
	{
		return false;
	}
}
     440:	cf 93       	push	r28
     442:	df 93       	push	r29
     444:	cd b7       	in	r28, 0x3d	; 61
     446:	de b7       	in	r29, 0x3e	; 62
     448:	10 92 5b 20 	sts	0x205B, r1	; 0x80205b <Twim_status>
     44c:	80 e8       	ldi	r24, 0x80	; 128
     44e:	96 e0       	ldi	r25, 0x06	; 6
     450:	28 e1       	ldi	r18, 0x18	; 24
     452:	fc 01       	movw	r30, r24
     454:	20 8b       	std	Z+16, r18	; 0x10
     456:	80 e8       	ldi	r24, 0x80	; 128
     458:	96 e0       	ldi	r25, 0x06	; 6
     45a:	28 e1       	ldi	r18, 0x18	; 24
     45c:	fc 01       	movw	r30, r24
     45e:	21 8b       	std	Z+17, r18	; 0x11
     460:	80 ea       	ldi	r24, 0xA0	; 160
     462:	94 e0       	ldi	r25, 0x04	; 4
     464:	28 e7       	ldi	r18, 0x78	; 120
     466:	fc 01       	movw	r30, r24
     468:	21 83       	std	Z+1, r18	; 0x01
     46a:	80 ea       	ldi	r24, 0xA0	; 160
     46c:	94 e0       	ldi	r25, 0x04	; 4
     46e:	23 e2       	ldi	r18, 0x23	; 35
     470:	fc 01       	movw	r30, r24
     472:	25 83       	std	Z+5, r18	; 0x05
     474:	80 ea       	ldi	r24, 0xA0	; 160
     476:	94 e0       	ldi	r25, 0x04	; 4
     478:	21 e0       	ldi	r18, 0x01	; 1
     47a:	fc 01       	movw	r30, r24
     47c:	24 83       	std	Z+4, r18	; 0x04
     47e:	00 00       	nop
     480:	df 91       	pop	r29
     482:	cf 91       	pop	r28
     484:	08 95       	ret

00000486 <TWIMArbitrationLostBusErrorHandler>:

void TWIMArbitrationLostBusErrorHandler()
{
     486:	cf 93       	push	r28
     488:	df 93       	push	r29
     48a:	1f 92       	push	r1
     48c:	cd b7       	in	r28, 0x3d	; 61
     48e:	de b7       	in	r29, 0x3e	; 62
	uint8_t currentStatus = TWIM_BUS.MASTER.STATUS;
     490:	80 ea       	ldi	r24, 0xA0	; 160
     492:	94 e0       	ldi	r25, 0x04	; 4
     494:	fc 01       	movw	r30, r24
     496:	84 81       	ldd	r24, Z+4	; 0x04
     498:	89 83       	std	Y+1, r24	; 0x01

	/* If bus error. */
	if (currentStatus & TWI_MASTER_BUSERR_bm) {
     49a:	89 81       	ldd	r24, Y+1	; 0x01
     49c:	88 2f       	mov	r24, r24
     49e:	90 e0       	ldi	r25, 0x00	; 0
     4a0:	84 70       	andi	r24, 0x04	; 4
     4a2:	99 27       	eor	r25, r25
     4a4:	89 2b       	or	r24, r25
     4a6:	21 f0       	breq	.+8      	; 0x4b0 <TWIMArbitrationLostBusErrorHandler+0x2a>
		Twim_result = TWIM_RESULT_BUS_ERROR;
     4a8:	84 e0       	ldi	r24, 0x04	; 4
     4aa:	80 93 5c 20 	sts	0x205C, r24	; 0x80205c <Twim_result>
     4ae:	03 c0       	rjmp	.+6      	; 0x4b6 <TWIMArbitrationLostBusErrorHandler+0x30>
	}
	/* If arbitration lost. */
	else {
		Twim_result = TWIM_RESULT_ARBITRATION_LOST;
     4b0:	83 e0       	ldi	r24, 0x03	; 3
     4b2:	80 93 5c 20 	sts	0x205C, r24	; 0x80205c <Twim_result>
	}

	/* Clear interrupt flag. */
	TWIM_BUS.MASTER.STATUS = currentStatus | TWI_MASTER_ARBLOST_bm;
     4b6:	80 ea       	ldi	r24, 0xA0	; 160
     4b8:	94 e0       	ldi	r25, 0x04	; 4
     4ba:	29 81       	ldd	r18, Y+1	; 0x01
     4bc:	28 60       	ori	r18, 0x08	; 8
     4be:	fc 01       	movw	r30, r24
     4c0:	24 83       	std	Z+4, r18	; 0x04

	Twim_status = TWIM_STATUS_READY;
     4c2:	10 92 5b 20 	sts	0x205B, r1	; 0x80205b <Twim_status>
}
     4c6:	00 00       	nop
     4c8:	0f 90       	pop	r0
     4ca:	df 91       	pop	r29
     4cc:	cf 91       	pop	r28
     4ce:	08 95       	ret

000004d0 <TWIMWriteHandler>:

void TWIMWriteHandler()
{
     4d0:	cf 93       	push	r28
     4d2:	df 93       	push	r29
     4d4:	00 d0       	rcall	.+0      	; 0x4d6 <TWIMWriteHandler+0x6>
     4d6:	1f 92       	push	r1
     4d8:	cd b7       	in	r28, 0x3d	; 61
     4da:	de b7       	in	r29, 0x3e	; 62
	/* Local variables used in if tests to avoid compiler warning. */
	uint8_t bytesToWrite  = Twim_bytesToWrite;
     4dc:	80 91 57 20 	lds	r24, 0x2057	; 0x802057 <Twim_bytesToWrite>
     4e0:	89 83       	std	Y+1, r24	; 0x01
	uint8_t bytesToRead   = Twim_bytesToRead;
     4e2:	80 91 58 20 	lds	r24, 0x2058	; 0x802058 <Twim_bytesToRead>
     4e6:	8a 83       	std	Y+2, r24	; 0x02

	/* If NOT acknowledged (NACK) by slave cancel the transaction. */
	if (TWIM_BUS.MASTER.STATUS & TWI_MASTER_RXACK_bm) {
     4e8:	80 ea       	ldi	r24, 0xA0	; 160
     4ea:	94 e0       	ldi	r25, 0x04	; 4
     4ec:	fc 01       	movw	r30, r24
     4ee:	84 81       	ldd	r24, Z+4	; 0x04
     4f0:	88 2f       	mov	r24, r24
     4f2:	90 e0       	ldi	r25, 0x00	; 0
     4f4:	80 71       	andi	r24, 0x10	; 16
     4f6:	99 27       	eor	r25, r25
     4f8:	89 2b       	or	r24, r25
     4fa:	59 f0       	breq	.+22     	; 0x512 <TWIMWriteHandler+0x42>
		TWIM_BUS.MASTER.CTRLC = TWI_MASTER_CMD_STOP_gc;
     4fc:	80 ea       	ldi	r24, 0xA0	; 160
     4fe:	94 e0       	ldi	r25, 0x04	; 4
     500:	23 e0       	ldi	r18, 0x03	; 3
     502:	fc 01       	movw	r30, r24
     504:	23 83       	std	Z+3, r18	; 0x03
		Twim_result = TWIM_RESULT_NACK_RECEIVED;
     506:	85 e0       	ldi	r24, 0x05	; 5
     508:	80 93 5c 20 	sts	0x205C, r24	; 0x80205c <Twim_result>
		Twim_status = TWIM_STATUS_READY;
     50c:	10 92 5b 20 	sts	0x205B, r1	; 0x80205b <Twim_status>
	/* If transaction finished, send STOP condition and set RESULT OK. */
	else {
		TWIM_BUS.MASTER.CTRLC = TWI_MASTER_CMD_STOP_gc;
		TWIMTransactionFinished(TWIM_RESULT_OK);
	}
}
     510:	34 c0       	rjmp	.+104    	; 0x57a <TWIMWriteHandler+0xaa>
		Twim_result = TWIM_RESULT_NACK_RECEIVED;
		Twim_status = TWIM_STATUS_READY;
	}

	/* If more bytes to write, send data. */
	else if (Twim_bytesWritten < bytesToWrite) {
     512:	90 91 59 20 	lds	r25, 0x2059	; 0x802059 <Twim_bytesWritten>
     516:	89 81       	ldd	r24, Y+1	; 0x01
     518:	98 17       	cp	r25, r24
     51a:	c0 f4       	brcc	.+48     	; 0x54c <TWIMWriteHandler+0x7c>
		uint8_t data = Twim_writeData[Twim_bytesWritten];
     51c:	20 91 53 20 	lds	r18, 0x2053	; 0x802053 <Twim_writeData>
     520:	30 91 54 20 	lds	r19, 0x2054	; 0x802054 <Twim_writeData+0x1>
     524:	80 91 59 20 	lds	r24, 0x2059	; 0x802059 <Twim_bytesWritten>
     528:	88 2f       	mov	r24, r24
     52a:	90 e0       	ldi	r25, 0x00	; 0
     52c:	82 0f       	add	r24, r18
     52e:	93 1f       	adc	r25, r19
     530:	fc 01       	movw	r30, r24
     532:	80 81       	ld	r24, Z
     534:	8b 83       	std	Y+3, r24	; 0x03
			TWIM_BUS.MASTER.DATA = data;
     536:	80 ea       	ldi	r24, 0xA0	; 160
     538:	94 e0       	ldi	r25, 0x04	; 4
     53a:	2b 81       	ldd	r18, Y+3	; 0x03
     53c:	fc 01       	movw	r30, r24
     53e:	27 83       	std	Z+7, r18	; 0x07
		++Twim_bytesWritten;
     540:	80 91 59 20 	lds	r24, 0x2059	; 0x802059 <Twim_bytesWritten>
     544:	8f 5f       	subi	r24, 0xFF	; 255
     546:	80 93 59 20 	sts	0x2059, r24	; 0x802059 <Twim_bytesWritten>
	/* If transaction finished, send STOP condition and set RESULT OK. */
	else {
		TWIM_BUS.MASTER.CTRLC = TWI_MASTER_CMD_STOP_gc;
		TWIMTransactionFinished(TWIM_RESULT_OK);
	}
}
     54a:	17 c0       	rjmp	.+46     	; 0x57a <TWIMWriteHandler+0xaa>
	}

	/* If bytes to read, send repeated START condition + Address +
	 * 'R/_W = 1'
	 */
	else if (Twim_bytesRead < bytesToRead) {
     54c:	90 91 5a 20 	lds	r25, 0x205A	; 0x80205a <Twim_bytesRead>
     550:	8a 81       	ldd	r24, Y+2	; 0x02
     552:	98 17       	cp	r25, r24
     554:	50 f4       	brcc	.+20     	; 0x56a <TWIMWriteHandler+0x9a>
		uint8_t readAddress = Twim_address | 0x01;
     556:	80 91 52 20 	lds	r24, 0x2052	; 0x802052 <__data_end>
     55a:	81 60       	ori	r24, 0x01	; 1
     55c:	8c 83       	std	Y+4, r24	; 0x04
		TWIM_BUS.MASTER.ADDR = readAddress;
     55e:	80 ea       	ldi	r24, 0xA0	; 160
     560:	94 e0       	ldi	r25, 0x04	; 4
     562:	2c 81       	ldd	r18, Y+4	; 0x04
     564:	fc 01       	movw	r30, r24
     566:	26 83       	std	Z+6, r18	; 0x06
	/* If transaction finished, send STOP condition and set RESULT OK. */
	else {
		TWIM_BUS.MASTER.CTRLC = TWI_MASTER_CMD_STOP_gc;
		TWIMTransactionFinished(TWIM_RESULT_OK);
	}
}
     568:	08 c0       	rjmp	.+16     	; 0x57a <TWIMWriteHandler+0xaa>
		TWIM_BUS.MASTER.ADDR = readAddress;
	}

	/* If transaction finished, send STOP condition and set RESULT OK. */
	else {
		TWIM_BUS.MASTER.CTRLC = TWI_MASTER_CMD_STOP_gc;
     56a:	80 ea       	ldi	r24, 0xA0	; 160
     56c:	94 e0       	ldi	r25, 0x04	; 4
     56e:	23 e0       	ldi	r18, 0x03	; 3
     570:	fc 01       	movw	r30, r24
     572:	23 83       	std	Z+3, r18	; 0x03
		TWIMTransactionFinished(TWIM_RESULT_OK);
     574:	81 e0       	ldi	r24, 0x01	; 1
     576:	0e 94 0a 03 	call	0x614	; 0x614 <TWIMTransactionFinished>
	}
}
     57a:	00 00       	nop
     57c:	24 96       	adiw	r28, 0x04	; 4
     57e:	cd bf       	out	0x3d, r28	; 61
     580:	de bf       	out	0x3e, r29	; 62
     582:	df 91       	pop	r29
     584:	cf 91       	pop	r28
     586:	08 95       	ret

00000588 <TWIMReadHandler>:

void TWIMReadHandler()
{
     588:	cf 93       	push	r28
     58a:	df 93       	push	r29
     58c:	1f 92       	push	r1
     58e:	1f 92       	push	r1
     590:	cd b7       	in	r28, 0x3d	; 61
     592:	de b7       	in	r29, 0x3e	; 62
	/* Fetch data if bytes to be read. */
	if (Twim_bytesRead < TWIM_READ_BUFFER_SIZE) {
     594:	80 91 5a 20 	lds	r24, 0x205A	; 0x80205a <Twim_bytesRead>
     598:	80 32       	cpi	r24, 0x20	; 32
     59a:	c0 f4       	brcc	.+48     	; 0x5cc <TWIMReadHandler+0x44>
		uint8_t data = TWIM_BUS.MASTER.DATA;
     59c:	80 ea       	ldi	r24, 0xA0	; 160
     59e:	94 e0       	ldi	r25, 0x04	; 4
     5a0:	fc 01       	movw	r30, r24
     5a2:	87 81       	ldd	r24, Z+7	; 0x07
     5a4:	89 83       	std	Y+1, r24	; 0x01
		Twim_readData[Twim_bytesRead] = data;
     5a6:	20 91 55 20 	lds	r18, 0x2055	; 0x802055 <Twim_readData>
     5aa:	30 91 56 20 	lds	r19, 0x2056	; 0x802056 <Twim_readData+0x1>
     5ae:	80 91 5a 20 	lds	r24, 0x205A	; 0x80205a <Twim_bytesRead>
     5b2:	88 2f       	mov	r24, r24
     5b4:	90 e0       	ldi	r25, 0x00	; 0
     5b6:	82 0f       	add	r24, r18
     5b8:	93 1f       	adc	r25, r19
     5ba:	29 81       	ldd	r18, Y+1	; 0x01
     5bc:	fc 01       	movw	r30, r24
     5be:	20 83       	st	Z, r18
		Twim_bytesRead++;
     5c0:	80 91 5a 20 	lds	r24, 0x205A	; 0x80205a <Twim_bytesRead>
     5c4:	8f 5f       	subi	r24, 0xFF	; 255
     5c6:	80 93 5a 20 	sts	0x205A, r24	; 0x80205a <Twim_bytesRead>
     5ca:	08 c0       	rjmp	.+16     	; 0x5dc <TWIMReadHandler+0x54>
	}

	/* If buffer overflow, issue STOP and BUFFER_OVERFLOW condition. */
	else {
		TWIM_BUS.MASTER.CTRLC = TWI_MASTER_CMD_STOP_gc;
     5cc:	80 ea       	ldi	r24, 0xA0	; 160
     5ce:	94 e0       	ldi	r25, 0x04	; 4
     5d0:	23 e0       	ldi	r18, 0x03	; 3
     5d2:	fc 01       	movw	r30, r24
     5d4:	23 83       	std	Z+3, r18	; 0x03
		TWIMTransactionFinished(TWIM_RESULT_BUFFER_OVERFLOW);
     5d6:	82 e0       	ldi	r24, 0x02	; 2
     5d8:	0e 94 0a 03 	call	0x614	; 0x614 <TWIMTransactionFinished>
	}

	/* Local variable used in if test to avoid compiler warning. */
	uint8_t bytesToRead = Twim_bytesToRead;
     5dc:	80 91 58 20 	lds	r24, 0x2058	; 0x802058 <Twim_bytesToRead>
     5e0:	8a 83       	std	Y+2, r24	; 0x02

	/* If more bytes to read, issue ACK and start a byte read. */
	if (Twim_bytesRead < bytesToRead) {
     5e2:	90 91 5a 20 	lds	r25, 0x205A	; 0x80205a <Twim_bytesRead>
     5e6:	8a 81       	ldd	r24, Y+2	; 0x02
     5e8:	98 17       	cp	r25, r24
     5ea:	30 f4       	brcc	.+12     	; 0x5f8 <TWIMReadHandler+0x70>
		TWIM_BUS.MASTER.CTRLC = TWI_MASTER_CMD_RECVTRANS_gc;
     5ec:	80 ea       	ldi	r24, 0xA0	; 160
     5ee:	94 e0       	ldi	r25, 0x04	; 4
     5f0:	22 e0       	ldi	r18, 0x02	; 2
     5f2:	fc 01       	movw	r30, r24
     5f4:	23 83       	std	Z+3, r18	; 0x03
	else {
		TWIM_BUS.MASTER.CTRLC = TWI_MASTER_ACKACT_bm |
		                               TWI_MASTER_CMD_STOP_gc;
		TWIMTransactionFinished(TWIM_RESULT_OK);
	}
}
     5f6:	08 c0       	rjmp	.+16     	; 0x608 <TWIMReadHandler+0x80>
		TWIM_BUS.MASTER.CTRLC = TWI_MASTER_CMD_RECVTRANS_gc;
	}

	/* If transaction finished, issue NACK and STOP condition. */
	else {
		TWIM_BUS.MASTER.CTRLC = TWI_MASTER_ACKACT_bm |
     5f8:	80 ea       	ldi	r24, 0xA0	; 160
     5fa:	94 e0       	ldi	r25, 0x04	; 4
     5fc:	27 e0       	ldi	r18, 0x07	; 7
     5fe:	fc 01       	movw	r30, r24
     600:	23 83       	std	Z+3, r18	; 0x03
		                               TWI_MASTER_CMD_STOP_gc;
		TWIMTransactionFinished(TWIM_RESULT_OK);
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	0e 94 0a 03 	call	0x614	; 0x614 <TWIMTransactionFinished>
	}
}
     608:	00 00       	nop
     60a:	0f 90       	pop	r0
     60c:	0f 90       	pop	r0
     60e:	df 91       	pop	r29
     610:	cf 91       	pop	r28
     612:	08 95       	ret

00000614 <TWIMTransactionFinished>:

void TWIMTransactionFinished( uint8_t result)
{
     614:	cf 93       	push	r28
     616:	df 93       	push	r29
     618:	1f 92       	push	r1
     61a:	cd b7       	in	r28, 0x3d	; 61
     61c:	de b7       	in	r29, 0x3e	; 62
     61e:	89 83       	std	Y+1, r24	; 0x01
	Twim_result = result;
     620:	89 81       	ldd	r24, Y+1	; 0x01
     622:	80 93 5c 20 	sts	0x205C, r24	; 0x80205c <Twim_result>
	Twim_status = TWIM_STATUS_READY;
     626:	10 92 5b 20 	sts	0x205B, r1	; 0x80205b <Twim_status>
}
     62a:	00 00       	nop
     62c:	0f 90       	pop	r0
     62e:	df 91       	pop	r29
     630:	cf 91       	pop	r28
     632:	08 95       	ret

00000634 <__vector_46>:

ISR (TWIM_BUS_vect)
{
     634:	1f 92       	push	r1
     636:	0f 92       	push	r0
     638:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     63c:	0f 92       	push	r0
     63e:	11 24       	eor	r1, r1
     640:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     644:	0f 92       	push	r0
     646:	2f 93       	push	r18
     648:	3f 93       	push	r19
     64a:	4f 93       	push	r20
     64c:	5f 93       	push	r21
     64e:	6f 93       	push	r22
     650:	7f 93       	push	r23
     652:	8f 93       	push	r24
     654:	9f 93       	push	r25
     656:	af 93       	push	r26
     658:	bf 93       	push	r27
     65a:	ef 93       	push	r30
     65c:	ff 93       	push	r31
     65e:	cf 93       	push	r28
     660:	df 93       	push	r29
     662:	1f 92       	push	r1
     664:	cd b7       	in	r28, 0x3d	; 61
     666:	de b7       	in	r29, 0x3e	; 62
	uint8_t currentStatus = TWIM_BUS.MASTER.STATUS;
     668:	80 ea       	ldi	r24, 0xA0	; 160
     66a:	94 e0       	ldi	r25, 0x04	; 4
     66c:	fc 01       	movw	r30, r24
     66e:	84 81       	ldd	r24, Z+4	; 0x04
     670:	89 83       	std	Y+1, r24	; 0x01

	/* If arbitration lost or bus error. */
	if ((currentStatus & TWI_MASTER_ARBLOST_bm) ||
     672:	89 81       	ldd	r24, Y+1	; 0x01
     674:	88 2f       	mov	r24, r24
     676:	90 e0       	ldi	r25, 0x00	; 0
     678:	88 70       	andi	r24, 0x08	; 8
     67a:	99 27       	eor	r25, r25
     67c:	89 2b       	or	r24, r25
     67e:	39 f4       	brne	.+14     	; 0x68e <__vector_46+0x5a>
	(currentStatus & TWI_MASTER_BUSERR_bm)) {
     680:	89 81       	ldd	r24, Y+1	; 0x01
     682:	88 2f       	mov	r24, r24
     684:	90 e0       	ldi	r25, 0x00	; 0
     686:	84 70       	andi	r24, 0x04	; 4
     688:	99 27       	eor	r25, r25
ISR (TWIM_BUS_vect)
{
	uint8_t currentStatus = TWIM_BUS.MASTER.STATUS;

	/* If arbitration lost or bus error. */
	if ((currentStatus & TWI_MASTER_ARBLOST_bm) ||
     68a:	89 2b       	or	r24, r25
     68c:	19 f0       	breq	.+6      	; 0x694 <__vector_46+0x60>
	(currentStatus & TWI_MASTER_BUSERR_bm)) {

		TWIMArbitrationLostBusErrorHandler();
     68e:	0e 94 43 02 	call	0x486	; 0x486 <TWIMArbitrationLostBusErrorHandler>
     692:	13 c0       	rjmp	.+38     	; 0x6ba <__vector_46+0x86>
	}

	/* If master write interrupt. */
	else if (currentStatus & TWI_MASTER_WIF_bm) {
     694:	89 81       	ldd	r24, Y+1	; 0x01
     696:	88 2f       	mov	r24, r24
     698:	90 e0       	ldi	r25, 0x00	; 0
     69a:	80 74       	andi	r24, 0x40	; 64
     69c:	99 27       	eor	r25, r25
     69e:	89 2b       	or	r24, r25
     6a0:	19 f0       	breq	.+6      	; 0x6a8 <__vector_46+0x74>
		TWIMWriteHandler();
     6a2:	0e 94 68 02 	call	0x4d0	; 0x4d0 <TWIMWriteHandler>
     6a6:	09 c0       	rjmp	.+18     	; 0x6ba <__vector_46+0x86>
	}

	/* If master read interrupt. */
	else if (currentStatus & TWI_MASTER_RIF_bm) {
     6a8:	89 81       	ldd	r24, Y+1	; 0x01
     6aa:	88 23       	and	r24, r24
     6ac:	1c f4       	brge	.+6      	; 0x6b4 <__vector_46+0x80>
		TWIMReadHandler();
     6ae:	0e 94 c4 02 	call	0x588	; 0x588 <TWIMReadHandler>
     6b2:	03 c0       	rjmp	.+6      	; 0x6ba <__vector_46+0x86>
	}

	/* If unexpected state. */
	else {
		TWIMTransactionFinished(TWIM_RESULT_FAIL);
     6b4:	86 e0       	ldi	r24, 0x06	; 6
     6b6:	0e 94 0a 03 	call	0x614	; 0x614 <TWIMTransactionFinished>
	}
	
	if (Twim_status == TWIM_STATUS_READY) //Transaction finished
     6ba:	80 91 5b 20 	lds	r24, 0x205B	; 0x80205b <Twim_status>
	{	
	}
}
     6be:	00 00       	nop
     6c0:	0f 90       	pop	r0
     6c2:	df 91       	pop	r29
     6c4:	cf 91       	pop	r28
     6c6:	ff 91       	pop	r31
     6c8:	ef 91       	pop	r30
     6ca:	bf 91       	pop	r27
     6cc:	af 91       	pop	r26
     6ce:	9f 91       	pop	r25
     6d0:	8f 91       	pop	r24
     6d2:	7f 91       	pop	r23
     6d4:	6f 91       	pop	r22
     6d6:	5f 91       	pop	r21
     6d8:	4f 91       	pop	r20
     6da:	3f 91       	pop	r19
     6dc:	2f 91       	pop	r18
     6de:	0f 90       	pop	r0
     6e0:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     6e4:	0f 90       	pop	r0
     6e6:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     6ea:	0f 90       	pop	r0
     6ec:	1f 90       	pop	r1
     6ee:	18 95       	reti

000006f0 <DriverUSARTInit>:
static int stdio_putchar(char c, FILE * stream);
static int stdio_getchar(FILE *stream);
static FILE UsartStdio = FDEV_SETUP_STREAM(stdio_putchar, stdio_getchar,_FDEV_SETUP_RW);

void DriverUSARTInit(void)
{
     6f0:	cf 93       	push	r28
     6f2:	df 93       	push	r29
     6f4:	cd b7       	in	r28, 0x3d	; 61
     6f6:	de b7       	in	r29, 0x3e	; 62
	USART_PORT.DIRSET=0b00001000;	
     6f8:	80 e8       	ldi	r24, 0x80	; 128
     6fa:	96 e0       	ldi	r25, 0x06	; 6
     6fc:	28 e0       	ldi	r18, 0x08	; 8
     6fe:	fc 01       	movw	r30, r24
     700:	21 83       	std	Z+1, r18	; 0x01
	USART_PORT.DIRCLR=0b00000100;
     702:	80 e8       	ldi	r24, 0x80	; 128
     704:	96 e0       	ldi	r25, 0x06	; 6
     706:	24 e0       	ldi	r18, 0x04	; 4
     708:	fc 01       	movw	r30, r24
     70a:	22 83       	std	Z+2, r18	; 0x02
	
	USART.CTRLA=0b00000000;
     70c:	80 ea       	ldi	r24, 0xA0	; 160
     70e:	9a e0       	ldi	r25, 0x0A	; 10
     710:	fc 01       	movw	r30, r24
     712:	13 82       	std	Z+3, r1	; 0x03
	USART.CTRLB=0b00011000;
     714:	80 ea       	ldi	r24, 0xA0	; 160
     716:	9a e0       	ldi	r25, 0x0A	; 10
     718:	28 e1       	ldi	r18, 0x18	; 24
     71a:	fc 01       	movw	r30, r24
     71c:	24 83       	std	Z+4, r18	; 0x04
	USART.CTRLC=0b00000011;	
     71e:	80 ea       	ldi	r24, 0xA0	; 160
     720:	9a e0       	ldi	r25, 0x0A	; 10
     722:	23 e0       	ldi	r18, 0x03	; 3
     724:	fc 01       	movw	r30, r24
     726:	25 83       	std	Z+5, r18	; 0x05
	
	USART.BAUDCTRLA=0xE5; //BSEL=3301, BSCALE=-5 19200 baud
     728:	80 ea       	ldi	r24, 0xA0	; 160
     72a:	9a e0       	ldi	r25, 0x0A	; 10
     72c:	25 ee       	ldi	r18, 0xE5	; 229
     72e:	fc 01       	movw	r30, r24
     730:	26 83       	std	Z+6, r18	; 0x06
	USART.BAUDCTRLB=0xBC; 
     732:	80 ea       	ldi	r24, 0xA0	; 160
     734:	9a e0       	ldi	r25, 0x0A	; 10
     736:	2c eb       	ldi	r18, 0xBC	; 188
     738:	fc 01       	movw	r30, r24
     73a:	27 83       	std	Z+7, r18	; 0x07
	
	stdout=&UsartStdio;
     73c:	80 e0       	ldi	r24, 0x00	; 0
     73e:	90 e2       	ldi	r25, 0x20	; 32
     740:	80 93 5f 20 	sts	0x205F, r24	; 0x80205f <__iob+0x2>
     744:	90 93 60 20 	sts	0x2060, r25	; 0x802060 <__iob+0x3>
	stdin=&UsartStdio;
     748:	80 e0       	ldi	r24, 0x00	; 0
     74a:	90 e2       	ldi	r25, 0x20	; 32
     74c:	80 93 5d 20 	sts	0x205D, r24	; 0x80205d <__iob>
     750:	90 93 5e 20 	sts	0x205E, r25	; 0x80205e <__iob+0x1>
}
     754:	00 00       	nop
     756:	df 91       	pop	r29
     758:	cf 91       	pop	r28
     75a:	08 95       	ret

0000075c <stdio_putchar>:


static int stdio_putchar(char c, FILE * stream)
{
     75c:	cf 93       	push	r28
     75e:	df 93       	push	r29
     760:	00 d0       	rcall	.+0      	; 0x762 <stdio_putchar+0x6>
     762:	cd b7       	in	r28, 0x3d	; 61
     764:	de b7       	in	r29, 0x3e	; 62
     766:	89 83       	std	Y+1, r24	; 0x01
     768:	6a 83       	std	Y+2, r22	; 0x02
     76a:	7b 83       	std	Y+3, r23	; 0x03
	USART.DATA = c;
     76c:	80 ea       	ldi	r24, 0xA0	; 160
     76e:	9a e0       	ldi	r25, 0x0A	; 10
     770:	29 81       	ldd	r18, Y+1	; 0x01
     772:	fc 01       	movw	r30, r24
     774:	20 83       	st	Z, r18
	while (!(USART.STATUS & 0b01000000));
     776:	00 00       	nop
     778:	80 ea       	ldi	r24, 0xA0	; 160
     77a:	9a e0       	ldi	r25, 0x0A	; 10
     77c:	fc 01       	movw	r30, r24
     77e:	81 81       	ldd	r24, Z+1	; 0x01
     780:	88 2f       	mov	r24, r24
     782:	90 e0       	ldi	r25, 0x00	; 0
     784:	80 74       	andi	r24, 0x40	; 64
     786:	99 27       	eor	r25, r25
     788:	89 2b       	or	r24, r25
     78a:	b1 f3       	breq	.-20     	; 0x778 <stdio_putchar+0x1c>
	USART.STATUS=0b01000000;
     78c:	80 ea       	ldi	r24, 0xA0	; 160
     78e:	9a e0       	ldi	r25, 0x0A	; 10
     790:	20 e4       	ldi	r18, 0x40	; 64
     792:	fc 01       	movw	r30, r24
     794:	21 83       	std	Z+1, r18	; 0x01
	return 0;
     796:	80 e0       	ldi	r24, 0x00	; 0
     798:	90 e0       	ldi	r25, 0x00	; 0
}
     79a:	23 96       	adiw	r28, 0x03	; 3
     79c:	cd bf       	out	0x3d, r28	; 61
     79e:	de bf       	out	0x3e, r29	; 62
     7a0:	df 91       	pop	r29
     7a2:	cf 91       	pop	r28
     7a4:	08 95       	ret

000007a6 <stdio_getchar>:
	
static int stdio_getchar(FILE *stream)
{
     7a6:	cf 93       	push	r28
     7a8:	df 93       	push	r29
     7aa:	1f 92       	push	r1
     7ac:	1f 92       	push	r1
     7ae:	cd b7       	in	r28, 0x3d	; 61
     7b0:	de b7       	in	r29, 0x3e	; 62
     7b2:	89 83       	std	Y+1, r24	; 0x01
     7b4:	9a 83       	std	Y+2, r25	; 0x02
	while (!(USART.STATUS & 0b10000000));
     7b6:	00 00       	nop
     7b8:	80 ea       	ldi	r24, 0xA0	; 160
     7ba:	9a e0       	ldi	r25, 0x0A	; 10
     7bc:	fc 01       	movw	r30, r24
     7be:	81 81       	ldd	r24, Z+1	; 0x01
     7c0:	88 23       	and	r24, r24
     7c2:	d4 f7       	brge	.-12     	; 0x7b8 <stdio_getchar+0x12>
	return USART.DATA;
     7c4:	80 ea       	ldi	r24, 0xA0	; 160
     7c6:	9a e0       	ldi	r25, 0x0A	; 10
     7c8:	fc 01       	movw	r30, r24
     7ca:	80 81       	ld	r24, Z
     7cc:	88 2f       	mov	r24, r24
     7ce:	90 e0       	ldi	r25, 0x00	; 0
}
     7d0:	0f 90       	pop	r0
     7d2:	0f 90       	pop	r0
     7d4:	df 91       	pop	r29
     7d6:	cf 91       	pop	r28
     7d8:	08 95       	ret

000007da <main>:
	for (a=0;a<10;a++)
	{
		sprintf(text,"Counter:%d\r",a);
		puts(text);
	}
}
     7da:	cf 93       	push	r28
     7dc:	df 93       	push	r29
     7de:	cd b7       	in	r28, 0x3d	; 61
     7e0:	de b7       	in	r29, 0x3e	; 62
     7e2:	2e 97       	sbiw	r28, 0x0e	; 14
     7e4:	cd bf       	out	0x3d, r28	; 61
     7e6:	de bf       	out	0x3e, r29	; 62
     7e8:	0e 94 05 02 	call	0x40a	; 0x40a <DriverSysClkXtalInit>
     7ec:	0e 94 78 03 	call	0x6f0	; 0x6f0 <DriverUSARTInit>
     7f0:	0e 94 20 02 	call	0x440	; 0x440 <DriverTWIMInit>
     7f4:	0e 94 b4 01 	call	0x368	; 0x368 <DriverCursorstickInit>
     7f8:	0e 94 bc 01 	call	0x378	; 0x378 <DriverLedInit>
     7fc:	0e 94 57 06 	call	0xcae	; 0xcae <DriverPowerInit>
     800:	0e 94 ac 01 	call	0x358	; 0x358 <DriverAdcInit>
     804:	0e 94 fd 01 	call	0x3fa	; 0x3fa <DriverMotorInit>
     808:	81 e0       	ldi	r24, 0x01	; 1
     80a:	0e 94 5b 06 	call	0xcb6	; 0xcb6 <DriverPowerVccAuxSet>
     80e:	80 e0       	ldi	r24, 0x00	; 0
     810:	90 e0       	ldi	r25, 0x00	; 0
     812:	aa ef       	ldi	r26, 0xFA	; 250
     814:	b3 e4       	ldi	r27, 0x43	; 67
     816:	89 83       	std	Y+1, r24	; 0x01
     818:	9a 83       	std	Y+2, r25	; 0x02
     81a:	ab 83       	std	Y+3, r26	; 0x03
     81c:	bc 83       	std	Y+4, r27	; 0x04
     81e:	20 e0       	ldi	r18, 0x00	; 0
     820:	30 e0       	ldi	r19, 0x00	; 0
     822:	4a ef       	ldi	r20, 0xFA	; 250
     824:	55 e4       	ldi	r21, 0x45	; 69
     826:	69 81       	ldd	r22, Y+1	; 0x01
     828:	7a 81       	ldd	r23, Y+2	; 0x02
     82a:	8b 81       	ldd	r24, Y+3	; 0x03
     82c:	9c 81       	ldd	r25, Y+4	; 0x04
     82e:	0e 94 c2 05 	call	0xb84	; 0xb84 <__mulsf3>
     832:	dc 01       	movw	r26, r24
     834:	cb 01       	movw	r24, r22
     836:	8d 83       	std	Y+5, r24	; 0x05
     838:	9e 83       	std	Y+6, r25	; 0x06
     83a:	af 83       	std	Y+7, r26	; 0x07
     83c:	b8 87       	std	Y+8, r27	; 0x08
     83e:	20 e0       	ldi	r18, 0x00	; 0
     840:	30 e0       	ldi	r19, 0x00	; 0
     842:	40 e8       	ldi	r20, 0x80	; 128
     844:	5f e3       	ldi	r21, 0x3F	; 63
     846:	6d 81       	ldd	r22, Y+5	; 0x05
     848:	7e 81       	ldd	r23, Y+6	; 0x06
     84a:	8f 81       	ldd	r24, Y+7	; 0x07
     84c:	98 85       	ldd	r25, Y+8	; 0x08
     84e:	0e 94 3c 05 	call	0xa78	; 0xa78 <__cmpsf2>
     852:	88 23       	and	r24, r24
     854:	2c f4       	brge	.+10     	; 0x860 <main+0x86>
     856:	81 e0       	ldi	r24, 0x01	; 1
     858:	90 e0       	ldi	r25, 0x00	; 0
     85a:	89 87       	std	Y+9, r24	; 0x09
     85c:	9a 87       	std	Y+10, r25	; 0x0a
     85e:	3f c0       	rjmp	.+126    	; 0x8de <main+0x104>
     860:	20 e0       	ldi	r18, 0x00	; 0
     862:	3f ef       	ldi	r19, 0xFF	; 255
     864:	4f e7       	ldi	r20, 0x7F	; 127
     866:	57 e4       	ldi	r21, 0x47	; 71
     868:	6d 81       	ldd	r22, Y+5	; 0x05
     86a:	7e 81       	ldd	r23, Y+6	; 0x06
     86c:	8f 81       	ldd	r24, Y+7	; 0x07
     86e:	98 85       	ldd	r25, Y+8	; 0x08
     870:	0e 94 bd 05 	call	0xb7a	; 0xb7a <__gesf2>
     874:	18 16       	cp	r1, r24
     876:	4c f5       	brge	.+82     	; 0x8ca <main+0xf0>
     878:	20 e0       	ldi	r18, 0x00	; 0
     87a:	30 e0       	ldi	r19, 0x00	; 0
     87c:	40 e2       	ldi	r20, 0x20	; 32
     87e:	51 e4       	ldi	r21, 0x41	; 65
     880:	69 81       	ldd	r22, Y+1	; 0x01
     882:	7a 81       	ldd	r23, Y+2	; 0x02
     884:	8b 81       	ldd	r24, Y+3	; 0x03
     886:	9c 81       	ldd	r25, Y+4	; 0x04
     888:	0e 94 c2 05 	call	0xb84	; 0xb84 <__mulsf3>
     88c:	dc 01       	movw	r26, r24
     88e:	cb 01       	movw	r24, r22
     890:	bc 01       	movw	r22, r24
     892:	cd 01       	movw	r24, r26
     894:	0e 94 41 05 	call	0xa82	; 0xa82 <__fixunssfsi>
     898:	dc 01       	movw	r26, r24
     89a:	cb 01       	movw	r24, r22
     89c:	89 87       	std	Y+9, r24	; 0x09
     89e:	9a 87       	std	Y+10, r25	; 0x0a
     8a0:	0f c0       	rjmp	.+30     	; 0x8c0 <main+0xe6>
     8a2:	80 e2       	ldi	r24, 0x20	; 32
     8a4:	93 e0       	ldi	r25, 0x03	; 3
     8a6:	8b 87       	std	Y+11, r24	; 0x0b
     8a8:	9c 87       	std	Y+12, r25	; 0x0c
     8aa:	8b 85       	ldd	r24, Y+11	; 0x0b
     8ac:	9c 85       	ldd	r25, Y+12	; 0x0c
     8ae:	01 97       	sbiw	r24, 0x01	; 1
     8b0:	f1 f7       	brne	.-4      	; 0x8ae <main+0xd4>
     8b2:	8b 87       	std	Y+11, r24	; 0x0b
     8b4:	9c 87       	std	Y+12, r25	; 0x0c
     8b6:	89 85       	ldd	r24, Y+9	; 0x09
     8b8:	9a 85       	ldd	r25, Y+10	; 0x0a
     8ba:	01 97       	sbiw	r24, 0x01	; 1
     8bc:	89 87       	std	Y+9, r24	; 0x09
     8be:	9a 87       	std	Y+10, r25	; 0x0a
     8c0:	89 85       	ldd	r24, Y+9	; 0x09
     8c2:	9a 85       	ldd	r25, Y+10	; 0x0a
     8c4:	89 2b       	or	r24, r25
     8c6:	69 f7       	brne	.-38     	; 0x8a2 <main+0xc8>
     8c8:	14 c0       	rjmp	.+40     	; 0x8f2 <main+0x118>
     8ca:	6d 81       	ldd	r22, Y+5	; 0x05
     8cc:	7e 81       	ldd	r23, Y+6	; 0x06
     8ce:	8f 81       	ldd	r24, Y+7	; 0x07
     8d0:	98 85       	ldd	r25, Y+8	; 0x08
     8d2:	0e 94 41 05 	call	0xa82	; 0xa82 <__fixunssfsi>
     8d6:	dc 01       	movw	r26, r24
     8d8:	cb 01       	movw	r24, r22
     8da:	89 87       	std	Y+9, r24	; 0x09
     8dc:	9a 87       	std	Y+10, r25	; 0x0a
     8de:	89 85       	ldd	r24, Y+9	; 0x09
     8e0:	9a 85       	ldd	r25, Y+10	; 0x0a
     8e2:	8d 87       	std	Y+13, r24	; 0x0d
     8e4:	9e 87       	std	Y+14, r25	; 0x0e
     8e6:	8d 85       	ldd	r24, Y+13	; 0x0d
     8e8:	9e 85       	ldd	r25, Y+14	; 0x0e
     8ea:	01 97       	sbiw	r24, 0x01	; 1
     8ec:	f1 f7       	brne	.-4      	; 0x8ea <main+0x110>
     8ee:	8d 87       	std	Y+13, r24	; 0x0d
     8f0:	9e 87       	std	Y+14, r25	; 0x0e
     8f2:	8f e3       	ldi	r24, 0x3F	; 63
     8f4:	90 e0       	ldi	r25, 0x00	; 0
     8f6:	20 e8       	ldi	r18, 0x80	; 128
     8f8:	fc 01       	movw	r30, r24
     8fa:	20 83       	st	Z, r18
     8fc:	80 ea       	ldi	r24, 0xA0	; 160
     8fe:	90 e0       	ldi	r25, 0x00	; 0
     900:	27 e0       	ldi	r18, 0x07	; 7
     902:	fc 01       	movw	r30, r24
     904:	22 83       	std	Z+2, r18	; 0x02
     906:	80 e0       	ldi	r24, 0x00	; 0
     908:	98 e0       	ldi	r25, 0x08	; 8
     90a:	27 e0       	ldi	r18, 0x07	; 7
     90c:	fc 01       	movw	r30, r24
     90e:	20 83       	st	Z, r18
     910:	80 e0       	ldi	r24, 0x00	; 0
     912:	98 e0       	ldi	r25, 0x08	; 8
     914:	fc 01       	movw	r30, r24
     916:	11 82       	std	Z+1, r1	; 0x01
     918:	80 e0       	ldi	r24, 0x00	; 0
     91a:	98 e0       	ldi	r25, 0x08	; 8
     91c:	fc 01       	movw	r30, r24
     91e:	13 82       	std	Z+3, r1	; 0x03
     920:	80 e0       	ldi	r24, 0x00	; 0
     922:	98 e0       	ldi	r25, 0x08	; 8
     924:	23 e0       	ldi	r18, 0x03	; 3
     926:	fc 01       	movw	r30, r24
     928:	26 83       	std	Z+6, r18	; 0x06
     92a:	80 e0       	ldi	r24, 0x00	; 0
     92c:	98 e0       	ldi	r25, 0x08	; 8
     92e:	29 e0       	ldi	r18, 0x09	; 9
     930:	3d e3       	ldi	r19, 0x3D	; 61
     932:	fc 01       	movw	r30, r24
     934:	26 a3       	std	Z+38, r18	; 0x26
     936:	37 a3       	std	Z+39, r19	; 0x27
     938:	0e 94 9f 04 	call	0x93e	; 0x93e <LoopLicht>
     93c:	fd cf       	rjmp	.-6      	; 0x938 <main+0x15e>

0000093e <LoopLicht>:


void LoopLicht(void)
{	
     93e:	cf 93       	push	r28
     940:	df 93       	push	r29
     942:	cd b7       	in	r28, 0x3d	; 61
     944:	de b7       	in	r29, 0x3e	; 62
	while(1) {
		scanf("%s", &RichtingString); // Waarde inlezen en in Richting zetten
     946:	8e e0       	ldi	r24, 0x0E	; 14
     948:	90 e2       	ldi	r25, 0x20	; 32
     94a:	89 2f       	mov	r24, r25
     94c:	8f 93       	push	r24
     94e:	8e e0       	ldi	r24, 0x0E	; 14
     950:	90 e2       	ldi	r25, 0x20	; 32
     952:	8f 93       	push	r24
     954:	8d e2       	ldi	r24, 0x2D	; 45
     956:	90 e2       	ldi	r25, 0x20	; 32
     958:	89 2f       	mov	r24, r25
     95a:	8f 93       	push	r24
     95c:	8d e2       	ldi	r24, 0x2D	; 45
     95e:	90 e2       	ldi	r25, 0x20	; 32
     960:	8f 93       	push	r24
     962:	0e 94 38 0b 	call	0x1670	; 0x1670 <scanf>
     966:	0f 90       	pop	r0
     968:	0f 90       	pop	r0
     96a:	0f 90       	pop	r0
     96c:	0f 90       	pop	r0
		if (strcmp(RichtingString, "looplicht_links") == 0) {
     96e:	60 e3       	ldi	r22, 0x30	; 48
     970:	70 e2       	ldi	r23, 0x20	; 32
     972:	8e e0       	ldi	r24, 0x0E	; 14
     974:	90 e2       	ldi	r25, 0x20	; 32
     976:	0e 94 e8 0a 	call	0x15d0	; 0x15d0 <strcmp>
     97a:	89 2b       	or	r24, r25
     97c:	39 f4       	brne	.+14     	; 0x98c <LoopLicht+0x4e>
			RichtingInt = 1;
     97e:	81 e0       	ldi	r24, 0x01	; 1
     980:	90 e0       	ldi	r25, 0x00	; 0
     982:	80 93 1e 20 	sts	0x201E, r24	; 0x80201e <RichtingInt>
     986:	90 93 1f 20 	sts	0x201F, r25	; 0x80201f <RichtingInt+0x1>
     98a:	dd cf       	rjmp	.-70     	; 0x946 <LoopLicht+0x8>
		} else if (strcmp(RichtingString,  "looplicht_rechts") == 0 ) {
     98c:	60 e4       	ldi	r22, 0x40	; 64
     98e:	70 e2       	ldi	r23, 0x20	; 32
     990:	8e e0       	ldi	r24, 0x0E	; 14
     992:	90 e2       	ldi	r25, 0x20	; 32
     994:	0e 94 e8 0a 	call	0x15d0	; 0x15d0 <strcmp>
     998:	89 2b       	or	r24, r25
     99a:	39 f4       	brne	.+14     	; 0x9aa <LoopLicht+0x6c>
			RichtingInt = 2;
     99c:	82 e0       	ldi	r24, 0x02	; 2
     99e:	90 e0       	ldi	r25, 0x00	; 0
     9a0:	80 93 1e 20 	sts	0x201E, r24	; 0x80201e <RichtingInt>
     9a4:	90 93 1f 20 	sts	0x201F, r25	; 0x80201f <RichtingInt+0x1>
     9a8:	ce cf       	rjmp	.-100    	; 0x946 <LoopLicht+0x8>
		} else {
			RichtingInt = 3;
     9aa:	83 e0       	ldi	r24, 0x03	; 3
     9ac:	90 e0       	ldi	r25, 0x00	; 0
     9ae:	80 93 1e 20 	sts	0x201E, r24	; 0x80201e <RichtingInt>
     9b2:	90 93 1f 20 	sts	0x201F, r25	; 0x80201f <RichtingInt+0x1>
		}
	}
     9b6:	c7 cf       	rjmp	.-114    	; 0x946 <LoopLicht+0x8>

000009b8 <__vector_14>:
}

// Als de timer overflowt wordt de interrupt geactiveerd
ISR(TCC0_OVF_vect) {
     9b8:	1f 92       	push	r1
     9ba:	0f 92       	push	r0
     9bc:	00 90 3f 00 	lds	r0, 0x003F	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     9c0:	0f 92       	push	r0
     9c2:	11 24       	eor	r1, r1
     9c4:	00 90 3b 00 	lds	r0, 0x003B	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     9c8:	0f 92       	push	r0
     9ca:	2f 93       	push	r18
     9cc:	3f 93       	push	r19
     9ce:	4f 93       	push	r20
     9d0:	5f 93       	push	r21
     9d2:	6f 93       	push	r22
     9d4:	7f 93       	push	r23
     9d6:	8f 93       	push	r24
     9d8:	9f 93       	push	r25
     9da:	af 93       	push	r26
     9dc:	bf 93       	push	r27
     9de:	ef 93       	push	r30
     9e0:	ff 93       	push	r31
     9e2:	cf 93       	push	r28
     9e4:	df 93       	push	r29
     9e6:	cd b7       	in	r28, 0x3d	; 61
     9e8:	de b7       	in	r29, 0x3e	; 62
	DriverLedWrite(LedData); // LedData doorgeven om LED's aan te sturen
     9ea:	80 91 20 20 	lds	r24, 0x2020	; 0x802020 <LedData>
     9ee:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <DriverLedWrite>
	if (RichtingInt == 1) {
     9f2:	80 91 1e 20 	lds	r24, 0x201E	; 0x80201e <RichtingInt>
     9f6:	90 91 1f 20 	lds	r25, 0x201F	; 0x80201f <RichtingInt+0x1>
     9fa:	01 97       	sbiw	r24, 0x01	; 1
     9fc:	71 f4       	brne	.+28     	; 0xa1a <__vector_14+0x62>
		if (LedData == 0b1000) {
     9fe:	80 91 20 20 	lds	r24, 0x2020	; 0x802020 <LedData>
     a02:	88 30       	cpi	r24, 0x08	; 8
     a04:	21 f4       	brne	.+8      	; 0xa0e <__vector_14+0x56>
			LedData = 0b0001; // Laatste Led is bereikt dus we gaan terug naar de eerste
     a06:	81 e0       	ldi	r24, 0x01	; 1
     a08:	80 93 20 20 	sts	0x2020, r24	; 0x802020 <LedData>
			LedData = LedData>>1; // Naar de volgende LED gaan, door een 0 links in te voegen (rechts shiften)
		} 
	} else { // Zo kan ik makkelijk zien of er een error is
		LedData = 0b1111;
	}
}
     a0c:	1d c0       	rjmp	.+58     	; 0xa48 <__vector_14+0x90>
	DriverLedWrite(LedData); // LedData doorgeven om LED's aan te sturen
	if (RichtingInt == 1) {
		if (LedData == 0b1000) {
			LedData = 0b0001; // Laatste Led is bereikt dus we gaan terug naar de eerste
		} else {
			LedData = LedData<<1; // Naar de volgende LED gaan, door een 0 rechts in te voegen (links shiften)
     a0e:	80 91 20 20 	lds	r24, 0x2020	; 0x802020 <LedData>
     a12:	88 0f       	add	r24, r24
     a14:	80 93 20 20 	sts	0x2020, r24	; 0x802020 <LedData>
			LedData = LedData>>1; // Naar de volgende LED gaan, door een 0 links in te voegen (rechts shiften)
		} 
	} else { // Zo kan ik makkelijk zien of er een error is
		LedData = 0b1111;
	}
}
     a18:	17 c0       	rjmp	.+46     	; 0xa48 <__vector_14+0x90>
		if (LedData == 0b1000) {
			LedData = 0b0001; // Laatste Led is bereikt dus we gaan terug naar de eerste
		} else {
			LedData = LedData<<1; // Naar de volgende LED gaan, door een 0 rechts in te voegen (links shiften)
		}
	} else if (RichtingInt == 2){
     a1a:	80 91 1e 20 	lds	r24, 0x201E	; 0x80201e <RichtingInt>
     a1e:	90 91 1f 20 	lds	r25, 0x201F	; 0x80201f <RichtingInt+0x1>
     a22:	02 97       	sbiw	r24, 0x02	; 2
     a24:	71 f4       	brne	.+28     	; 0xa42 <__vector_14+0x8a>
		if (LedData == 0b0001) {
     a26:	80 91 20 20 	lds	r24, 0x2020	; 0x802020 <LedData>
     a2a:	81 30       	cpi	r24, 0x01	; 1
     a2c:	21 f4       	brne	.+8      	; 0xa36 <__vector_14+0x7e>
			LedData = 0b1000; // Laatste Led is bereikt dus we gaan terug naar de eerste
     a2e:	88 e0       	ldi	r24, 0x08	; 8
     a30:	80 93 20 20 	sts	0x2020, r24	; 0x802020 <LedData>
			LedData = LedData>>1; // Naar de volgende LED gaan, door een 0 links in te voegen (rechts shiften)
		} 
	} else { // Zo kan ik makkelijk zien of er een error is
		LedData = 0b1111;
	}
}
     a34:	09 c0       	rjmp	.+18     	; 0xa48 <__vector_14+0x90>
		}
	} else if (RichtingInt == 2){
		if (LedData == 0b0001) {
			LedData = 0b1000; // Laatste Led is bereikt dus we gaan terug naar de eerste
		} else {
			LedData = LedData>>1; // Naar de volgende LED gaan, door een 0 links in te voegen (rechts shiften)
     a36:	80 91 20 20 	lds	r24, 0x2020	; 0x802020 <LedData>
     a3a:	86 95       	lsr	r24
     a3c:	80 93 20 20 	sts	0x2020, r24	; 0x802020 <LedData>
		} 
	} else { // Zo kan ik makkelijk zien of er een error is
		LedData = 0b1111;
	}
}
     a40:	03 c0       	rjmp	.+6      	; 0xa48 <__vector_14+0x90>
			LedData = 0b1000; // Laatste Led is bereikt dus we gaan terug naar de eerste
		} else {
			LedData = LedData>>1; // Naar de volgende LED gaan, door een 0 links in te voegen (rechts shiften)
		} 
	} else { // Zo kan ik makkelijk zien of er een error is
		LedData = 0b1111;
     a42:	8f e0       	ldi	r24, 0x0F	; 15
     a44:	80 93 20 20 	sts	0x2020, r24	; 0x802020 <LedData>
	}
}
     a48:	00 00       	nop
     a4a:	df 91       	pop	r29
     a4c:	cf 91       	pop	r28
     a4e:	ff 91       	pop	r31
     a50:	ef 91       	pop	r30
     a52:	bf 91       	pop	r27
     a54:	af 91       	pop	r26
     a56:	9f 91       	pop	r25
     a58:	8f 91       	pop	r24
     a5a:	7f 91       	pop	r23
     a5c:	6f 91       	pop	r22
     a5e:	5f 91       	pop	r21
     a60:	4f 91       	pop	r20
     a62:	3f 91       	pop	r19
     a64:	2f 91       	pop	r18
     a66:	0f 90       	pop	r0
     a68:	00 92 3b 00 	sts	0x003B, r0	; 0x80003b <__TEXT_REGION_LENGTH__+0x70003b>
     a6c:	0f 90       	pop	r0
     a6e:	00 92 3f 00 	sts	0x003F, r0	; 0x80003f <__TEXT_REGION_LENGTH__+0x70003f>
     a72:	0f 90       	pop	r0
     a74:	1f 90       	pop	r1
     a76:	18 95       	reti

00000a78 <__cmpsf2>:
     a78:	0e 94 70 05 	call	0xae0	; 0xae0 <__fp_cmp>
     a7c:	08 f4       	brcc	.+2      	; 0xa80 <__cmpsf2+0x8>
     a7e:	81 e0       	ldi	r24, 0x01	; 1
     a80:	08 95       	ret

00000a82 <__fixunssfsi>:
     a82:	0e 94 9c 05 	call	0xb38	; 0xb38 <__fp_splitA>
     a86:	88 f0       	brcs	.+34     	; 0xaaa <__fixunssfsi+0x28>
     a88:	9f 57       	subi	r25, 0x7F	; 127
     a8a:	98 f0       	brcs	.+38     	; 0xab2 <__fixunssfsi+0x30>
     a8c:	b9 2f       	mov	r27, r25
     a8e:	99 27       	eor	r25, r25
     a90:	b7 51       	subi	r27, 0x17	; 23
     a92:	b0 f0       	brcs	.+44     	; 0xac0 <__fixunssfsi+0x3e>
     a94:	e1 f0       	breq	.+56     	; 0xace <__fixunssfsi+0x4c>
     a96:	66 0f       	add	r22, r22
     a98:	77 1f       	adc	r23, r23
     a9a:	88 1f       	adc	r24, r24
     a9c:	99 1f       	adc	r25, r25
     a9e:	1a f0       	brmi	.+6      	; 0xaa6 <__fixunssfsi+0x24>
     aa0:	ba 95       	dec	r27
     aa2:	c9 f7       	brne	.-14     	; 0xa96 <__fixunssfsi+0x14>
     aa4:	14 c0       	rjmp	.+40     	; 0xace <__fixunssfsi+0x4c>
     aa6:	b1 30       	cpi	r27, 0x01	; 1
     aa8:	91 f0       	breq	.+36     	; 0xace <__fixunssfsi+0x4c>
     aaa:	0e 94 b6 05 	call	0xb6c	; 0xb6c <__fp_zero>
     aae:	b1 e0       	ldi	r27, 0x01	; 1
     ab0:	08 95       	ret
     ab2:	0c 94 b6 05 	jmp	0xb6c	; 0xb6c <__fp_zero>
     ab6:	67 2f       	mov	r22, r23
     ab8:	78 2f       	mov	r23, r24
     aba:	88 27       	eor	r24, r24
     abc:	b8 5f       	subi	r27, 0xF8	; 248
     abe:	39 f0       	breq	.+14     	; 0xace <__fixunssfsi+0x4c>
     ac0:	b9 3f       	cpi	r27, 0xF9	; 249
     ac2:	cc f3       	brlt	.-14     	; 0xab6 <__fixunssfsi+0x34>
     ac4:	86 95       	lsr	r24
     ac6:	77 95       	ror	r23
     ac8:	67 95       	ror	r22
     aca:	b3 95       	inc	r27
     acc:	d9 f7       	brne	.-10     	; 0xac4 <__fixunssfsi+0x42>
     ace:	3e f4       	brtc	.+14     	; 0xade <__fixunssfsi+0x5c>
     ad0:	90 95       	com	r25
     ad2:	80 95       	com	r24
     ad4:	70 95       	com	r23
     ad6:	61 95       	neg	r22
     ad8:	7f 4f       	sbci	r23, 0xFF	; 255
     ada:	8f 4f       	sbci	r24, 0xFF	; 255
     adc:	9f 4f       	sbci	r25, 0xFF	; 255
     ade:	08 95       	ret

00000ae0 <__fp_cmp>:
     ae0:	99 0f       	add	r25, r25
     ae2:	00 08       	sbc	r0, r0
     ae4:	55 0f       	add	r21, r21
     ae6:	aa 0b       	sbc	r26, r26
     ae8:	e0 e8       	ldi	r30, 0x80	; 128
     aea:	fe ef       	ldi	r31, 0xFE	; 254
     aec:	16 16       	cp	r1, r22
     aee:	17 06       	cpc	r1, r23
     af0:	e8 07       	cpc	r30, r24
     af2:	f9 07       	cpc	r31, r25
     af4:	c0 f0       	brcs	.+48     	; 0xb26 <__fp_cmp+0x46>
     af6:	12 16       	cp	r1, r18
     af8:	13 06       	cpc	r1, r19
     afa:	e4 07       	cpc	r30, r20
     afc:	f5 07       	cpc	r31, r21
     afe:	98 f0       	brcs	.+38     	; 0xb26 <__fp_cmp+0x46>
     b00:	62 1b       	sub	r22, r18
     b02:	73 0b       	sbc	r23, r19
     b04:	84 0b       	sbc	r24, r20
     b06:	95 0b       	sbc	r25, r21
     b08:	39 f4       	brne	.+14     	; 0xb18 <__fp_cmp+0x38>
     b0a:	0a 26       	eor	r0, r26
     b0c:	61 f0       	breq	.+24     	; 0xb26 <__fp_cmp+0x46>
     b0e:	23 2b       	or	r18, r19
     b10:	24 2b       	or	r18, r20
     b12:	25 2b       	or	r18, r21
     b14:	21 f4       	brne	.+8      	; 0xb1e <__fp_cmp+0x3e>
     b16:	08 95       	ret
     b18:	0a 26       	eor	r0, r26
     b1a:	09 f4       	brne	.+2      	; 0xb1e <__fp_cmp+0x3e>
     b1c:	a1 40       	sbci	r26, 0x01	; 1
     b1e:	a6 95       	lsr	r26
     b20:	8f ef       	ldi	r24, 0xFF	; 255
     b22:	81 1d       	adc	r24, r1
     b24:	81 1d       	adc	r24, r1
     b26:	08 95       	ret

00000b28 <__fp_split3>:
     b28:	57 fd       	sbrc	r21, 7
     b2a:	90 58       	subi	r25, 0x80	; 128
     b2c:	44 0f       	add	r20, r20
     b2e:	55 1f       	adc	r21, r21
     b30:	59 f0       	breq	.+22     	; 0xb48 <__fp_splitA+0x10>
     b32:	5f 3f       	cpi	r21, 0xFF	; 255
     b34:	71 f0       	breq	.+28     	; 0xb52 <__fp_splitA+0x1a>
     b36:	47 95       	ror	r20

00000b38 <__fp_splitA>:
     b38:	88 0f       	add	r24, r24
     b3a:	97 fb       	bst	r25, 7
     b3c:	99 1f       	adc	r25, r25
     b3e:	61 f0       	breq	.+24     	; 0xb58 <__fp_splitA+0x20>
     b40:	9f 3f       	cpi	r25, 0xFF	; 255
     b42:	79 f0       	breq	.+30     	; 0xb62 <__fp_splitA+0x2a>
     b44:	87 95       	ror	r24
     b46:	08 95       	ret
     b48:	12 16       	cp	r1, r18
     b4a:	13 06       	cpc	r1, r19
     b4c:	14 06       	cpc	r1, r20
     b4e:	55 1f       	adc	r21, r21
     b50:	f2 cf       	rjmp	.-28     	; 0xb36 <__fp_split3+0xe>
     b52:	46 95       	lsr	r20
     b54:	f1 df       	rcall	.-30     	; 0xb38 <__fp_splitA>
     b56:	08 c0       	rjmp	.+16     	; 0xb68 <__fp_splitA+0x30>
     b58:	16 16       	cp	r1, r22
     b5a:	17 06       	cpc	r1, r23
     b5c:	18 06       	cpc	r1, r24
     b5e:	99 1f       	adc	r25, r25
     b60:	f1 cf       	rjmp	.-30     	; 0xb44 <__fp_splitA+0xc>
     b62:	86 95       	lsr	r24
     b64:	71 05       	cpc	r23, r1
     b66:	61 05       	cpc	r22, r1
     b68:	08 94       	sec
     b6a:	08 95       	ret

00000b6c <__fp_zero>:
     b6c:	e8 94       	clt

00000b6e <__fp_szero>:
     b6e:	bb 27       	eor	r27, r27
     b70:	66 27       	eor	r22, r22
     b72:	77 27       	eor	r23, r23
     b74:	cb 01       	movw	r24, r22
     b76:	97 f9       	bld	r25, 7
     b78:	08 95       	ret

00000b7a <__gesf2>:
     b7a:	0e 94 70 05 	call	0xae0	; 0xae0 <__fp_cmp>
     b7e:	08 f4       	brcc	.+2      	; 0xb82 <__gesf2+0x8>
     b80:	8f ef       	ldi	r24, 0xFF	; 255
     b82:	08 95       	ret

00000b84 <__mulsf3>:
     b84:	0e 94 d5 05 	call	0xbaa	; 0xbaa <__mulsf3x>
     b88:	0c 94 46 06 	jmp	0xc8c	; 0xc8c <__fp_round>
     b8c:	0e 94 38 06 	call	0xc70	; 0xc70 <__fp_pscA>
     b90:	38 f0       	brcs	.+14     	; 0xba0 <__mulsf3+0x1c>
     b92:	0e 94 3f 06 	call	0xc7e	; 0xc7e <__fp_pscB>
     b96:	20 f0       	brcs	.+8      	; 0xba0 <__mulsf3+0x1c>
     b98:	95 23       	and	r25, r21
     b9a:	11 f0       	breq	.+4      	; 0xba0 <__mulsf3+0x1c>
     b9c:	0c 94 2f 06 	jmp	0xc5e	; 0xc5e <__fp_inf>
     ba0:	0c 94 35 06 	jmp	0xc6a	; 0xc6a <__fp_nan>
     ba4:	11 24       	eor	r1, r1
     ba6:	0c 94 b7 05 	jmp	0xb6e	; 0xb6e <__fp_szero>

00000baa <__mulsf3x>:
     baa:	0e 94 94 05 	call	0xb28	; 0xb28 <__fp_split3>
     bae:	70 f3       	brcs	.-36     	; 0xb8c <__mulsf3+0x8>

00000bb0 <__mulsf3_pse>:
     bb0:	95 9f       	mul	r25, r21
     bb2:	c1 f3       	breq	.-16     	; 0xba4 <__mulsf3+0x20>
     bb4:	95 0f       	add	r25, r21
     bb6:	50 e0       	ldi	r21, 0x00	; 0
     bb8:	55 1f       	adc	r21, r21
     bba:	62 9f       	mul	r22, r18
     bbc:	f0 01       	movw	r30, r0
     bbe:	72 9f       	mul	r23, r18
     bc0:	bb 27       	eor	r27, r27
     bc2:	f0 0d       	add	r31, r0
     bc4:	b1 1d       	adc	r27, r1
     bc6:	63 9f       	mul	r22, r19
     bc8:	aa 27       	eor	r26, r26
     bca:	f0 0d       	add	r31, r0
     bcc:	b1 1d       	adc	r27, r1
     bce:	aa 1f       	adc	r26, r26
     bd0:	64 9f       	mul	r22, r20
     bd2:	66 27       	eor	r22, r22
     bd4:	b0 0d       	add	r27, r0
     bd6:	a1 1d       	adc	r26, r1
     bd8:	66 1f       	adc	r22, r22
     bda:	82 9f       	mul	r24, r18
     bdc:	22 27       	eor	r18, r18
     bde:	b0 0d       	add	r27, r0
     be0:	a1 1d       	adc	r26, r1
     be2:	62 1f       	adc	r22, r18
     be4:	73 9f       	mul	r23, r19
     be6:	b0 0d       	add	r27, r0
     be8:	a1 1d       	adc	r26, r1
     bea:	62 1f       	adc	r22, r18
     bec:	83 9f       	mul	r24, r19
     bee:	a0 0d       	add	r26, r0
     bf0:	61 1d       	adc	r22, r1
     bf2:	22 1f       	adc	r18, r18
     bf4:	74 9f       	mul	r23, r20
     bf6:	33 27       	eor	r19, r19
     bf8:	a0 0d       	add	r26, r0
     bfa:	61 1d       	adc	r22, r1
     bfc:	23 1f       	adc	r18, r19
     bfe:	84 9f       	mul	r24, r20
     c00:	60 0d       	add	r22, r0
     c02:	21 1d       	adc	r18, r1
     c04:	82 2f       	mov	r24, r18
     c06:	76 2f       	mov	r23, r22
     c08:	6a 2f       	mov	r22, r26
     c0a:	11 24       	eor	r1, r1
     c0c:	9f 57       	subi	r25, 0x7F	; 127
     c0e:	50 40       	sbci	r21, 0x00	; 0
     c10:	9a f0       	brmi	.+38     	; 0xc38 <__mulsf3_pse+0x88>
     c12:	f1 f0       	breq	.+60     	; 0xc50 <__mulsf3_pse+0xa0>
     c14:	88 23       	and	r24, r24
     c16:	4a f0       	brmi	.+18     	; 0xc2a <__mulsf3_pse+0x7a>
     c18:	ee 0f       	add	r30, r30
     c1a:	ff 1f       	adc	r31, r31
     c1c:	bb 1f       	adc	r27, r27
     c1e:	66 1f       	adc	r22, r22
     c20:	77 1f       	adc	r23, r23
     c22:	88 1f       	adc	r24, r24
     c24:	91 50       	subi	r25, 0x01	; 1
     c26:	50 40       	sbci	r21, 0x00	; 0
     c28:	a9 f7       	brne	.-22     	; 0xc14 <__mulsf3_pse+0x64>
     c2a:	9e 3f       	cpi	r25, 0xFE	; 254
     c2c:	51 05       	cpc	r21, r1
     c2e:	80 f0       	brcs	.+32     	; 0xc50 <__mulsf3_pse+0xa0>
     c30:	0c 94 2f 06 	jmp	0xc5e	; 0xc5e <__fp_inf>
     c34:	0c 94 b7 05 	jmp	0xb6e	; 0xb6e <__fp_szero>
     c38:	5f 3f       	cpi	r21, 0xFF	; 255
     c3a:	e4 f3       	brlt	.-8      	; 0xc34 <__mulsf3_pse+0x84>
     c3c:	98 3e       	cpi	r25, 0xE8	; 232
     c3e:	d4 f3       	brlt	.-12     	; 0xc34 <__mulsf3_pse+0x84>
     c40:	86 95       	lsr	r24
     c42:	77 95       	ror	r23
     c44:	67 95       	ror	r22
     c46:	b7 95       	ror	r27
     c48:	f7 95       	ror	r31
     c4a:	e7 95       	ror	r30
     c4c:	9f 5f       	subi	r25, 0xFF	; 255
     c4e:	c1 f7       	brne	.-16     	; 0xc40 <__mulsf3_pse+0x90>
     c50:	fe 2b       	or	r31, r30
     c52:	88 0f       	add	r24, r24
     c54:	91 1d       	adc	r25, r1
     c56:	96 95       	lsr	r25
     c58:	87 95       	ror	r24
     c5a:	97 f9       	bld	r25, 7
     c5c:	08 95       	ret

00000c5e <__fp_inf>:
     c5e:	97 f9       	bld	r25, 7
     c60:	9f 67       	ori	r25, 0x7F	; 127
     c62:	80 e8       	ldi	r24, 0x80	; 128
     c64:	70 e0       	ldi	r23, 0x00	; 0
     c66:	60 e0       	ldi	r22, 0x00	; 0
     c68:	08 95       	ret

00000c6a <__fp_nan>:
     c6a:	9f ef       	ldi	r25, 0xFF	; 255
     c6c:	80 ec       	ldi	r24, 0xC0	; 192
     c6e:	08 95       	ret

00000c70 <__fp_pscA>:
     c70:	00 24       	eor	r0, r0
     c72:	0a 94       	dec	r0
     c74:	16 16       	cp	r1, r22
     c76:	17 06       	cpc	r1, r23
     c78:	18 06       	cpc	r1, r24
     c7a:	09 06       	cpc	r0, r25
     c7c:	08 95       	ret

00000c7e <__fp_pscB>:
     c7e:	00 24       	eor	r0, r0
     c80:	0a 94       	dec	r0
     c82:	12 16       	cp	r1, r18
     c84:	13 06       	cpc	r1, r19
     c86:	14 06       	cpc	r1, r20
     c88:	05 06       	cpc	r0, r21
     c8a:	08 95       	ret

00000c8c <__fp_round>:
     c8c:	09 2e       	mov	r0, r25
     c8e:	03 94       	inc	r0
     c90:	00 0c       	add	r0, r0
     c92:	11 f4       	brne	.+4      	; 0xc98 <__fp_round+0xc>
     c94:	88 23       	and	r24, r24
     c96:	52 f0       	brmi	.+20     	; 0xcac <__fp_round+0x20>
     c98:	bb 0f       	add	r27, r27
     c9a:	40 f4       	brcc	.+16     	; 0xcac <__fp_round+0x20>
     c9c:	bf 2b       	or	r27, r31
     c9e:	11 f4       	brne	.+4      	; 0xca4 <__fp_round+0x18>
     ca0:	60 ff       	sbrs	r22, 0
     ca2:	04 c0       	rjmp	.+8      	; 0xcac <__fp_round+0x20>
     ca4:	6f 5f       	subi	r22, 0xFF	; 255
     ca6:	7f 4f       	sbci	r23, 0xFF	; 255
     ca8:	8f 4f       	sbci	r24, 0xFF	; 255
     caa:	9f 4f       	sbci	r25, 0xFF	; 255
     cac:	08 95       	ret

00000cae <DriverPowerInit>:
     cae:	80 e2       	ldi	r24, 0x20	; 32
     cb0:	80 93 41 06 	sts	0x0641, r24	; 0x800641 <__TEXT_REGION_LENGTH__+0x700641>
     cb4:	08 95       	ret

00000cb6 <DriverPowerVccAuxSet>:
     cb6:	81 11       	cpse	r24, r1
     cb8:	04 c0       	rjmp	.+8      	; 0xcc2 <DriverPowerVccAuxSet+0xc>
     cba:	80 e2       	ldi	r24, 0x20	; 32
     cbc:	80 93 46 06 	sts	0x0646, r24	; 0x800646 <__TEXT_REGION_LENGTH__+0x700646>
     cc0:	08 95       	ret
     cc2:	80 e2       	ldi	r24, 0x20	; 32
     cc4:	80 93 45 06 	sts	0x0645, r24	; 0x800645 <__TEXT_REGION_LENGTH__+0x700645>
     cc8:	08 95       	ret

00000cca <vfprintf>:
     cca:	2f 92       	push	r2
     ccc:	3f 92       	push	r3
     cce:	4f 92       	push	r4
     cd0:	5f 92       	push	r5
     cd2:	6f 92       	push	r6
     cd4:	7f 92       	push	r7
     cd6:	8f 92       	push	r8
     cd8:	9f 92       	push	r9
     cda:	af 92       	push	r10
     cdc:	bf 92       	push	r11
     cde:	cf 92       	push	r12
     ce0:	df 92       	push	r13
     ce2:	ef 92       	push	r14
     ce4:	ff 92       	push	r15
     ce6:	0f 93       	push	r16
     ce8:	1f 93       	push	r17
     cea:	cf 93       	push	r28
     cec:	df 93       	push	r29
     cee:	cd b7       	in	r28, 0x3d	; 61
     cf0:	de b7       	in	r29, 0x3e	; 62
     cf2:	60 97       	sbiw	r28, 0x10	; 16
     cf4:	cd bf       	out	0x3d, r28	; 61
     cf6:	de bf       	out	0x3e, r29	; 62
     cf8:	7c 01       	movw	r14, r24
     cfa:	1b 01       	movw	r2, r22
     cfc:	6a 01       	movw	r12, r20
     cfe:	fc 01       	movw	r30, r24
     d00:	16 82       	std	Z+6, r1	; 0x06
     d02:	17 82       	std	Z+7, r1	; 0x07
     d04:	83 81       	ldd	r24, Z+3	; 0x03
     d06:	81 ff       	sbrs	r24, 1
     d08:	44 c3       	rjmp	.+1672   	; 0x1392 <vfprintf+0x6c8>
     d0a:	9e 01       	movw	r18, r28
     d0c:	2f 5f       	subi	r18, 0xFF	; 255
     d0e:	3f 4f       	sbci	r19, 0xFF	; 255
     d10:	39 01       	movw	r6, r18
     d12:	f7 01       	movw	r30, r14
     d14:	93 81       	ldd	r25, Z+3	; 0x03
     d16:	f1 01       	movw	r30, r2
     d18:	93 fd       	sbrc	r25, 3
     d1a:	85 91       	lpm	r24, Z+
     d1c:	93 ff       	sbrs	r25, 3
     d1e:	81 91       	ld	r24, Z+
     d20:	1f 01       	movw	r2, r30
     d22:	88 23       	and	r24, r24
     d24:	09 f4       	brne	.+2      	; 0xd28 <vfprintf+0x5e>
     d26:	31 c3       	rjmp	.+1634   	; 0x138a <vfprintf+0x6c0>
     d28:	85 32       	cpi	r24, 0x25	; 37
     d2a:	39 f4       	brne	.+14     	; 0xd3a <vfprintf+0x70>
     d2c:	93 fd       	sbrc	r25, 3
     d2e:	85 91       	lpm	r24, Z+
     d30:	93 ff       	sbrs	r25, 3
     d32:	81 91       	ld	r24, Z+
     d34:	1f 01       	movw	r2, r30
     d36:	85 32       	cpi	r24, 0x25	; 37
     d38:	39 f4       	brne	.+14     	; 0xd48 <vfprintf+0x7e>
     d3a:	b7 01       	movw	r22, r14
     d3c:	90 e0       	ldi	r25, 0x00	; 0
     d3e:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <fputc>
     d42:	56 01       	movw	r10, r12
     d44:	65 01       	movw	r12, r10
     d46:	e5 cf       	rjmp	.-54     	; 0xd12 <vfprintf+0x48>
     d48:	10 e0       	ldi	r17, 0x00	; 0
     d4a:	51 2c       	mov	r5, r1
     d4c:	91 2c       	mov	r9, r1
     d4e:	ff e1       	ldi	r31, 0x1F	; 31
     d50:	f9 15       	cp	r31, r9
     d52:	d8 f0       	brcs	.+54     	; 0xd8a <vfprintf+0xc0>
     d54:	8b 32       	cpi	r24, 0x2B	; 43
     d56:	79 f0       	breq	.+30     	; 0xd76 <vfprintf+0xac>
     d58:	38 f4       	brcc	.+14     	; 0xd68 <vfprintf+0x9e>
     d5a:	80 32       	cpi	r24, 0x20	; 32
     d5c:	79 f0       	breq	.+30     	; 0xd7c <vfprintf+0xb2>
     d5e:	83 32       	cpi	r24, 0x23	; 35
     d60:	a1 f4       	brne	.+40     	; 0xd8a <vfprintf+0xc0>
     d62:	f9 2d       	mov	r31, r9
     d64:	f0 61       	ori	r31, 0x10	; 16
     d66:	2e c0       	rjmp	.+92     	; 0xdc4 <vfprintf+0xfa>
     d68:	8d 32       	cpi	r24, 0x2D	; 45
     d6a:	61 f0       	breq	.+24     	; 0xd84 <vfprintf+0xba>
     d6c:	80 33       	cpi	r24, 0x30	; 48
     d6e:	69 f4       	brne	.+26     	; 0xd8a <vfprintf+0xc0>
     d70:	29 2d       	mov	r18, r9
     d72:	21 60       	ori	r18, 0x01	; 1
     d74:	2d c0       	rjmp	.+90     	; 0xdd0 <vfprintf+0x106>
     d76:	39 2d       	mov	r19, r9
     d78:	32 60       	ori	r19, 0x02	; 2
     d7a:	93 2e       	mov	r9, r19
     d7c:	89 2d       	mov	r24, r9
     d7e:	84 60       	ori	r24, 0x04	; 4
     d80:	98 2e       	mov	r9, r24
     d82:	2a c0       	rjmp	.+84     	; 0xdd8 <vfprintf+0x10e>
     d84:	e9 2d       	mov	r30, r9
     d86:	e8 60       	ori	r30, 0x08	; 8
     d88:	15 c0       	rjmp	.+42     	; 0xdb4 <vfprintf+0xea>
     d8a:	97 fc       	sbrc	r9, 7
     d8c:	2d c0       	rjmp	.+90     	; 0xde8 <vfprintf+0x11e>
     d8e:	20 ed       	ldi	r18, 0xD0	; 208
     d90:	28 0f       	add	r18, r24
     d92:	2a 30       	cpi	r18, 0x0A	; 10
     d94:	88 f4       	brcc	.+34     	; 0xdb8 <vfprintf+0xee>
     d96:	96 fe       	sbrs	r9, 6
     d98:	06 c0       	rjmp	.+12     	; 0xda6 <vfprintf+0xdc>
     d9a:	3a e0       	ldi	r19, 0x0A	; 10
     d9c:	13 9f       	mul	r17, r19
     d9e:	20 0d       	add	r18, r0
     da0:	11 24       	eor	r1, r1
     da2:	12 2f       	mov	r17, r18
     da4:	19 c0       	rjmp	.+50     	; 0xdd8 <vfprintf+0x10e>
     da6:	8a e0       	ldi	r24, 0x0A	; 10
     da8:	58 9e       	mul	r5, r24
     daa:	20 0d       	add	r18, r0
     dac:	11 24       	eor	r1, r1
     dae:	52 2e       	mov	r5, r18
     db0:	e9 2d       	mov	r30, r9
     db2:	e0 62       	ori	r30, 0x20	; 32
     db4:	9e 2e       	mov	r9, r30
     db6:	10 c0       	rjmp	.+32     	; 0xdd8 <vfprintf+0x10e>
     db8:	8e 32       	cpi	r24, 0x2E	; 46
     dba:	31 f4       	brne	.+12     	; 0xdc8 <vfprintf+0xfe>
     dbc:	96 fc       	sbrc	r9, 6
     dbe:	e5 c2       	rjmp	.+1482   	; 0x138a <vfprintf+0x6c0>
     dc0:	f9 2d       	mov	r31, r9
     dc2:	f0 64       	ori	r31, 0x40	; 64
     dc4:	9f 2e       	mov	r9, r31
     dc6:	08 c0       	rjmp	.+16     	; 0xdd8 <vfprintf+0x10e>
     dc8:	8c 36       	cpi	r24, 0x6C	; 108
     dca:	21 f4       	brne	.+8      	; 0xdd4 <vfprintf+0x10a>
     dcc:	29 2d       	mov	r18, r9
     dce:	20 68       	ori	r18, 0x80	; 128
     dd0:	92 2e       	mov	r9, r18
     dd2:	02 c0       	rjmp	.+4      	; 0xdd8 <vfprintf+0x10e>
     dd4:	88 36       	cpi	r24, 0x68	; 104
     dd6:	41 f4       	brne	.+16     	; 0xde8 <vfprintf+0x11e>
     dd8:	f1 01       	movw	r30, r2
     dda:	93 fd       	sbrc	r25, 3
     ddc:	85 91       	lpm	r24, Z+
     dde:	93 ff       	sbrs	r25, 3
     de0:	81 91       	ld	r24, Z+
     de2:	1f 01       	movw	r2, r30
     de4:	81 11       	cpse	r24, r1
     de6:	b3 cf       	rjmp	.-154    	; 0xd4e <vfprintf+0x84>
     de8:	9b eb       	ldi	r25, 0xBB	; 187
     dea:	98 0f       	add	r25, r24
     dec:	93 30       	cpi	r25, 0x03	; 3
     dee:	20 f4       	brcc	.+8      	; 0xdf8 <vfprintf+0x12e>
     df0:	99 2d       	mov	r25, r9
     df2:	90 61       	ori	r25, 0x10	; 16
     df4:	80 5e       	subi	r24, 0xE0	; 224
     df6:	07 c0       	rjmp	.+14     	; 0xe06 <vfprintf+0x13c>
     df8:	9b e9       	ldi	r25, 0x9B	; 155
     dfa:	98 0f       	add	r25, r24
     dfc:	93 30       	cpi	r25, 0x03	; 3
     dfe:	08 f0       	brcs	.+2      	; 0xe02 <vfprintf+0x138>
     e00:	66 c1       	rjmp	.+716    	; 0x10ce <vfprintf+0x404>
     e02:	99 2d       	mov	r25, r9
     e04:	9f 7e       	andi	r25, 0xEF	; 239
     e06:	96 ff       	sbrs	r25, 6
     e08:	16 e0       	ldi	r17, 0x06	; 6
     e0a:	9f 73       	andi	r25, 0x3F	; 63
     e0c:	99 2e       	mov	r9, r25
     e0e:	85 36       	cpi	r24, 0x65	; 101
     e10:	19 f4       	brne	.+6      	; 0xe18 <vfprintf+0x14e>
     e12:	90 64       	ori	r25, 0x40	; 64
     e14:	99 2e       	mov	r9, r25
     e16:	08 c0       	rjmp	.+16     	; 0xe28 <vfprintf+0x15e>
     e18:	86 36       	cpi	r24, 0x66	; 102
     e1a:	21 f4       	brne	.+8      	; 0xe24 <vfprintf+0x15a>
     e1c:	39 2f       	mov	r19, r25
     e1e:	30 68       	ori	r19, 0x80	; 128
     e20:	93 2e       	mov	r9, r19
     e22:	02 c0       	rjmp	.+4      	; 0xe28 <vfprintf+0x15e>
     e24:	11 11       	cpse	r17, r1
     e26:	11 50       	subi	r17, 0x01	; 1
     e28:	97 fe       	sbrs	r9, 7
     e2a:	07 c0       	rjmp	.+14     	; 0xe3a <vfprintf+0x170>
     e2c:	1c 33       	cpi	r17, 0x3C	; 60
     e2e:	50 f4       	brcc	.+20     	; 0xe44 <vfprintf+0x17a>
     e30:	44 24       	eor	r4, r4
     e32:	43 94       	inc	r4
     e34:	41 0e       	add	r4, r17
     e36:	27 e0       	ldi	r18, 0x07	; 7
     e38:	0b c0       	rjmp	.+22     	; 0xe50 <vfprintf+0x186>
     e3a:	18 30       	cpi	r17, 0x08	; 8
     e3c:	38 f0       	brcs	.+14     	; 0xe4c <vfprintf+0x182>
     e3e:	27 e0       	ldi	r18, 0x07	; 7
     e40:	17 e0       	ldi	r17, 0x07	; 7
     e42:	05 c0       	rjmp	.+10     	; 0xe4e <vfprintf+0x184>
     e44:	27 e0       	ldi	r18, 0x07	; 7
     e46:	9c e3       	ldi	r25, 0x3C	; 60
     e48:	49 2e       	mov	r4, r25
     e4a:	02 c0       	rjmp	.+4      	; 0xe50 <vfprintf+0x186>
     e4c:	21 2f       	mov	r18, r17
     e4e:	41 2c       	mov	r4, r1
     e50:	56 01       	movw	r10, r12
     e52:	84 e0       	ldi	r24, 0x04	; 4
     e54:	a8 0e       	add	r10, r24
     e56:	b1 1c       	adc	r11, r1
     e58:	f6 01       	movw	r30, r12
     e5a:	60 81       	ld	r22, Z
     e5c:	71 81       	ldd	r23, Z+1	; 0x01
     e5e:	82 81       	ldd	r24, Z+2	; 0x02
     e60:	93 81       	ldd	r25, Z+3	; 0x03
     e62:	04 2d       	mov	r16, r4
     e64:	a3 01       	movw	r20, r6
     e66:	0e 94 05 0a 	call	0x140a	; 0x140a <__ftoa_engine>
     e6a:	6c 01       	movw	r12, r24
     e6c:	f9 81       	ldd	r31, Y+1	; 0x01
     e6e:	fc 87       	std	Y+12, r31	; 0x0c
     e70:	f0 ff       	sbrs	r31, 0
     e72:	02 c0       	rjmp	.+4      	; 0xe78 <vfprintf+0x1ae>
     e74:	f3 ff       	sbrs	r31, 3
     e76:	06 c0       	rjmp	.+12     	; 0xe84 <vfprintf+0x1ba>
     e78:	91 fc       	sbrc	r9, 1
     e7a:	06 c0       	rjmp	.+12     	; 0xe88 <vfprintf+0x1be>
     e7c:	92 fe       	sbrs	r9, 2
     e7e:	06 c0       	rjmp	.+12     	; 0xe8c <vfprintf+0x1c2>
     e80:	00 e2       	ldi	r16, 0x20	; 32
     e82:	05 c0       	rjmp	.+10     	; 0xe8e <vfprintf+0x1c4>
     e84:	0d e2       	ldi	r16, 0x2D	; 45
     e86:	03 c0       	rjmp	.+6      	; 0xe8e <vfprintf+0x1c4>
     e88:	0b e2       	ldi	r16, 0x2B	; 43
     e8a:	01 c0       	rjmp	.+2      	; 0xe8e <vfprintf+0x1c4>
     e8c:	00 e0       	ldi	r16, 0x00	; 0
     e8e:	8c 85       	ldd	r24, Y+12	; 0x0c
     e90:	8c 70       	andi	r24, 0x0C	; 12
     e92:	19 f0       	breq	.+6      	; 0xe9a <vfprintf+0x1d0>
     e94:	01 11       	cpse	r16, r1
     e96:	5a c2       	rjmp	.+1204   	; 0x134c <vfprintf+0x682>
     e98:	9b c2       	rjmp	.+1334   	; 0x13d0 <vfprintf+0x706>
     e9a:	97 fe       	sbrs	r9, 7
     e9c:	10 c0       	rjmp	.+32     	; 0xebe <vfprintf+0x1f4>
     e9e:	4c 0c       	add	r4, r12
     ea0:	fc 85       	ldd	r31, Y+12	; 0x0c
     ea2:	f4 ff       	sbrs	r31, 4
     ea4:	04 c0       	rjmp	.+8      	; 0xeae <vfprintf+0x1e4>
     ea6:	8a 81       	ldd	r24, Y+2	; 0x02
     ea8:	81 33       	cpi	r24, 0x31	; 49
     eaa:	09 f4       	brne	.+2      	; 0xeae <vfprintf+0x1e4>
     eac:	4a 94       	dec	r4
     eae:	14 14       	cp	r1, r4
     eb0:	74 f5       	brge	.+92     	; 0xf0e <vfprintf+0x244>
     eb2:	28 e0       	ldi	r18, 0x08	; 8
     eb4:	24 15       	cp	r18, r4
     eb6:	78 f5       	brcc	.+94     	; 0xf16 <vfprintf+0x24c>
     eb8:	88 e0       	ldi	r24, 0x08	; 8
     eba:	48 2e       	mov	r4, r24
     ebc:	2c c0       	rjmp	.+88     	; 0xf16 <vfprintf+0x24c>
     ebe:	96 fc       	sbrc	r9, 6
     ec0:	2a c0       	rjmp	.+84     	; 0xf16 <vfprintf+0x24c>
     ec2:	81 2f       	mov	r24, r17
     ec4:	90 e0       	ldi	r25, 0x00	; 0
     ec6:	8c 15       	cp	r24, r12
     ec8:	9d 05       	cpc	r25, r13
     eca:	9c f0       	brlt	.+38     	; 0xef2 <vfprintf+0x228>
     ecc:	3c ef       	ldi	r19, 0xFC	; 252
     ece:	c3 16       	cp	r12, r19
     ed0:	3f ef       	ldi	r19, 0xFF	; 255
     ed2:	d3 06       	cpc	r13, r19
     ed4:	74 f0       	brlt	.+28     	; 0xef2 <vfprintf+0x228>
     ed6:	89 2d       	mov	r24, r9
     ed8:	80 68       	ori	r24, 0x80	; 128
     eda:	98 2e       	mov	r9, r24
     edc:	0a c0       	rjmp	.+20     	; 0xef2 <vfprintf+0x228>
     ede:	e2 e0       	ldi	r30, 0x02	; 2
     ee0:	f0 e0       	ldi	r31, 0x00	; 0
     ee2:	ec 0f       	add	r30, r28
     ee4:	fd 1f       	adc	r31, r29
     ee6:	e1 0f       	add	r30, r17
     ee8:	f1 1d       	adc	r31, r1
     eea:	80 81       	ld	r24, Z
     eec:	80 33       	cpi	r24, 0x30	; 48
     eee:	19 f4       	brne	.+6      	; 0xef6 <vfprintf+0x22c>
     ef0:	11 50       	subi	r17, 0x01	; 1
     ef2:	11 11       	cpse	r17, r1
     ef4:	f4 cf       	rjmp	.-24     	; 0xede <vfprintf+0x214>
     ef6:	97 fe       	sbrs	r9, 7
     ef8:	0e c0       	rjmp	.+28     	; 0xf16 <vfprintf+0x24c>
     efa:	44 24       	eor	r4, r4
     efc:	43 94       	inc	r4
     efe:	41 0e       	add	r4, r17
     f00:	81 2f       	mov	r24, r17
     f02:	90 e0       	ldi	r25, 0x00	; 0
     f04:	c8 16       	cp	r12, r24
     f06:	d9 06       	cpc	r13, r25
     f08:	2c f4       	brge	.+10     	; 0xf14 <vfprintf+0x24a>
     f0a:	1c 19       	sub	r17, r12
     f0c:	04 c0       	rjmp	.+8      	; 0xf16 <vfprintf+0x24c>
     f0e:	44 24       	eor	r4, r4
     f10:	43 94       	inc	r4
     f12:	01 c0       	rjmp	.+2      	; 0xf16 <vfprintf+0x24c>
     f14:	10 e0       	ldi	r17, 0x00	; 0
     f16:	97 fe       	sbrs	r9, 7
     f18:	06 c0       	rjmp	.+12     	; 0xf26 <vfprintf+0x25c>
     f1a:	1c 14       	cp	r1, r12
     f1c:	1d 04       	cpc	r1, r13
     f1e:	34 f4       	brge	.+12     	; 0xf2c <vfprintf+0x262>
     f20:	c6 01       	movw	r24, r12
     f22:	01 96       	adiw	r24, 0x01	; 1
     f24:	05 c0       	rjmp	.+10     	; 0xf30 <vfprintf+0x266>
     f26:	85 e0       	ldi	r24, 0x05	; 5
     f28:	90 e0       	ldi	r25, 0x00	; 0
     f2a:	02 c0       	rjmp	.+4      	; 0xf30 <vfprintf+0x266>
     f2c:	81 e0       	ldi	r24, 0x01	; 1
     f2e:	90 e0       	ldi	r25, 0x00	; 0
     f30:	01 11       	cpse	r16, r1
     f32:	01 96       	adiw	r24, 0x01	; 1
     f34:	11 23       	and	r17, r17
     f36:	31 f0       	breq	.+12     	; 0xf44 <vfprintf+0x27a>
     f38:	21 2f       	mov	r18, r17
     f3a:	30 e0       	ldi	r19, 0x00	; 0
     f3c:	2f 5f       	subi	r18, 0xFF	; 255
     f3e:	3f 4f       	sbci	r19, 0xFF	; 255
     f40:	82 0f       	add	r24, r18
     f42:	93 1f       	adc	r25, r19
     f44:	25 2d       	mov	r18, r5
     f46:	30 e0       	ldi	r19, 0x00	; 0
     f48:	82 17       	cp	r24, r18
     f4a:	93 07       	cpc	r25, r19
     f4c:	14 f4       	brge	.+4      	; 0xf52 <vfprintf+0x288>
     f4e:	58 1a       	sub	r5, r24
     f50:	01 c0       	rjmp	.+2      	; 0xf54 <vfprintf+0x28a>
     f52:	51 2c       	mov	r5, r1
     f54:	89 2d       	mov	r24, r9
     f56:	89 70       	andi	r24, 0x09	; 9
     f58:	49 f4       	brne	.+18     	; 0xf6c <vfprintf+0x2a2>
     f5a:	55 20       	and	r5, r5
     f5c:	39 f0       	breq	.+14     	; 0xf6c <vfprintf+0x2a2>
     f5e:	b7 01       	movw	r22, r14
     f60:	80 e2       	ldi	r24, 0x20	; 32
     f62:	90 e0       	ldi	r25, 0x00	; 0
     f64:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <fputc>
     f68:	5a 94       	dec	r5
     f6a:	f7 cf       	rjmp	.-18     	; 0xf5a <vfprintf+0x290>
     f6c:	00 23       	and	r16, r16
     f6e:	29 f0       	breq	.+10     	; 0xf7a <vfprintf+0x2b0>
     f70:	b7 01       	movw	r22, r14
     f72:	80 2f       	mov	r24, r16
     f74:	90 e0       	ldi	r25, 0x00	; 0
     f76:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <fputc>
     f7a:	93 fc       	sbrc	r9, 3
     f7c:	09 c0       	rjmp	.+18     	; 0xf90 <vfprintf+0x2c6>
     f7e:	55 20       	and	r5, r5
     f80:	39 f0       	breq	.+14     	; 0xf90 <vfprintf+0x2c6>
     f82:	b7 01       	movw	r22, r14
     f84:	80 e3       	ldi	r24, 0x30	; 48
     f86:	90 e0       	ldi	r25, 0x00	; 0
     f88:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <fputc>
     f8c:	5a 94       	dec	r5
     f8e:	f7 cf       	rjmp	.-18     	; 0xf7e <vfprintf+0x2b4>
     f90:	97 fe       	sbrs	r9, 7
     f92:	4c c0       	rjmp	.+152    	; 0x102c <vfprintf+0x362>
     f94:	46 01       	movw	r8, r12
     f96:	d7 fe       	sbrs	r13, 7
     f98:	02 c0       	rjmp	.+4      	; 0xf9e <vfprintf+0x2d4>
     f9a:	81 2c       	mov	r8, r1
     f9c:	91 2c       	mov	r9, r1
     f9e:	c6 01       	movw	r24, r12
     fa0:	88 19       	sub	r24, r8
     fa2:	99 09       	sbc	r25, r9
     fa4:	f3 01       	movw	r30, r6
     fa6:	e8 0f       	add	r30, r24
     fa8:	f9 1f       	adc	r31, r25
     faa:	ed 87       	std	Y+13, r30	; 0x0d
     fac:	fe 87       	std	Y+14, r31	; 0x0e
     fae:	96 01       	movw	r18, r12
     fb0:	24 19       	sub	r18, r4
     fb2:	31 09       	sbc	r19, r1
     fb4:	2f 87       	std	Y+15, r18	; 0x0f
     fb6:	38 8b       	std	Y+16, r19	; 0x10
     fb8:	01 2f       	mov	r16, r17
     fba:	10 e0       	ldi	r17, 0x00	; 0
     fbc:	11 95       	neg	r17
     fbe:	01 95       	neg	r16
     fc0:	11 09       	sbc	r17, r1
     fc2:	3f ef       	ldi	r19, 0xFF	; 255
     fc4:	83 16       	cp	r8, r19
     fc6:	93 06       	cpc	r9, r19
     fc8:	29 f4       	brne	.+10     	; 0xfd4 <vfprintf+0x30a>
     fca:	b7 01       	movw	r22, r14
     fcc:	8e e2       	ldi	r24, 0x2E	; 46
     fce:	90 e0       	ldi	r25, 0x00	; 0
     fd0:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <fputc>
     fd4:	c8 14       	cp	r12, r8
     fd6:	d9 04       	cpc	r13, r9
     fd8:	4c f0       	brlt	.+18     	; 0xfec <vfprintf+0x322>
     fda:	8f 85       	ldd	r24, Y+15	; 0x0f
     fdc:	98 89       	ldd	r25, Y+16	; 0x10
     fde:	88 15       	cp	r24, r8
     fe0:	99 05       	cpc	r25, r9
     fe2:	24 f4       	brge	.+8      	; 0xfec <vfprintf+0x322>
     fe4:	ed 85       	ldd	r30, Y+13	; 0x0d
     fe6:	fe 85       	ldd	r31, Y+14	; 0x0e
     fe8:	81 81       	ldd	r24, Z+1	; 0x01
     fea:	01 c0       	rjmp	.+2      	; 0xfee <vfprintf+0x324>
     fec:	80 e3       	ldi	r24, 0x30	; 48
     fee:	f1 e0       	ldi	r31, 0x01	; 1
     ff0:	8f 1a       	sub	r8, r31
     ff2:	91 08       	sbc	r9, r1
     ff4:	2d 85       	ldd	r18, Y+13	; 0x0d
     ff6:	3e 85       	ldd	r19, Y+14	; 0x0e
     ff8:	2f 5f       	subi	r18, 0xFF	; 255
     ffa:	3f 4f       	sbci	r19, 0xFF	; 255
     ffc:	2d 87       	std	Y+13, r18	; 0x0d
     ffe:	3e 87       	std	Y+14, r19	; 0x0e
    1000:	80 16       	cp	r8, r16
    1002:	91 06       	cpc	r9, r17
    1004:	2c f0       	brlt	.+10     	; 0x1010 <vfprintf+0x346>
    1006:	b7 01       	movw	r22, r14
    1008:	90 e0       	ldi	r25, 0x00	; 0
    100a:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <fputc>
    100e:	d9 cf       	rjmp	.-78     	; 0xfc2 <vfprintf+0x2f8>
    1010:	c8 14       	cp	r12, r8
    1012:	d9 04       	cpc	r13, r9
    1014:	41 f4       	brne	.+16     	; 0x1026 <vfprintf+0x35c>
    1016:	9a 81       	ldd	r25, Y+2	; 0x02
    1018:	96 33       	cpi	r25, 0x36	; 54
    101a:	20 f4       	brcc	.+8      	; 0x1024 <vfprintf+0x35a>
    101c:	95 33       	cpi	r25, 0x35	; 53
    101e:	19 f4       	brne	.+6      	; 0x1026 <vfprintf+0x35c>
    1020:	3c 85       	ldd	r19, Y+12	; 0x0c
    1022:	34 ff       	sbrs	r19, 4
    1024:	81 e3       	ldi	r24, 0x31	; 49
    1026:	b7 01       	movw	r22, r14
    1028:	90 e0       	ldi	r25, 0x00	; 0
    102a:	4e c0       	rjmp	.+156    	; 0x10c8 <vfprintf+0x3fe>
    102c:	8a 81       	ldd	r24, Y+2	; 0x02
    102e:	81 33       	cpi	r24, 0x31	; 49
    1030:	19 f0       	breq	.+6      	; 0x1038 <vfprintf+0x36e>
    1032:	9c 85       	ldd	r25, Y+12	; 0x0c
    1034:	9f 7e       	andi	r25, 0xEF	; 239
    1036:	9c 87       	std	Y+12, r25	; 0x0c
    1038:	b7 01       	movw	r22, r14
    103a:	90 e0       	ldi	r25, 0x00	; 0
    103c:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <fputc>
    1040:	11 11       	cpse	r17, r1
    1042:	05 c0       	rjmp	.+10     	; 0x104e <vfprintf+0x384>
    1044:	94 fc       	sbrc	r9, 4
    1046:	18 c0       	rjmp	.+48     	; 0x1078 <vfprintf+0x3ae>
    1048:	85 e6       	ldi	r24, 0x65	; 101
    104a:	90 e0       	ldi	r25, 0x00	; 0
    104c:	17 c0       	rjmp	.+46     	; 0x107c <vfprintf+0x3b2>
    104e:	b7 01       	movw	r22, r14
    1050:	8e e2       	ldi	r24, 0x2E	; 46
    1052:	90 e0       	ldi	r25, 0x00	; 0
    1054:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <fputc>
    1058:	1e 5f       	subi	r17, 0xFE	; 254
    105a:	82 e0       	ldi	r24, 0x02	; 2
    105c:	01 e0       	ldi	r16, 0x01	; 1
    105e:	08 0f       	add	r16, r24
    1060:	f3 01       	movw	r30, r6
    1062:	e8 0f       	add	r30, r24
    1064:	f1 1d       	adc	r31, r1
    1066:	80 81       	ld	r24, Z
    1068:	b7 01       	movw	r22, r14
    106a:	90 e0       	ldi	r25, 0x00	; 0
    106c:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <fputc>
    1070:	80 2f       	mov	r24, r16
    1072:	01 13       	cpse	r16, r17
    1074:	f3 cf       	rjmp	.-26     	; 0x105c <vfprintf+0x392>
    1076:	e6 cf       	rjmp	.-52     	; 0x1044 <vfprintf+0x37a>
    1078:	85 e4       	ldi	r24, 0x45	; 69
    107a:	90 e0       	ldi	r25, 0x00	; 0
    107c:	b7 01       	movw	r22, r14
    107e:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <fputc>
    1082:	d7 fc       	sbrc	r13, 7
    1084:	06 c0       	rjmp	.+12     	; 0x1092 <vfprintf+0x3c8>
    1086:	c1 14       	cp	r12, r1
    1088:	d1 04       	cpc	r13, r1
    108a:	41 f4       	brne	.+16     	; 0x109c <vfprintf+0x3d2>
    108c:	ec 85       	ldd	r30, Y+12	; 0x0c
    108e:	e4 ff       	sbrs	r30, 4
    1090:	05 c0       	rjmp	.+10     	; 0x109c <vfprintf+0x3d2>
    1092:	d1 94       	neg	r13
    1094:	c1 94       	neg	r12
    1096:	d1 08       	sbc	r13, r1
    1098:	8d e2       	ldi	r24, 0x2D	; 45
    109a:	01 c0       	rjmp	.+2      	; 0x109e <vfprintf+0x3d4>
    109c:	8b e2       	ldi	r24, 0x2B	; 43
    109e:	b7 01       	movw	r22, r14
    10a0:	90 e0       	ldi	r25, 0x00	; 0
    10a2:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <fputc>
    10a6:	80 e3       	ldi	r24, 0x30	; 48
    10a8:	2a e0       	ldi	r18, 0x0A	; 10
    10aa:	c2 16       	cp	r12, r18
    10ac:	d1 04       	cpc	r13, r1
    10ae:	2c f0       	brlt	.+10     	; 0x10ba <vfprintf+0x3f0>
    10b0:	8f 5f       	subi	r24, 0xFF	; 255
    10b2:	fa e0       	ldi	r31, 0x0A	; 10
    10b4:	cf 1a       	sub	r12, r31
    10b6:	d1 08       	sbc	r13, r1
    10b8:	f7 cf       	rjmp	.-18     	; 0x10a8 <vfprintf+0x3de>
    10ba:	b7 01       	movw	r22, r14
    10bc:	90 e0       	ldi	r25, 0x00	; 0
    10be:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <fputc>
    10c2:	b7 01       	movw	r22, r14
    10c4:	c6 01       	movw	r24, r12
    10c6:	c0 96       	adiw	r24, 0x30	; 48
    10c8:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <fputc>
    10cc:	54 c1       	rjmp	.+680    	; 0x1376 <vfprintf+0x6ac>
    10ce:	83 36       	cpi	r24, 0x63	; 99
    10d0:	31 f0       	breq	.+12     	; 0x10de <vfprintf+0x414>
    10d2:	83 37       	cpi	r24, 0x73	; 115
    10d4:	79 f0       	breq	.+30     	; 0x10f4 <vfprintf+0x42a>
    10d6:	83 35       	cpi	r24, 0x53	; 83
    10d8:	09 f0       	breq	.+2      	; 0x10dc <vfprintf+0x412>
    10da:	56 c0       	rjmp	.+172    	; 0x1188 <vfprintf+0x4be>
    10dc:	20 c0       	rjmp	.+64     	; 0x111e <vfprintf+0x454>
    10de:	56 01       	movw	r10, r12
    10e0:	32 e0       	ldi	r19, 0x02	; 2
    10e2:	a3 0e       	add	r10, r19
    10e4:	b1 1c       	adc	r11, r1
    10e6:	f6 01       	movw	r30, r12
    10e8:	80 81       	ld	r24, Z
    10ea:	89 83       	std	Y+1, r24	; 0x01
    10ec:	01 e0       	ldi	r16, 0x01	; 1
    10ee:	10 e0       	ldi	r17, 0x00	; 0
    10f0:	63 01       	movw	r12, r6
    10f2:	12 c0       	rjmp	.+36     	; 0x1118 <vfprintf+0x44e>
    10f4:	56 01       	movw	r10, r12
    10f6:	f2 e0       	ldi	r31, 0x02	; 2
    10f8:	af 0e       	add	r10, r31
    10fa:	b1 1c       	adc	r11, r1
    10fc:	f6 01       	movw	r30, r12
    10fe:	c0 80       	ld	r12, Z
    1100:	d1 80       	ldd	r13, Z+1	; 0x01
    1102:	96 fe       	sbrs	r9, 6
    1104:	03 c0       	rjmp	.+6      	; 0x110c <vfprintf+0x442>
    1106:	61 2f       	mov	r22, r17
    1108:	70 e0       	ldi	r23, 0x00	; 0
    110a:	02 c0       	rjmp	.+4      	; 0x1110 <vfprintf+0x446>
    110c:	6f ef       	ldi	r22, 0xFF	; 255
    110e:	7f ef       	ldi	r23, 0xFF	; 255
    1110:	c6 01       	movw	r24, r12
    1112:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <strnlen>
    1116:	8c 01       	movw	r16, r24
    1118:	f9 2d       	mov	r31, r9
    111a:	ff 77       	andi	r31, 0x7F	; 127
    111c:	14 c0       	rjmp	.+40     	; 0x1146 <vfprintf+0x47c>
    111e:	56 01       	movw	r10, r12
    1120:	22 e0       	ldi	r18, 0x02	; 2
    1122:	a2 0e       	add	r10, r18
    1124:	b1 1c       	adc	r11, r1
    1126:	f6 01       	movw	r30, r12
    1128:	c0 80       	ld	r12, Z
    112a:	d1 80       	ldd	r13, Z+1	; 0x01
    112c:	96 fe       	sbrs	r9, 6
    112e:	03 c0       	rjmp	.+6      	; 0x1136 <vfprintf+0x46c>
    1130:	61 2f       	mov	r22, r17
    1132:	70 e0       	ldi	r23, 0x00	; 0
    1134:	02 c0       	rjmp	.+4      	; 0x113a <vfprintf+0x470>
    1136:	6f ef       	ldi	r22, 0xFF	; 255
    1138:	7f ef       	ldi	r23, 0xFF	; 255
    113a:	c6 01       	movw	r24, r12
    113c:	0e 94 dd 0a 	call	0x15ba	; 0x15ba <strnlen_P>
    1140:	8c 01       	movw	r16, r24
    1142:	f9 2d       	mov	r31, r9
    1144:	f0 68       	ori	r31, 0x80	; 128
    1146:	9f 2e       	mov	r9, r31
    1148:	f3 fd       	sbrc	r31, 3
    114a:	1a c0       	rjmp	.+52     	; 0x1180 <vfprintf+0x4b6>
    114c:	85 2d       	mov	r24, r5
    114e:	90 e0       	ldi	r25, 0x00	; 0
    1150:	08 17       	cp	r16, r24
    1152:	19 07       	cpc	r17, r25
    1154:	a8 f4       	brcc	.+42     	; 0x1180 <vfprintf+0x4b6>
    1156:	b7 01       	movw	r22, r14
    1158:	80 e2       	ldi	r24, 0x20	; 32
    115a:	90 e0       	ldi	r25, 0x00	; 0
    115c:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <fputc>
    1160:	5a 94       	dec	r5
    1162:	f4 cf       	rjmp	.-24     	; 0x114c <vfprintf+0x482>
    1164:	f6 01       	movw	r30, r12
    1166:	97 fc       	sbrc	r9, 7
    1168:	85 91       	lpm	r24, Z+
    116a:	97 fe       	sbrs	r9, 7
    116c:	81 91       	ld	r24, Z+
    116e:	6f 01       	movw	r12, r30
    1170:	b7 01       	movw	r22, r14
    1172:	90 e0       	ldi	r25, 0x00	; 0
    1174:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <fputc>
    1178:	51 10       	cpse	r5, r1
    117a:	5a 94       	dec	r5
    117c:	01 50       	subi	r16, 0x01	; 1
    117e:	11 09       	sbc	r17, r1
    1180:	01 15       	cp	r16, r1
    1182:	11 05       	cpc	r17, r1
    1184:	79 f7       	brne	.-34     	; 0x1164 <vfprintf+0x49a>
    1186:	f7 c0       	rjmp	.+494    	; 0x1376 <vfprintf+0x6ac>
    1188:	84 36       	cpi	r24, 0x64	; 100
    118a:	11 f0       	breq	.+4      	; 0x1190 <vfprintf+0x4c6>
    118c:	89 36       	cpi	r24, 0x69	; 105
    118e:	61 f5       	brne	.+88     	; 0x11e8 <vfprintf+0x51e>
    1190:	56 01       	movw	r10, r12
    1192:	97 fe       	sbrs	r9, 7
    1194:	09 c0       	rjmp	.+18     	; 0x11a8 <vfprintf+0x4de>
    1196:	24 e0       	ldi	r18, 0x04	; 4
    1198:	a2 0e       	add	r10, r18
    119a:	b1 1c       	adc	r11, r1
    119c:	f6 01       	movw	r30, r12
    119e:	60 81       	ld	r22, Z
    11a0:	71 81       	ldd	r23, Z+1	; 0x01
    11a2:	82 81       	ldd	r24, Z+2	; 0x02
    11a4:	93 81       	ldd	r25, Z+3	; 0x03
    11a6:	0a c0       	rjmp	.+20     	; 0x11bc <vfprintf+0x4f2>
    11a8:	f2 e0       	ldi	r31, 0x02	; 2
    11aa:	af 0e       	add	r10, r31
    11ac:	b1 1c       	adc	r11, r1
    11ae:	f6 01       	movw	r30, r12
    11b0:	60 81       	ld	r22, Z
    11b2:	71 81       	ldd	r23, Z+1	; 0x01
    11b4:	07 2e       	mov	r0, r23
    11b6:	00 0c       	add	r0, r0
    11b8:	88 0b       	sbc	r24, r24
    11ba:	99 0b       	sbc	r25, r25
    11bc:	f9 2d       	mov	r31, r9
    11be:	ff 76       	andi	r31, 0x6F	; 111
    11c0:	9f 2e       	mov	r9, r31
    11c2:	97 ff       	sbrs	r25, 7
    11c4:	09 c0       	rjmp	.+18     	; 0x11d8 <vfprintf+0x50e>
    11c6:	90 95       	com	r25
    11c8:	80 95       	com	r24
    11ca:	70 95       	com	r23
    11cc:	61 95       	neg	r22
    11ce:	7f 4f       	sbci	r23, 0xFF	; 255
    11d0:	8f 4f       	sbci	r24, 0xFF	; 255
    11d2:	9f 4f       	sbci	r25, 0xFF	; 255
    11d4:	f0 68       	ori	r31, 0x80	; 128
    11d6:	9f 2e       	mov	r9, r31
    11d8:	2a e0       	ldi	r18, 0x0A	; 10
    11da:	30 e0       	ldi	r19, 0x00	; 0
    11dc:	a3 01       	movw	r20, r6
    11de:	0e 94 4c 0b 	call	0x1698	; 0x1698 <__ultoa_invert>
    11e2:	c8 2e       	mov	r12, r24
    11e4:	c6 18       	sub	r12, r6
    11e6:	3f c0       	rjmp	.+126    	; 0x1266 <vfprintf+0x59c>
    11e8:	09 2d       	mov	r16, r9
    11ea:	85 37       	cpi	r24, 0x75	; 117
    11ec:	21 f4       	brne	.+8      	; 0x11f6 <vfprintf+0x52c>
    11ee:	0f 7e       	andi	r16, 0xEF	; 239
    11f0:	2a e0       	ldi	r18, 0x0A	; 10
    11f2:	30 e0       	ldi	r19, 0x00	; 0
    11f4:	1d c0       	rjmp	.+58     	; 0x1230 <vfprintf+0x566>
    11f6:	09 7f       	andi	r16, 0xF9	; 249
    11f8:	8f 36       	cpi	r24, 0x6F	; 111
    11fa:	91 f0       	breq	.+36     	; 0x1220 <vfprintf+0x556>
    11fc:	18 f4       	brcc	.+6      	; 0x1204 <vfprintf+0x53a>
    11fe:	88 35       	cpi	r24, 0x58	; 88
    1200:	59 f0       	breq	.+22     	; 0x1218 <vfprintf+0x54e>
    1202:	c3 c0       	rjmp	.+390    	; 0x138a <vfprintf+0x6c0>
    1204:	80 37       	cpi	r24, 0x70	; 112
    1206:	19 f0       	breq	.+6      	; 0x120e <vfprintf+0x544>
    1208:	88 37       	cpi	r24, 0x78	; 120
    120a:	11 f0       	breq	.+4      	; 0x1210 <vfprintf+0x546>
    120c:	be c0       	rjmp	.+380    	; 0x138a <vfprintf+0x6c0>
    120e:	00 61       	ori	r16, 0x10	; 16
    1210:	04 ff       	sbrs	r16, 4
    1212:	09 c0       	rjmp	.+18     	; 0x1226 <vfprintf+0x55c>
    1214:	04 60       	ori	r16, 0x04	; 4
    1216:	07 c0       	rjmp	.+14     	; 0x1226 <vfprintf+0x55c>
    1218:	94 fe       	sbrs	r9, 4
    121a:	08 c0       	rjmp	.+16     	; 0x122c <vfprintf+0x562>
    121c:	06 60       	ori	r16, 0x06	; 6
    121e:	06 c0       	rjmp	.+12     	; 0x122c <vfprintf+0x562>
    1220:	28 e0       	ldi	r18, 0x08	; 8
    1222:	30 e0       	ldi	r19, 0x00	; 0
    1224:	05 c0       	rjmp	.+10     	; 0x1230 <vfprintf+0x566>
    1226:	20 e1       	ldi	r18, 0x10	; 16
    1228:	30 e0       	ldi	r19, 0x00	; 0
    122a:	02 c0       	rjmp	.+4      	; 0x1230 <vfprintf+0x566>
    122c:	20 e1       	ldi	r18, 0x10	; 16
    122e:	32 e0       	ldi	r19, 0x02	; 2
    1230:	56 01       	movw	r10, r12
    1232:	07 ff       	sbrs	r16, 7
    1234:	09 c0       	rjmp	.+18     	; 0x1248 <vfprintf+0x57e>
    1236:	84 e0       	ldi	r24, 0x04	; 4
    1238:	a8 0e       	add	r10, r24
    123a:	b1 1c       	adc	r11, r1
    123c:	f6 01       	movw	r30, r12
    123e:	60 81       	ld	r22, Z
    1240:	71 81       	ldd	r23, Z+1	; 0x01
    1242:	82 81       	ldd	r24, Z+2	; 0x02
    1244:	93 81       	ldd	r25, Z+3	; 0x03
    1246:	08 c0       	rjmp	.+16     	; 0x1258 <vfprintf+0x58e>
    1248:	f2 e0       	ldi	r31, 0x02	; 2
    124a:	af 0e       	add	r10, r31
    124c:	b1 1c       	adc	r11, r1
    124e:	f6 01       	movw	r30, r12
    1250:	60 81       	ld	r22, Z
    1252:	71 81       	ldd	r23, Z+1	; 0x01
    1254:	80 e0       	ldi	r24, 0x00	; 0
    1256:	90 e0       	ldi	r25, 0x00	; 0
    1258:	a3 01       	movw	r20, r6
    125a:	0e 94 4c 0b 	call	0x1698	; 0x1698 <__ultoa_invert>
    125e:	c8 2e       	mov	r12, r24
    1260:	c6 18       	sub	r12, r6
    1262:	0f 77       	andi	r16, 0x7F	; 127
    1264:	90 2e       	mov	r9, r16
    1266:	96 fe       	sbrs	r9, 6
    1268:	0b c0       	rjmp	.+22     	; 0x1280 <vfprintf+0x5b6>
    126a:	09 2d       	mov	r16, r9
    126c:	0e 7f       	andi	r16, 0xFE	; 254
    126e:	c1 16       	cp	r12, r17
    1270:	50 f4       	brcc	.+20     	; 0x1286 <vfprintf+0x5bc>
    1272:	94 fe       	sbrs	r9, 4
    1274:	0a c0       	rjmp	.+20     	; 0x128a <vfprintf+0x5c0>
    1276:	92 fc       	sbrc	r9, 2
    1278:	08 c0       	rjmp	.+16     	; 0x128a <vfprintf+0x5c0>
    127a:	09 2d       	mov	r16, r9
    127c:	0e 7e       	andi	r16, 0xEE	; 238
    127e:	05 c0       	rjmp	.+10     	; 0x128a <vfprintf+0x5c0>
    1280:	dc 2c       	mov	r13, r12
    1282:	09 2d       	mov	r16, r9
    1284:	03 c0       	rjmp	.+6      	; 0x128c <vfprintf+0x5c2>
    1286:	dc 2c       	mov	r13, r12
    1288:	01 c0       	rjmp	.+2      	; 0x128c <vfprintf+0x5c2>
    128a:	d1 2e       	mov	r13, r17
    128c:	04 ff       	sbrs	r16, 4
    128e:	0d c0       	rjmp	.+26     	; 0x12aa <vfprintf+0x5e0>
    1290:	fe 01       	movw	r30, r28
    1292:	ec 0d       	add	r30, r12
    1294:	f1 1d       	adc	r31, r1
    1296:	80 81       	ld	r24, Z
    1298:	80 33       	cpi	r24, 0x30	; 48
    129a:	11 f4       	brne	.+4      	; 0x12a0 <vfprintf+0x5d6>
    129c:	09 7e       	andi	r16, 0xE9	; 233
    129e:	09 c0       	rjmp	.+18     	; 0x12b2 <vfprintf+0x5e8>
    12a0:	02 ff       	sbrs	r16, 2
    12a2:	06 c0       	rjmp	.+12     	; 0x12b0 <vfprintf+0x5e6>
    12a4:	d3 94       	inc	r13
    12a6:	d3 94       	inc	r13
    12a8:	04 c0       	rjmp	.+8      	; 0x12b2 <vfprintf+0x5e8>
    12aa:	80 2f       	mov	r24, r16
    12ac:	86 78       	andi	r24, 0x86	; 134
    12ae:	09 f0       	breq	.+2      	; 0x12b2 <vfprintf+0x5e8>
    12b0:	d3 94       	inc	r13
    12b2:	03 fd       	sbrc	r16, 3
    12b4:	11 c0       	rjmp	.+34     	; 0x12d8 <vfprintf+0x60e>
    12b6:	00 ff       	sbrs	r16, 0
    12b8:	06 c0       	rjmp	.+12     	; 0x12c6 <vfprintf+0x5fc>
    12ba:	1c 2d       	mov	r17, r12
    12bc:	d5 14       	cp	r13, r5
    12be:	80 f4       	brcc	.+32     	; 0x12e0 <vfprintf+0x616>
    12c0:	15 0d       	add	r17, r5
    12c2:	1d 19       	sub	r17, r13
    12c4:	0d c0       	rjmp	.+26     	; 0x12e0 <vfprintf+0x616>
    12c6:	d5 14       	cp	r13, r5
    12c8:	58 f4       	brcc	.+22     	; 0x12e0 <vfprintf+0x616>
    12ca:	b7 01       	movw	r22, r14
    12cc:	80 e2       	ldi	r24, 0x20	; 32
    12ce:	90 e0       	ldi	r25, 0x00	; 0
    12d0:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <fputc>
    12d4:	d3 94       	inc	r13
    12d6:	f7 cf       	rjmp	.-18     	; 0x12c6 <vfprintf+0x5fc>
    12d8:	d5 14       	cp	r13, r5
    12da:	10 f4       	brcc	.+4      	; 0x12e0 <vfprintf+0x616>
    12dc:	5d 18       	sub	r5, r13
    12de:	01 c0       	rjmp	.+2      	; 0x12e2 <vfprintf+0x618>
    12e0:	51 2c       	mov	r5, r1
    12e2:	04 ff       	sbrs	r16, 4
    12e4:	10 c0       	rjmp	.+32     	; 0x1306 <vfprintf+0x63c>
    12e6:	b7 01       	movw	r22, r14
    12e8:	80 e3       	ldi	r24, 0x30	; 48
    12ea:	90 e0       	ldi	r25, 0x00	; 0
    12ec:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <fputc>
    12f0:	02 ff       	sbrs	r16, 2
    12f2:	17 c0       	rjmp	.+46     	; 0x1322 <vfprintf+0x658>
    12f4:	01 fd       	sbrc	r16, 1
    12f6:	03 c0       	rjmp	.+6      	; 0x12fe <vfprintf+0x634>
    12f8:	88 e7       	ldi	r24, 0x78	; 120
    12fa:	90 e0       	ldi	r25, 0x00	; 0
    12fc:	02 c0       	rjmp	.+4      	; 0x1302 <vfprintf+0x638>
    12fe:	88 e5       	ldi	r24, 0x58	; 88
    1300:	90 e0       	ldi	r25, 0x00	; 0
    1302:	b7 01       	movw	r22, r14
    1304:	0c c0       	rjmp	.+24     	; 0x131e <vfprintf+0x654>
    1306:	80 2f       	mov	r24, r16
    1308:	86 78       	andi	r24, 0x86	; 134
    130a:	59 f0       	breq	.+22     	; 0x1322 <vfprintf+0x658>
    130c:	01 ff       	sbrs	r16, 1
    130e:	02 c0       	rjmp	.+4      	; 0x1314 <vfprintf+0x64a>
    1310:	8b e2       	ldi	r24, 0x2B	; 43
    1312:	01 c0       	rjmp	.+2      	; 0x1316 <vfprintf+0x64c>
    1314:	80 e2       	ldi	r24, 0x20	; 32
    1316:	07 fd       	sbrc	r16, 7
    1318:	8d e2       	ldi	r24, 0x2D	; 45
    131a:	b7 01       	movw	r22, r14
    131c:	90 e0       	ldi	r25, 0x00	; 0
    131e:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <fputc>
    1322:	c1 16       	cp	r12, r17
    1324:	38 f4       	brcc	.+14     	; 0x1334 <vfprintf+0x66a>
    1326:	b7 01       	movw	r22, r14
    1328:	80 e3       	ldi	r24, 0x30	; 48
    132a:	90 e0       	ldi	r25, 0x00	; 0
    132c:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <fputc>
    1330:	11 50       	subi	r17, 0x01	; 1
    1332:	f7 cf       	rjmp	.-18     	; 0x1322 <vfprintf+0x658>
    1334:	ca 94       	dec	r12
    1336:	f3 01       	movw	r30, r6
    1338:	ec 0d       	add	r30, r12
    133a:	f1 1d       	adc	r31, r1
    133c:	80 81       	ld	r24, Z
    133e:	b7 01       	movw	r22, r14
    1340:	90 e0       	ldi	r25, 0x00	; 0
    1342:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <fputc>
    1346:	c1 10       	cpse	r12, r1
    1348:	f5 cf       	rjmp	.-22     	; 0x1334 <vfprintf+0x66a>
    134a:	15 c0       	rjmp	.+42     	; 0x1376 <vfprintf+0x6ac>
    134c:	f4 e0       	ldi	r31, 0x04	; 4
    134e:	f5 15       	cp	r31, r5
    1350:	60 f5       	brcc	.+88     	; 0x13aa <vfprintf+0x6e0>
    1352:	84 e0       	ldi	r24, 0x04	; 4
    1354:	58 1a       	sub	r5, r24
    1356:	93 fe       	sbrs	r9, 3
    1358:	1f c0       	rjmp	.+62     	; 0x1398 <vfprintf+0x6ce>
    135a:	01 11       	cpse	r16, r1
    135c:	27 c0       	rjmp	.+78     	; 0x13ac <vfprintf+0x6e2>
    135e:	2c 85       	ldd	r18, Y+12	; 0x0c
    1360:	23 ff       	sbrs	r18, 3
    1362:	2a c0       	rjmp	.+84     	; 0x13b8 <vfprintf+0x6ee>
    1364:	04 e0       	ldi	r16, 0x04	; 4
    1366:	12 e0       	ldi	r17, 0x02	; 2
    1368:	39 2d       	mov	r19, r9
    136a:	30 71       	andi	r19, 0x10	; 16
    136c:	93 2e       	mov	r9, r19
    136e:	f8 01       	movw	r30, r16
    1370:	84 91       	lpm	r24, Z
    1372:	81 11       	cpse	r24, r1
    1374:	24 c0       	rjmp	.+72     	; 0x13be <vfprintf+0x6f4>
    1376:	55 20       	and	r5, r5
    1378:	09 f4       	brne	.+2      	; 0x137c <vfprintf+0x6b2>
    137a:	e4 cc       	rjmp	.-1592   	; 0xd44 <vfprintf+0x7a>
    137c:	b7 01       	movw	r22, r14
    137e:	80 e2       	ldi	r24, 0x20	; 32
    1380:	90 e0       	ldi	r25, 0x00	; 0
    1382:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <fputc>
    1386:	5a 94       	dec	r5
    1388:	f6 cf       	rjmp	.-20     	; 0x1376 <vfprintf+0x6ac>
    138a:	f7 01       	movw	r30, r14
    138c:	86 81       	ldd	r24, Z+6	; 0x06
    138e:	97 81       	ldd	r25, Z+7	; 0x07
    1390:	26 c0       	rjmp	.+76     	; 0x13de <vfprintf+0x714>
    1392:	8f ef       	ldi	r24, 0xFF	; 255
    1394:	9f ef       	ldi	r25, 0xFF	; 255
    1396:	23 c0       	rjmp	.+70     	; 0x13de <vfprintf+0x714>
    1398:	b7 01       	movw	r22, r14
    139a:	80 e2       	ldi	r24, 0x20	; 32
    139c:	90 e0       	ldi	r25, 0x00	; 0
    139e:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <fputc>
    13a2:	5a 94       	dec	r5
    13a4:	51 10       	cpse	r5, r1
    13a6:	f8 cf       	rjmp	.-16     	; 0x1398 <vfprintf+0x6ce>
    13a8:	d8 cf       	rjmp	.-80     	; 0x135a <vfprintf+0x690>
    13aa:	51 2c       	mov	r5, r1
    13ac:	b7 01       	movw	r22, r14
    13ae:	80 2f       	mov	r24, r16
    13b0:	90 e0       	ldi	r25, 0x00	; 0
    13b2:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <fputc>
    13b6:	d3 cf       	rjmp	.-90     	; 0x135e <vfprintf+0x694>
    13b8:	08 e0       	ldi	r16, 0x08	; 8
    13ba:	12 e0       	ldi	r17, 0x02	; 2
    13bc:	d5 cf       	rjmp	.-86     	; 0x1368 <vfprintf+0x69e>
    13be:	91 10       	cpse	r9, r1
    13c0:	80 52       	subi	r24, 0x20	; 32
    13c2:	b7 01       	movw	r22, r14
    13c4:	90 e0       	ldi	r25, 0x00	; 0
    13c6:	0e 94 fc 0a 	call	0x15f8	; 0x15f8 <fputc>
    13ca:	0f 5f       	subi	r16, 0xFF	; 255
    13cc:	1f 4f       	sbci	r17, 0xFF	; 255
    13ce:	cf cf       	rjmp	.-98     	; 0x136e <vfprintf+0x6a4>
    13d0:	23 e0       	ldi	r18, 0x03	; 3
    13d2:	25 15       	cp	r18, r5
    13d4:	10 f4       	brcc	.+4      	; 0x13da <vfprintf+0x710>
    13d6:	83 e0       	ldi	r24, 0x03	; 3
    13d8:	bd cf       	rjmp	.-134    	; 0x1354 <vfprintf+0x68a>
    13da:	51 2c       	mov	r5, r1
    13dc:	c0 cf       	rjmp	.-128    	; 0x135e <vfprintf+0x694>
    13de:	60 96       	adiw	r28, 0x10	; 16
    13e0:	cd bf       	out	0x3d, r28	; 61
    13e2:	de bf       	out	0x3e, r29	; 62
    13e4:	df 91       	pop	r29
    13e6:	cf 91       	pop	r28
    13e8:	1f 91       	pop	r17
    13ea:	0f 91       	pop	r16
    13ec:	ff 90       	pop	r15
    13ee:	ef 90       	pop	r14
    13f0:	df 90       	pop	r13
    13f2:	cf 90       	pop	r12
    13f4:	bf 90       	pop	r11
    13f6:	af 90       	pop	r10
    13f8:	9f 90       	pop	r9
    13fa:	8f 90       	pop	r8
    13fc:	7f 90       	pop	r7
    13fe:	6f 90       	pop	r6
    1400:	5f 90       	pop	r5
    1402:	4f 90       	pop	r4
    1404:	3f 90       	pop	r3
    1406:	2f 90       	pop	r2
    1408:	08 95       	ret

0000140a <__ftoa_engine>:
    140a:	28 30       	cpi	r18, 0x08	; 8
    140c:	08 f0       	brcs	.+2      	; 0x1410 <__ftoa_engine+0x6>
    140e:	27 e0       	ldi	r18, 0x07	; 7
    1410:	33 27       	eor	r19, r19
    1412:	da 01       	movw	r26, r20
    1414:	99 0f       	add	r25, r25
    1416:	31 1d       	adc	r19, r1
    1418:	87 fd       	sbrc	r24, 7
    141a:	91 60       	ori	r25, 0x01	; 1
    141c:	00 96       	adiw	r24, 0x00	; 0
    141e:	61 05       	cpc	r22, r1
    1420:	71 05       	cpc	r23, r1
    1422:	39 f4       	brne	.+14     	; 0x1432 <__ftoa_engine+0x28>
    1424:	32 60       	ori	r19, 0x02	; 2
    1426:	2e 5f       	subi	r18, 0xFE	; 254
    1428:	3d 93       	st	X+, r19
    142a:	30 e3       	ldi	r19, 0x30	; 48
    142c:	2a 95       	dec	r18
    142e:	e1 f7       	brne	.-8      	; 0x1428 <__ftoa_engine+0x1e>
    1430:	08 95       	ret
    1432:	9f 3f       	cpi	r25, 0xFF	; 255
    1434:	30 f0       	brcs	.+12     	; 0x1442 <__ftoa_engine+0x38>
    1436:	80 38       	cpi	r24, 0x80	; 128
    1438:	71 05       	cpc	r23, r1
    143a:	61 05       	cpc	r22, r1
    143c:	09 f0       	breq	.+2      	; 0x1440 <__ftoa_engine+0x36>
    143e:	3c 5f       	subi	r19, 0xFC	; 252
    1440:	3c 5f       	subi	r19, 0xFC	; 252
    1442:	3d 93       	st	X+, r19
    1444:	91 30       	cpi	r25, 0x01	; 1
    1446:	08 f0       	brcs	.+2      	; 0x144a <__ftoa_engine+0x40>
    1448:	80 68       	ori	r24, 0x80	; 128
    144a:	91 1d       	adc	r25, r1
    144c:	df 93       	push	r29
    144e:	cf 93       	push	r28
    1450:	1f 93       	push	r17
    1452:	0f 93       	push	r16
    1454:	ff 92       	push	r15
    1456:	ef 92       	push	r14
    1458:	19 2f       	mov	r17, r25
    145a:	98 7f       	andi	r25, 0xF8	; 248
    145c:	96 95       	lsr	r25
    145e:	e9 2f       	mov	r30, r25
    1460:	96 95       	lsr	r25
    1462:	96 95       	lsr	r25
    1464:	e9 0f       	add	r30, r25
    1466:	ff 27       	eor	r31, r31
    1468:	ea 59       	subi	r30, 0x9A	; 154
    146a:	fd 4f       	sbci	r31, 0xFD	; 253
    146c:	99 27       	eor	r25, r25
    146e:	33 27       	eor	r19, r19
    1470:	ee 24       	eor	r14, r14
    1472:	ff 24       	eor	r15, r15
    1474:	a7 01       	movw	r20, r14
    1476:	e7 01       	movw	r28, r14
    1478:	05 90       	lpm	r0, Z+
    147a:	08 94       	sec
    147c:	07 94       	ror	r0
    147e:	28 f4       	brcc	.+10     	; 0x148a <__ftoa_engine+0x80>
    1480:	36 0f       	add	r19, r22
    1482:	e7 1e       	adc	r14, r23
    1484:	f8 1e       	adc	r15, r24
    1486:	49 1f       	adc	r20, r25
    1488:	51 1d       	adc	r21, r1
    148a:	66 0f       	add	r22, r22
    148c:	77 1f       	adc	r23, r23
    148e:	88 1f       	adc	r24, r24
    1490:	99 1f       	adc	r25, r25
    1492:	06 94       	lsr	r0
    1494:	a1 f7       	brne	.-24     	; 0x147e <__ftoa_engine+0x74>
    1496:	05 90       	lpm	r0, Z+
    1498:	07 94       	ror	r0
    149a:	28 f4       	brcc	.+10     	; 0x14a6 <__ftoa_engine+0x9c>
    149c:	e7 0e       	add	r14, r23
    149e:	f8 1e       	adc	r15, r24
    14a0:	49 1f       	adc	r20, r25
    14a2:	56 1f       	adc	r21, r22
    14a4:	c1 1d       	adc	r28, r1
    14a6:	77 0f       	add	r23, r23
    14a8:	88 1f       	adc	r24, r24
    14aa:	99 1f       	adc	r25, r25
    14ac:	66 1f       	adc	r22, r22
    14ae:	06 94       	lsr	r0
    14b0:	a1 f7       	brne	.-24     	; 0x149a <__ftoa_engine+0x90>
    14b2:	05 90       	lpm	r0, Z+
    14b4:	07 94       	ror	r0
    14b6:	28 f4       	brcc	.+10     	; 0x14c2 <__ftoa_engine+0xb8>
    14b8:	f8 0e       	add	r15, r24
    14ba:	49 1f       	adc	r20, r25
    14bc:	56 1f       	adc	r21, r22
    14be:	c7 1f       	adc	r28, r23
    14c0:	d1 1d       	adc	r29, r1
    14c2:	88 0f       	add	r24, r24
    14c4:	99 1f       	adc	r25, r25
    14c6:	66 1f       	adc	r22, r22
    14c8:	77 1f       	adc	r23, r23
    14ca:	06 94       	lsr	r0
    14cc:	a1 f7       	brne	.-24     	; 0x14b6 <__ftoa_engine+0xac>
    14ce:	05 90       	lpm	r0, Z+
    14d0:	07 94       	ror	r0
    14d2:	20 f4       	brcc	.+8      	; 0x14dc <__ftoa_engine+0xd2>
    14d4:	49 0f       	add	r20, r25
    14d6:	56 1f       	adc	r21, r22
    14d8:	c7 1f       	adc	r28, r23
    14da:	d8 1f       	adc	r29, r24
    14dc:	99 0f       	add	r25, r25
    14de:	66 1f       	adc	r22, r22
    14e0:	77 1f       	adc	r23, r23
    14e2:	88 1f       	adc	r24, r24
    14e4:	06 94       	lsr	r0
    14e6:	a9 f7       	brne	.-22     	; 0x14d2 <__ftoa_engine+0xc8>
    14e8:	84 91       	lpm	r24, Z
    14ea:	10 95       	com	r17
    14ec:	17 70       	andi	r17, 0x07	; 7
    14ee:	41 f0       	breq	.+16     	; 0x1500 <__ftoa_engine+0xf6>
    14f0:	d6 95       	lsr	r29
    14f2:	c7 95       	ror	r28
    14f4:	57 95       	ror	r21
    14f6:	47 95       	ror	r20
    14f8:	f7 94       	ror	r15
    14fa:	e7 94       	ror	r14
    14fc:	1a 95       	dec	r17
    14fe:	c1 f7       	brne	.-16     	; 0x14f0 <__ftoa_engine+0xe6>
    1500:	ec e0       	ldi	r30, 0x0C	; 12
    1502:	f2 e0       	ldi	r31, 0x02	; 2
    1504:	68 94       	set
    1506:	15 90       	lpm	r1, Z+
    1508:	15 91       	lpm	r17, Z+
    150a:	35 91       	lpm	r19, Z+
    150c:	65 91       	lpm	r22, Z+
    150e:	95 91       	lpm	r25, Z+
    1510:	05 90       	lpm	r0, Z+
    1512:	7f e2       	ldi	r23, 0x2F	; 47
    1514:	73 95       	inc	r23
    1516:	e1 18       	sub	r14, r1
    1518:	f1 0a       	sbc	r15, r17
    151a:	43 0b       	sbc	r20, r19
    151c:	56 0b       	sbc	r21, r22
    151e:	c9 0b       	sbc	r28, r25
    1520:	d0 09       	sbc	r29, r0
    1522:	c0 f7       	brcc	.-16     	; 0x1514 <__ftoa_engine+0x10a>
    1524:	e1 0c       	add	r14, r1
    1526:	f1 1e       	adc	r15, r17
    1528:	43 1f       	adc	r20, r19
    152a:	56 1f       	adc	r21, r22
    152c:	c9 1f       	adc	r28, r25
    152e:	d0 1d       	adc	r29, r0
    1530:	7e f4       	brtc	.+30     	; 0x1550 <__ftoa_engine+0x146>
    1532:	70 33       	cpi	r23, 0x30	; 48
    1534:	11 f4       	brne	.+4      	; 0x153a <__ftoa_engine+0x130>
    1536:	8a 95       	dec	r24
    1538:	e6 cf       	rjmp	.-52     	; 0x1506 <__ftoa_engine+0xfc>
    153a:	e8 94       	clt
    153c:	01 50       	subi	r16, 0x01	; 1
    153e:	30 f0       	brcs	.+12     	; 0x154c <__ftoa_engine+0x142>
    1540:	08 0f       	add	r16, r24
    1542:	0a f4       	brpl	.+2      	; 0x1546 <__ftoa_engine+0x13c>
    1544:	00 27       	eor	r16, r16
    1546:	02 17       	cp	r16, r18
    1548:	08 f4       	brcc	.+2      	; 0x154c <__ftoa_engine+0x142>
    154a:	20 2f       	mov	r18, r16
    154c:	23 95       	inc	r18
    154e:	02 2f       	mov	r16, r18
    1550:	7a 33       	cpi	r23, 0x3A	; 58
    1552:	28 f0       	brcs	.+10     	; 0x155e <__ftoa_engine+0x154>
    1554:	79 e3       	ldi	r23, 0x39	; 57
    1556:	7d 93       	st	X+, r23
    1558:	2a 95       	dec	r18
    155a:	e9 f7       	brne	.-6      	; 0x1556 <__ftoa_engine+0x14c>
    155c:	10 c0       	rjmp	.+32     	; 0x157e <__ftoa_engine+0x174>
    155e:	7d 93       	st	X+, r23
    1560:	2a 95       	dec	r18
    1562:	89 f6       	brne	.-94     	; 0x1506 <__ftoa_engine+0xfc>
    1564:	06 94       	lsr	r0
    1566:	97 95       	ror	r25
    1568:	67 95       	ror	r22
    156a:	37 95       	ror	r19
    156c:	17 95       	ror	r17
    156e:	17 94       	ror	r1
    1570:	e1 18       	sub	r14, r1
    1572:	f1 0a       	sbc	r15, r17
    1574:	43 0b       	sbc	r20, r19
    1576:	56 0b       	sbc	r21, r22
    1578:	c9 0b       	sbc	r28, r25
    157a:	d0 09       	sbc	r29, r0
    157c:	98 f0       	brcs	.+38     	; 0x15a4 <__ftoa_engine+0x19a>
    157e:	23 95       	inc	r18
    1580:	7e 91       	ld	r23, -X
    1582:	73 95       	inc	r23
    1584:	7a 33       	cpi	r23, 0x3A	; 58
    1586:	08 f0       	brcs	.+2      	; 0x158a <__ftoa_engine+0x180>
    1588:	70 e3       	ldi	r23, 0x30	; 48
    158a:	7c 93       	st	X, r23
    158c:	20 13       	cpse	r18, r16
    158e:	b8 f7       	brcc	.-18     	; 0x157e <__ftoa_engine+0x174>
    1590:	7e 91       	ld	r23, -X
    1592:	70 61       	ori	r23, 0x10	; 16
    1594:	7d 93       	st	X+, r23
    1596:	30 f0       	brcs	.+12     	; 0x15a4 <__ftoa_engine+0x19a>
    1598:	83 95       	inc	r24
    159a:	71 e3       	ldi	r23, 0x31	; 49
    159c:	7d 93       	st	X+, r23
    159e:	70 e3       	ldi	r23, 0x30	; 48
    15a0:	2a 95       	dec	r18
    15a2:	e1 f7       	brne	.-8      	; 0x159c <__ftoa_engine+0x192>
    15a4:	11 24       	eor	r1, r1
    15a6:	ef 90       	pop	r14
    15a8:	ff 90       	pop	r15
    15aa:	0f 91       	pop	r16
    15ac:	1f 91       	pop	r17
    15ae:	cf 91       	pop	r28
    15b0:	df 91       	pop	r29
    15b2:	99 27       	eor	r25, r25
    15b4:	87 fd       	sbrc	r24, 7
    15b6:	90 95       	com	r25
    15b8:	08 95       	ret

000015ba <strnlen_P>:
    15ba:	fc 01       	movw	r30, r24
    15bc:	05 90       	lpm	r0, Z+
    15be:	61 50       	subi	r22, 0x01	; 1
    15c0:	70 40       	sbci	r23, 0x00	; 0
    15c2:	01 10       	cpse	r0, r1
    15c4:	d8 f7       	brcc	.-10     	; 0x15bc <strnlen_P+0x2>
    15c6:	80 95       	com	r24
    15c8:	90 95       	com	r25
    15ca:	8e 0f       	add	r24, r30
    15cc:	9f 1f       	adc	r25, r31
    15ce:	08 95       	ret

000015d0 <strcmp>:
    15d0:	fb 01       	movw	r30, r22
    15d2:	dc 01       	movw	r26, r24
    15d4:	8d 91       	ld	r24, X+
    15d6:	01 90       	ld	r0, Z+
    15d8:	80 19       	sub	r24, r0
    15da:	01 10       	cpse	r0, r1
    15dc:	d9 f3       	breq	.-10     	; 0x15d4 <strcmp+0x4>
    15de:	99 0b       	sbc	r25, r25
    15e0:	08 95       	ret

000015e2 <strnlen>:
    15e2:	fc 01       	movw	r30, r24
    15e4:	61 50       	subi	r22, 0x01	; 1
    15e6:	70 40       	sbci	r23, 0x00	; 0
    15e8:	01 90       	ld	r0, Z+
    15ea:	01 10       	cpse	r0, r1
    15ec:	d8 f7       	brcc	.-10     	; 0x15e4 <strnlen+0x2>
    15ee:	80 95       	com	r24
    15f0:	90 95       	com	r25
    15f2:	8e 0f       	add	r24, r30
    15f4:	9f 1f       	adc	r25, r31
    15f6:	08 95       	ret

000015f8 <fputc>:
    15f8:	0f 93       	push	r16
    15fa:	1f 93       	push	r17
    15fc:	cf 93       	push	r28
    15fe:	df 93       	push	r29
    1600:	fb 01       	movw	r30, r22
    1602:	23 81       	ldd	r18, Z+3	; 0x03
    1604:	21 fd       	sbrc	r18, 1
    1606:	03 c0       	rjmp	.+6      	; 0x160e <fputc+0x16>
    1608:	8f ef       	ldi	r24, 0xFF	; 255
    160a:	9f ef       	ldi	r25, 0xFF	; 255
    160c:	2c c0       	rjmp	.+88     	; 0x1666 <fputc+0x6e>
    160e:	22 ff       	sbrs	r18, 2
    1610:	16 c0       	rjmp	.+44     	; 0x163e <fputc+0x46>
    1612:	46 81       	ldd	r20, Z+6	; 0x06
    1614:	57 81       	ldd	r21, Z+7	; 0x07
    1616:	24 81       	ldd	r18, Z+4	; 0x04
    1618:	35 81       	ldd	r19, Z+5	; 0x05
    161a:	42 17       	cp	r20, r18
    161c:	53 07       	cpc	r21, r19
    161e:	44 f4       	brge	.+16     	; 0x1630 <fputc+0x38>
    1620:	a0 81       	ld	r26, Z
    1622:	b1 81       	ldd	r27, Z+1	; 0x01
    1624:	9d 01       	movw	r18, r26
    1626:	2f 5f       	subi	r18, 0xFF	; 255
    1628:	3f 4f       	sbci	r19, 0xFF	; 255
    162a:	20 83       	st	Z, r18
    162c:	31 83       	std	Z+1, r19	; 0x01
    162e:	8c 93       	st	X, r24
    1630:	26 81       	ldd	r18, Z+6	; 0x06
    1632:	37 81       	ldd	r19, Z+7	; 0x07
    1634:	2f 5f       	subi	r18, 0xFF	; 255
    1636:	3f 4f       	sbci	r19, 0xFF	; 255
    1638:	26 83       	std	Z+6, r18	; 0x06
    163a:	37 83       	std	Z+7, r19	; 0x07
    163c:	14 c0       	rjmp	.+40     	; 0x1666 <fputc+0x6e>
    163e:	8b 01       	movw	r16, r22
    1640:	ec 01       	movw	r28, r24
    1642:	fb 01       	movw	r30, r22
    1644:	00 84       	ldd	r0, Z+8	; 0x08
    1646:	f1 85       	ldd	r31, Z+9	; 0x09
    1648:	e0 2d       	mov	r30, r0
    164a:	19 95       	eicall
    164c:	89 2b       	or	r24, r25
    164e:	e1 f6       	brne	.-72     	; 0x1608 <fputc+0x10>
    1650:	d8 01       	movw	r26, r16
    1652:	16 96       	adiw	r26, 0x06	; 6
    1654:	8d 91       	ld	r24, X+
    1656:	9c 91       	ld	r25, X
    1658:	17 97       	sbiw	r26, 0x07	; 7
    165a:	01 96       	adiw	r24, 0x01	; 1
    165c:	16 96       	adiw	r26, 0x06	; 6
    165e:	8d 93       	st	X+, r24
    1660:	9c 93       	st	X, r25
    1662:	17 97       	sbiw	r26, 0x07	; 7
    1664:	ce 01       	movw	r24, r28
    1666:	df 91       	pop	r29
    1668:	cf 91       	pop	r28
    166a:	1f 91       	pop	r17
    166c:	0f 91       	pop	r16
    166e:	08 95       	ret

00001670 <scanf>:
    1670:	cf 93       	push	r28
    1672:	df 93       	push	r29
    1674:	cd b7       	in	r28, 0x3d	; 61
    1676:	de b7       	in	r29, 0x3e	; 62
    1678:	ae 01       	movw	r20, r28
    167a:	4a 5f       	subi	r20, 0xFA	; 250
    167c:	5f 4f       	sbci	r21, 0xFF	; 255
    167e:	fa 01       	movw	r30, r20
    1680:	61 91       	ld	r22, Z+
    1682:	71 91       	ld	r23, Z+
    1684:	af 01       	movw	r20, r30
    1686:	80 91 5d 20 	lds	r24, 0x205D	; 0x80205d <__iob>
    168a:	90 91 5e 20 	lds	r25, 0x205E	; 0x80205e <__iob+0x1>
    168e:	0e 94 63 0d 	call	0x1ac6	; 0x1ac6 <vfscanf>
    1692:	df 91       	pop	r29
    1694:	cf 91       	pop	r28
    1696:	08 95       	ret

00001698 <__ultoa_invert>:
    1698:	fa 01       	movw	r30, r20
    169a:	aa 27       	eor	r26, r26
    169c:	28 30       	cpi	r18, 0x08	; 8
    169e:	51 f1       	breq	.+84     	; 0x16f4 <__ultoa_invert+0x5c>
    16a0:	20 31       	cpi	r18, 0x10	; 16
    16a2:	81 f1       	breq	.+96     	; 0x1704 <__ultoa_invert+0x6c>
    16a4:	e8 94       	clt
    16a6:	6f 93       	push	r22
    16a8:	6e 7f       	andi	r22, 0xFE	; 254
    16aa:	6e 5f       	subi	r22, 0xFE	; 254
    16ac:	7f 4f       	sbci	r23, 0xFF	; 255
    16ae:	8f 4f       	sbci	r24, 0xFF	; 255
    16b0:	9f 4f       	sbci	r25, 0xFF	; 255
    16b2:	af 4f       	sbci	r26, 0xFF	; 255
    16b4:	b1 e0       	ldi	r27, 0x01	; 1
    16b6:	3e d0       	rcall	.+124    	; 0x1734 <__ultoa_invert+0x9c>
    16b8:	b4 e0       	ldi	r27, 0x04	; 4
    16ba:	3c d0       	rcall	.+120    	; 0x1734 <__ultoa_invert+0x9c>
    16bc:	67 0f       	add	r22, r23
    16be:	78 1f       	adc	r23, r24
    16c0:	89 1f       	adc	r24, r25
    16c2:	9a 1f       	adc	r25, r26
    16c4:	a1 1d       	adc	r26, r1
    16c6:	68 0f       	add	r22, r24
    16c8:	79 1f       	adc	r23, r25
    16ca:	8a 1f       	adc	r24, r26
    16cc:	91 1d       	adc	r25, r1
    16ce:	a1 1d       	adc	r26, r1
    16d0:	6a 0f       	add	r22, r26
    16d2:	71 1d       	adc	r23, r1
    16d4:	81 1d       	adc	r24, r1
    16d6:	91 1d       	adc	r25, r1
    16d8:	a1 1d       	adc	r26, r1
    16da:	20 d0       	rcall	.+64     	; 0x171c <__ultoa_invert+0x84>
    16dc:	09 f4       	brne	.+2      	; 0x16e0 <__ultoa_invert+0x48>
    16de:	68 94       	set
    16e0:	3f 91       	pop	r19
    16e2:	2a e0       	ldi	r18, 0x0A	; 10
    16e4:	26 9f       	mul	r18, r22
    16e6:	11 24       	eor	r1, r1
    16e8:	30 19       	sub	r19, r0
    16ea:	30 5d       	subi	r19, 0xD0	; 208
    16ec:	31 93       	st	Z+, r19
    16ee:	de f6       	brtc	.-74     	; 0x16a6 <__ultoa_invert+0xe>
    16f0:	cf 01       	movw	r24, r30
    16f2:	08 95       	ret
    16f4:	46 2f       	mov	r20, r22
    16f6:	47 70       	andi	r20, 0x07	; 7
    16f8:	40 5d       	subi	r20, 0xD0	; 208
    16fa:	41 93       	st	Z+, r20
    16fc:	b3 e0       	ldi	r27, 0x03	; 3
    16fe:	0f d0       	rcall	.+30     	; 0x171e <__ultoa_invert+0x86>
    1700:	c9 f7       	brne	.-14     	; 0x16f4 <__ultoa_invert+0x5c>
    1702:	f6 cf       	rjmp	.-20     	; 0x16f0 <__ultoa_invert+0x58>
    1704:	46 2f       	mov	r20, r22
    1706:	4f 70       	andi	r20, 0x0F	; 15
    1708:	40 5d       	subi	r20, 0xD0	; 208
    170a:	4a 33       	cpi	r20, 0x3A	; 58
    170c:	18 f0       	brcs	.+6      	; 0x1714 <__ultoa_invert+0x7c>
    170e:	49 5d       	subi	r20, 0xD9	; 217
    1710:	31 fd       	sbrc	r19, 1
    1712:	40 52       	subi	r20, 0x20	; 32
    1714:	41 93       	st	Z+, r20
    1716:	02 d0       	rcall	.+4      	; 0x171c <__ultoa_invert+0x84>
    1718:	a9 f7       	brne	.-22     	; 0x1704 <__ultoa_invert+0x6c>
    171a:	ea cf       	rjmp	.-44     	; 0x16f0 <__ultoa_invert+0x58>
    171c:	b4 e0       	ldi	r27, 0x04	; 4
    171e:	a6 95       	lsr	r26
    1720:	97 95       	ror	r25
    1722:	87 95       	ror	r24
    1724:	77 95       	ror	r23
    1726:	67 95       	ror	r22
    1728:	ba 95       	dec	r27
    172a:	c9 f7       	brne	.-14     	; 0x171e <__ultoa_invert+0x86>
    172c:	00 97       	sbiw	r24, 0x00	; 0
    172e:	61 05       	cpc	r22, r1
    1730:	71 05       	cpc	r23, r1
    1732:	08 95       	ret
    1734:	9b 01       	movw	r18, r22
    1736:	ac 01       	movw	r20, r24
    1738:	0a 2e       	mov	r0, r26
    173a:	06 94       	lsr	r0
    173c:	57 95       	ror	r21
    173e:	47 95       	ror	r20
    1740:	37 95       	ror	r19
    1742:	27 95       	ror	r18
    1744:	ba 95       	dec	r27
    1746:	c9 f7       	brne	.-14     	; 0x173a <__ultoa_invert+0xa2>
    1748:	62 0f       	add	r22, r18
    174a:	73 1f       	adc	r23, r19
    174c:	84 1f       	adc	r24, r20
    174e:	95 1f       	adc	r25, r21
    1750:	a0 1d       	adc	r26, r0
    1752:	08 95       	ret

00001754 <putval>:
    1754:	20 fd       	sbrc	r18, 0
    1756:	09 c0       	rjmp	.+18     	; 0x176a <putval+0x16>
    1758:	fc 01       	movw	r30, r24
    175a:	23 fd       	sbrc	r18, 3
    175c:	05 c0       	rjmp	.+10     	; 0x1768 <putval+0x14>
    175e:	22 ff       	sbrs	r18, 2
    1760:	02 c0       	rjmp	.+4      	; 0x1766 <putval+0x12>
    1762:	73 83       	std	Z+3, r23	; 0x03
    1764:	62 83       	std	Z+2, r22	; 0x02
    1766:	51 83       	std	Z+1, r21	; 0x01
    1768:	40 83       	st	Z, r20
    176a:	08 95       	ret

0000176c <mulacc>:
    176c:	44 fd       	sbrc	r20, 4
    176e:	17 c0       	rjmp	.+46     	; 0x179e <mulacc+0x32>
    1770:	46 fd       	sbrc	r20, 6
    1772:	17 c0       	rjmp	.+46     	; 0x17a2 <mulacc+0x36>
    1774:	ab 01       	movw	r20, r22
    1776:	bc 01       	movw	r22, r24
    1778:	da 01       	movw	r26, r20
    177a:	fb 01       	movw	r30, r22
    177c:	aa 0f       	add	r26, r26
    177e:	bb 1f       	adc	r27, r27
    1780:	ee 1f       	adc	r30, r30
    1782:	ff 1f       	adc	r31, r31
    1784:	10 94       	com	r1
    1786:	d1 f7       	brne	.-12     	; 0x177c <mulacc+0x10>
    1788:	4a 0f       	add	r20, r26
    178a:	5b 1f       	adc	r21, r27
    178c:	6e 1f       	adc	r22, r30
    178e:	7f 1f       	adc	r23, r31
    1790:	cb 01       	movw	r24, r22
    1792:	ba 01       	movw	r22, r20
    1794:	66 0f       	add	r22, r22
    1796:	77 1f       	adc	r23, r23
    1798:	88 1f       	adc	r24, r24
    179a:	99 1f       	adc	r25, r25
    179c:	09 c0       	rjmp	.+18     	; 0x17b0 <mulacc+0x44>
    179e:	33 e0       	ldi	r19, 0x03	; 3
    17a0:	01 c0       	rjmp	.+2      	; 0x17a4 <mulacc+0x38>
    17a2:	34 e0       	ldi	r19, 0x04	; 4
    17a4:	66 0f       	add	r22, r22
    17a6:	77 1f       	adc	r23, r23
    17a8:	88 1f       	adc	r24, r24
    17aa:	99 1f       	adc	r25, r25
    17ac:	31 50       	subi	r19, 0x01	; 1
    17ae:	d1 f7       	brne	.-12     	; 0x17a4 <mulacc+0x38>
    17b0:	62 0f       	add	r22, r18
    17b2:	71 1d       	adc	r23, r1
    17b4:	81 1d       	adc	r24, r1
    17b6:	91 1d       	adc	r25, r1
    17b8:	08 95       	ret

000017ba <skip_spaces>:
    17ba:	0f 93       	push	r16
    17bc:	1f 93       	push	r17
    17be:	cf 93       	push	r28
    17c0:	df 93       	push	r29
    17c2:	8c 01       	movw	r16, r24
    17c4:	c8 01       	movw	r24, r16
    17c6:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <fgetc>
    17ca:	ec 01       	movw	r28, r24
    17cc:	97 fd       	sbrc	r25, 7
    17ce:	08 c0       	rjmp	.+16     	; 0x17e0 <skip_spaces+0x26>
    17d0:	0e 94 88 0e 	call	0x1d10	; 0x1d10 <isspace>
    17d4:	89 2b       	or	r24, r25
    17d6:	b1 f7       	brne	.-20     	; 0x17c4 <skip_spaces+0xa>
    17d8:	b8 01       	movw	r22, r16
    17da:	ce 01       	movw	r24, r28
    17dc:	0e 94 da 0e 	call	0x1db4	; 0x1db4 <ungetc>
    17e0:	ce 01       	movw	r24, r28
    17e2:	df 91       	pop	r29
    17e4:	cf 91       	pop	r28
    17e6:	1f 91       	pop	r17
    17e8:	0f 91       	pop	r16
    17ea:	08 95       	ret

000017ec <conv_int>:
    17ec:	8f 92       	push	r8
    17ee:	9f 92       	push	r9
    17f0:	af 92       	push	r10
    17f2:	bf 92       	push	r11
    17f4:	ef 92       	push	r14
    17f6:	ff 92       	push	r15
    17f8:	0f 93       	push	r16
    17fa:	1f 93       	push	r17
    17fc:	cf 93       	push	r28
    17fe:	df 93       	push	r29
    1800:	8c 01       	movw	r16, r24
    1802:	d6 2f       	mov	r29, r22
    1804:	7a 01       	movw	r14, r20
    1806:	b2 2e       	mov	r11, r18
    1808:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <fgetc>
    180c:	9c 01       	movw	r18, r24
    180e:	33 27       	eor	r19, r19
    1810:	2b 32       	cpi	r18, 0x2B	; 43
    1812:	31 05       	cpc	r19, r1
    1814:	31 f0       	breq	.+12     	; 0x1822 <conv_int+0x36>
    1816:	2d 32       	cpi	r18, 0x2D	; 45
    1818:	31 05       	cpc	r19, r1
    181a:	61 f4       	brne	.+24     	; 0x1834 <conv_int+0x48>
    181c:	8b 2d       	mov	r24, r11
    181e:	80 68       	ori	r24, 0x80	; 128
    1820:	b8 2e       	mov	r11, r24
    1822:	d1 50       	subi	r29, 0x01	; 1
    1824:	11 f4       	brne	.+4      	; 0x182a <conv_int+0x3e>
    1826:	80 e0       	ldi	r24, 0x00	; 0
    1828:	68 c0       	rjmp	.+208    	; 0x18fa <conv_int+0x10e>
    182a:	c8 01       	movw	r24, r16
    182c:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <fgetc>
    1830:	97 fd       	sbrc	r25, 7
    1832:	f9 cf       	rjmp	.-14     	; 0x1826 <conv_int+0x3a>
    1834:	cb 2d       	mov	r28, r11
    1836:	cd 7f       	andi	r28, 0xFD	; 253
    1838:	2b 2d       	mov	r18, r11
    183a:	20 73       	andi	r18, 0x30	; 48
    183c:	09 f5       	brne	.+66     	; 0x1880 <conv_int+0x94>
    183e:	80 33       	cpi	r24, 0x30	; 48
    1840:	f9 f4       	brne	.+62     	; 0x1880 <conv_int+0x94>
    1842:	aa 24       	eor	r10, r10
    1844:	aa 94       	dec	r10
    1846:	ad 0e       	add	r10, r29
    1848:	09 f4       	brne	.+2      	; 0x184c <conv_int+0x60>
    184a:	43 c0       	rjmp	.+134    	; 0x18d2 <conv_int+0xe6>
    184c:	c8 01       	movw	r24, r16
    184e:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <fgetc>
    1852:	97 fd       	sbrc	r25, 7
    1854:	3e c0       	rjmp	.+124    	; 0x18d2 <conv_int+0xe6>
    1856:	9c 01       	movw	r18, r24
    1858:	2f 7d       	andi	r18, 0xDF	; 223
    185a:	33 27       	eor	r19, r19
    185c:	28 35       	cpi	r18, 0x58	; 88
    185e:	31 05       	cpc	r19, r1
    1860:	49 f4       	brne	.+18     	; 0x1874 <conv_int+0x88>
    1862:	c2 64       	ori	r28, 0x42	; 66
    1864:	d2 50       	subi	r29, 0x02	; 2
    1866:	a9 f1       	breq	.+106    	; 0x18d2 <conv_int+0xe6>
    1868:	c8 01       	movw	r24, r16
    186a:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <fgetc>
    186e:	97 ff       	sbrs	r25, 7
    1870:	07 c0       	rjmp	.+14     	; 0x1880 <conv_int+0x94>
    1872:	2f c0       	rjmp	.+94     	; 0x18d2 <conv_int+0xe6>
    1874:	b6 fe       	sbrs	r11, 6
    1876:	02 c0       	rjmp	.+4      	; 0x187c <conv_int+0x90>
    1878:	c2 60       	ori	r28, 0x02	; 2
    187a:	01 c0       	rjmp	.+2      	; 0x187e <conv_int+0x92>
    187c:	c2 61       	ori	r28, 0x12	; 18
    187e:	da 2d       	mov	r29, r10
    1880:	81 2c       	mov	r8, r1
    1882:	91 2c       	mov	r9, r1
    1884:	54 01       	movw	r10, r8
    1886:	20 ed       	ldi	r18, 0xD0	; 208
    1888:	28 0f       	add	r18, r24
    188a:	28 30       	cpi	r18, 0x08	; 8
    188c:	80 f0       	brcs	.+32     	; 0x18ae <conv_int+0xc2>
    188e:	c4 ff       	sbrs	r28, 4
    1890:	04 c0       	rjmp	.+8      	; 0x189a <conv_int+0xae>
    1892:	b8 01       	movw	r22, r16
    1894:	0e 94 da 0e 	call	0x1db4	; 0x1db4 <ungetc>
    1898:	19 c0       	rjmp	.+50     	; 0x18cc <conv_int+0xe0>
    189a:	2a 30       	cpi	r18, 0x0A	; 10
    189c:	40 f0       	brcs	.+16     	; 0x18ae <conv_int+0xc2>
    189e:	c6 ff       	sbrs	r28, 6
    18a0:	f8 cf       	rjmp	.-16     	; 0x1892 <conv_int+0xa6>
    18a2:	2f 7d       	andi	r18, 0xDF	; 223
    18a4:	3f ee       	ldi	r19, 0xEF	; 239
    18a6:	32 0f       	add	r19, r18
    18a8:	36 30       	cpi	r19, 0x06	; 6
    18aa:	98 f7       	brcc	.-26     	; 0x1892 <conv_int+0xa6>
    18ac:	27 50       	subi	r18, 0x07	; 7
    18ae:	4c 2f       	mov	r20, r28
    18b0:	c5 01       	movw	r24, r10
    18b2:	b4 01       	movw	r22, r8
    18b4:	0e 94 b6 0b 	call	0x176c	; 0x176c <mulacc>
    18b8:	4b 01       	movw	r8, r22
    18ba:	5c 01       	movw	r10, r24
    18bc:	c2 60       	ori	r28, 0x02	; 2
    18be:	d1 50       	subi	r29, 0x01	; 1
    18c0:	59 f0       	breq	.+22     	; 0x18d8 <conv_int+0xec>
    18c2:	c8 01       	movw	r24, r16
    18c4:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <fgetc>
    18c8:	97 ff       	sbrs	r25, 7
    18ca:	dd cf       	rjmp	.-70     	; 0x1886 <conv_int+0x9a>
    18cc:	c1 fd       	sbrc	r28, 1
    18ce:	04 c0       	rjmp	.+8      	; 0x18d8 <conv_int+0xec>
    18d0:	aa cf       	rjmp	.-172    	; 0x1826 <conv_int+0x3a>
    18d2:	81 2c       	mov	r8, r1
    18d4:	91 2c       	mov	r9, r1
    18d6:	54 01       	movw	r10, r8
    18d8:	c7 ff       	sbrs	r28, 7
    18da:	08 c0       	rjmp	.+16     	; 0x18ec <conv_int+0x100>
    18dc:	b0 94       	com	r11
    18de:	a0 94       	com	r10
    18e0:	90 94       	com	r9
    18e2:	80 94       	com	r8
    18e4:	81 1c       	adc	r8, r1
    18e6:	91 1c       	adc	r9, r1
    18e8:	a1 1c       	adc	r10, r1
    18ea:	b1 1c       	adc	r11, r1
    18ec:	2c 2f       	mov	r18, r28
    18ee:	b5 01       	movw	r22, r10
    18f0:	a4 01       	movw	r20, r8
    18f2:	c7 01       	movw	r24, r14
    18f4:	0e 94 aa 0b 	call	0x1754	; 0x1754 <putval>
    18f8:	81 e0       	ldi	r24, 0x01	; 1
    18fa:	df 91       	pop	r29
    18fc:	cf 91       	pop	r28
    18fe:	1f 91       	pop	r17
    1900:	0f 91       	pop	r16
    1902:	ff 90       	pop	r15
    1904:	ef 90       	pop	r14
    1906:	bf 90       	pop	r11
    1908:	af 90       	pop	r10
    190a:	9f 90       	pop	r9
    190c:	8f 90       	pop	r8
    190e:	08 95       	ret

00001910 <conv_brk>:
    1910:	5f 92       	push	r5
    1912:	6f 92       	push	r6
    1914:	7f 92       	push	r7
    1916:	8f 92       	push	r8
    1918:	9f 92       	push	r9
    191a:	af 92       	push	r10
    191c:	bf 92       	push	r11
    191e:	cf 92       	push	r12
    1920:	df 92       	push	r13
    1922:	ef 92       	push	r14
    1924:	ff 92       	push	r15
    1926:	0f 93       	push	r16
    1928:	1f 93       	push	r17
    192a:	cf 93       	push	r28
    192c:	df 93       	push	r29
    192e:	cd b7       	in	r28, 0x3d	; 61
    1930:	de b7       	in	r29, 0x3e	; 62
    1932:	a0 97       	sbiw	r28, 0x20	; 32
    1934:	cd bf       	out	0x3d, r28	; 61
    1936:	de bf       	out	0x3e, r29	; 62
    1938:	5c 01       	movw	r10, r24
    193a:	96 2e       	mov	r9, r22
    193c:	7a 01       	movw	r14, r20
    193e:	f9 01       	movw	r30, r18
    1940:	8e 01       	movw	r16, r28
    1942:	0f 5f       	subi	r16, 0xFF	; 255
    1944:	1f 4f       	sbci	r17, 0xFF	; 255
    1946:	68 01       	movw	r12, r16
    1948:	80 e2       	ldi	r24, 0x20	; 32
    194a:	d8 01       	movw	r26, r16
    194c:	1d 92       	st	X+, r1
    194e:	8a 95       	dec	r24
    1950:	e9 f7       	brne	.-6      	; 0x194c <conv_brk+0x3c>
    1952:	d5 01       	movw	r26, r10
    1954:	13 96       	adiw	r26, 0x03	; 3
    1956:	8c 90       	ld	r8, X
    1958:	80 e0       	ldi	r24, 0x00	; 0
    195a:	90 e0       	ldi	r25, 0x00	; 0
    195c:	61 2c       	mov	r6, r1
    195e:	71 2c       	mov	r7, r1
    1960:	30 e0       	ldi	r19, 0x00	; 0
    1962:	61 e0       	ldi	r22, 0x01	; 1
    1964:	70 e0       	ldi	r23, 0x00	; 0
    1966:	83 fc       	sbrc	r8, 3
    1968:	25 91       	lpm	r18, Z+
    196a:	83 fe       	sbrs	r8, 3
    196c:	21 91       	ld	r18, Z+
    196e:	8f 01       	movw	r16, r30
    1970:	52 2e       	mov	r5, r18
    1972:	21 11       	cpse	r18, r1
    1974:	03 c0       	rjmp	.+6      	; 0x197c <conv_brk+0x6c>
    1976:	80 e0       	ldi	r24, 0x00	; 0
    1978:	90 e0       	ldi	r25, 0x00	; 0
    197a:	92 c0       	rjmp	.+292    	; 0x1aa0 <conv_brk+0x190>
    197c:	2e 35       	cpi	r18, 0x5E	; 94
    197e:	11 f4       	brne	.+4      	; 0x1984 <conv_brk+0x74>
    1980:	00 97       	sbiw	r24, 0x00	; 0
    1982:	51 f1       	breq	.+84     	; 0x19d8 <conv_brk+0xc8>
    1984:	43 2f       	mov	r20, r19
    1986:	50 e0       	ldi	r21, 0x00	; 0
    1988:	48 17       	cp	r20, r24
    198a:	59 07       	cpc	r21, r25
    198c:	3c f4       	brge	.+14     	; 0x199c <conv_brk+0x8c>
    198e:	2d 35       	cpi	r18, 0x5D	; 93
    1990:	59 f1       	breq	.+86     	; 0x19e8 <conv_brk+0xd8>
    1992:	2d 32       	cpi	r18, 0x2D	; 45
    1994:	19 f4       	brne	.+6      	; 0x199c <conv_brk+0x8c>
    1996:	77 20       	and	r7, r7
    1998:	09 f1       	breq	.+66     	; 0x19dc <conv_brk+0xcc>
    199a:	03 c0       	rjmp	.+6      	; 0x19a2 <conv_brk+0x92>
    199c:	77 20       	and	r7, r7
    199e:	09 f4       	brne	.+2      	; 0x19a2 <conv_brk+0x92>
    19a0:	6a c0       	rjmp	.+212    	; 0x1a76 <conv_brk+0x166>
    19a2:	45 2d       	mov	r20, r5
    19a4:	46 95       	lsr	r20
    19a6:	46 95       	lsr	r20
    19a8:	46 95       	lsr	r20
    19aa:	d6 01       	movw	r26, r12
    19ac:	a4 0f       	add	r26, r20
    19ae:	b1 1d       	adc	r27, r1
    19b0:	45 2d       	mov	r20, r5
    19b2:	47 70       	andi	r20, 0x07	; 7
    19b4:	8b 01       	movw	r16, r22
    19b6:	02 c0       	rjmp	.+4      	; 0x19bc <conv_brk+0xac>
    19b8:	00 0f       	add	r16, r16
    19ba:	11 1f       	adc	r17, r17
    19bc:	4a 95       	dec	r20
    19be:	e2 f7       	brpl	.-8      	; 0x19b8 <conv_brk+0xa8>
    19c0:	a8 01       	movw	r20, r16
    19c2:	5c 91       	ld	r21, X
    19c4:	45 2b       	or	r20, r21
    19c6:	4c 93       	st	X, r20
    19c8:	65 14       	cp	r6, r5
    19ca:	59 f0       	breq	.+22     	; 0x19e2 <conv_brk+0xd2>
    19cc:	56 14       	cp	r5, r6
    19ce:	10 f4       	brcc	.+4      	; 0x19d4 <conv_brk+0xc4>
    19d0:	53 94       	inc	r5
    19d2:	e7 cf       	rjmp	.-50     	; 0x19a2 <conv_brk+0x92>
    19d4:	5a 94       	dec	r5
    19d6:	e5 cf       	rjmp	.-54     	; 0x19a2 <conv_brk+0x92>
    19d8:	31 e0       	ldi	r19, 0x01	; 1
    19da:	04 c0       	rjmp	.+8      	; 0x19e4 <conv_brk+0xd4>
    19dc:	77 24       	eor	r7, r7
    19de:	73 94       	inc	r7
    19e0:	01 c0       	rjmp	.+2      	; 0x19e4 <conv_brk+0xd4>
    19e2:	71 2c       	mov	r7, r1
    19e4:	01 96       	adiw	r24, 0x01	; 1
    19e6:	bf cf       	rjmp	.-130    	; 0x1966 <conv_brk+0x56>
    19e8:	77 20       	and	r7, r7
    19ea:	19 f0       	breq	.+6      	; 0x19f2 <conv_brk+0xe2>
    19ec:	8e 81       	ldd	r24, Y+6	; 0x06
    19ee:	80 62       	ori	r24, 0x20	; 32
    19f0:	8e 83       	std	Y+6, r24	; 0x06
    19f2:	31 11       	cpse	r19, r1
    19f4:	03 c0       	rjmp	.+6      	; 0x19fc <conv_brk+0xec>
    19f6:	88 24       	eor	r8, r8
    19f8:	83 94       	inc	r8
    19fa:	17 c0       	rjmp	.+46     	; 0x1a2a <conv_brk+0x11a>
    19fc:	f6 01       	movw	r30, r12
    19fe:	9e 01       	movw	r18, r28
    1a00:	2f 5d       	subi	r18, 0xDF	; 223
    1a02:	3f 4f       	sbci	r19, 0xFF	; 255
    1a04:	80 81       	ld	r24, Z
    1a06:	80 95       	com	r24
    1a08:	81 93       	st	Z+, r24
    1a0a:	2e 17       	cp	r18, r30
    1a0c:	3f 07       	cpc	r19, r31
    1a0e:	d1 f7       	brne	.-12     	; 0x1a04 <conv_brk+0xf4>
    1a10:	f2 cf       	rjmp	.-28     	; 0x19f6 <conv_brk+0xe6>
    1a12:	e1 14       	cp	r14, r1
    1a14:	f1 04       	cpc	r15, r1
    1a16:	29 f0       	breq	.+10     	; 0x1a22 <conv_brk+0x112>
    1a18:	d7 01       	movw	r26, r14
    1a1a:	8c 93       	st	X, r24
    1a1c:	f7 01       	movw	r30, r14
    1a1e:	31 96       	adiw	r30, 0x01	; 1
    1a20:	7f 01       	movw	r14, r30
    1a22:	9a 94       	dec	r9
    1a24:	81 2c       	mov	r8, r1
    1a26:	99 20       	and	r9, r9
    1a28:	f9 f0       	breq	.+62     	; 0x1a68 <conv_brk+0x158>
    1a2a:	c5 01       	movw	r24, r10
    1a2c:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <fgetc>
    1a30:	97 fd       	sbrc	r25, 7
    1a32:	18 c0       	rjmp	.+48     	; 0x1a64 <conv_brk+0x154>
    1a34:	fc 01       	movw	r30, r24
    1a36:	ff 27       	eor	r31, r31
    1a38:	23 e0       	ldi	r18, 0x03	; 3
    1a3a:	f5 95       	asr	r31
    1a3c:	e7 95       	ror	r30
    1a3e:	2a 95       	dec	r18
    1a40:	e1 f7       	brne	.-8      	; 0x1a3a <conv_brk+0x12a>
    1a42:	ec 0d       	add	r30, r12
    1a44:	fd 1d       	adc	r31, r13
    1a46:	20 81       	ld	r18, Z
    1a48:	30 e0       	ldi	r19, 0x00	; 0
    1a4a:	ac 01       	movw	r20, r24
    1a4c:	47 70       	andi	r20, 0x07	; 7
    1a4e:	55 27       	eor	r21, r21
    1a50:	02 c0       	rjmp	.+4      	; 0x1a56 <conv_brk+0x146>
    1a52:	35 95       	asr	r19
    1a54:	27 95       	ror	r18
    1a56:	4a 95       	dec	r20
    1a58:	e2 f7       	brpl	.-8      	; 0x1a52 <conv_brk+0x142>
    1a5a:	20 fd       	sbrc	r18, 0
    1a5c:	da cf       	rjmp	.-76     	; 0x1a12 <conv_brk+0x102>
    1a5e:	b5 01       	movw	r22, r10
    1a60:	0e 94 da 0e 	call	0x1db4	; 0x1db4 <ungetc>
    1a64:	81 10       	cpse	r8, r1
    1a66:	87 cf       	rjmp	.-242    	; 0x1976 <conv_brk+0x66>
    1a68:	e1 14       	cp	r14, r1
    1a6a:	f1 04       	cpc	r15, r1
    1a6c:	11 f0       	breq	.+4      	; 0x1a72 <conv_brk+0x162>
    1a6e:	d7 01       	movw	r26, r14
    1a70:	1c 92       	st	X, r1
    1a72:	c8 01       	movw	r24, r16
    1a74:	15 c0       	rjmp	.+42     	; 0x1aa0 <conv_brk+0x190>
    1a76:	42 2f       	mov	r20, r18
    1a78:	46 95       	lsr	r20
    1a7a:	46 95       	lsr	r20
    1a7c:	46 95       	lsr	r20
    1a7e:	d6 01       	movw	r26, r12
    1a80:	a4 0f       	add	r26, r20
    1a82:	b1 1d       	adc	r27, r1
    1a84:	42 2f       	mov	r20, r18
    1a86:	47 70       	andi	r20, 0x07	; 7
    1a88:	8b 01       	movw	r16, r22
    1a8a:	02 c0       	rjmp	.+4      	; 0x1a90 <conv_brk+0x180>
    1a8c:	00 0f       	add	r16, r16
    1a8e:	11 1f       	adc	r17, r17
    1a90:	4a 95       	dec	r20
    1a92:	e2 f7       	brpl	.-8      	; 0x1a8c <conv_brk+0x17c>
    1a94:	a8 01       	movw	r20, r16
    1a96:	5c 91       	ld	r21, X
    1a98:	45 2b       	or	r20, r21
    1a9a:	4c 93       	st	X, r20
    1a9c:	62 2e       	mov	r6, r18
    1a9e:	a2 cf       	rjmp	.-188    	; 0x19e4 <conv_brk+0xd4>
    1aa0:	a0 96       	adiw	r28, 0x20	; 32
    1aa2:	cd bf       	out	0x3d, r28	; 61
    1aa4:	de bf       	out	0x3e, r29	; 62
    1aa6:	df 91       	pop	r29
    1aa8:	cf 91       	pop	r28
    1aaa:	1f 91       	pop	r17
    1aac:	0f 91       	pop	r16
    1aae:	ff 90       	pop	r15
    1ab0:	ef 90       	pop	r14
    1ab2:	df 90       	pop	r13
    1ab4:	cf 90       	pop	r12
    1ab6:	bf 90       	pop	r11
    1ab8:	af 90       	pop	r10
    1aba:	9f 90       	pop	r9
    1abc:	8f 90       	pop	r8
    1abe:	7f 90       	pop	r7
    1ac0:	6f 90       	pop	r6
    1ac2:	5f 90       	pop	r5
    1ac4:	08 95       	ret

00001ac6 <vfscanf>:
    1ac6:	5f 92       	push	r5
    1ac8:	6f 92       	push	r6
    1aca:	7f 92       	push	r7
    1acc:	8f 92       	push	r8
    1ace:	9f 92       	push	r9
    1ad0:	af 92       	push	r10
    1ad2:	bf 92       	push	r11
    1ad4:	cf 92       	push	r12
    1ad6:	df 92       	push	r13
    1ad8:	ef 92       	push	r14
    1ada:	ff 92       	push	r15
    1adc:	0f 93       	push	r16
    1ade:	1f 93       	push	r17
    1ae0:	cf 93       	push	r28
    1ae2:	df 93       	push	r29
    1ae4:	6c 01       	movw	r12, r24
    1ae6:	eb 01       	movw	r28, r22
    1ae8:	5a 01       	movw	r10, r20
    1aea:	fc 01       	movw	r30, r24
    1aec:	16 82       	std	Z+6, r1	; 0x06
    1aee:	17 82       	std	Z+7, r1	; 0x07
    1af0:	51 2c       	mov	r5, r1
    1af2:	f6 01       	movw	r30, r12
    1af4:	e3 80       	ldd	r14, Z+3	; 0x03
    1af6:	fe 01       	movw	r30, r28
    1af8:	e3 fc       	sbrc	r14, 3
    1afa:	85 91       	lpm	r24, Z+
    1afc:	e3 fe       	sbrs	r14, 3
    1afe:	81 91       	ld	r24, Z+
    1b00:	18 2f       	mov	r17, r24
    1b02:	ef 01       	movw	r28, r30
    1b04:	88 23       	and	r24, r24
    1b06:	09 f4       	brne	.+2      	; 0x1b0a <vfscanf+0x44>
    1b08:	ee c0       	rjmp	.+476    	; 0x1ce6 <vfscanf+0x220>
    1b0a:	90 e0       	ldi	r25, 0x00	; 0
    1b0c:	0e 94 88 0e 	call	0x1d10	; 0x1d10 <isspace>
    1b10:	89 2b       	or	r24, r25
    1b12:	21 f0       	breq	.+8      	; 0x1b1c <vfscanf+0x56>
    1b14:	c6 01       	movw	r24, r12
    1b16:	0e 94 dd 0b 	call	0x17ba	; 0x17ba <skip_spaces>
    1b1a:	eb cf       	rjmp	.-42     	; 0x1af2 <vfscanf+0x2c>
    1b1c:	15 32       	cpi	r17, 0x25	; 37
    1b1e:	41 f4       	brne	.+16     	; 0x1b30 <vfscanf+0x6a>
    1b20:	fe 01       	movw	r30, r28
    1b22:	e3 fc       	sbrc	r14, 3
    1b24:	15 91       	lpm	r17, Z+
    1b26:	e3 fe       	sbrs	r14, 3
    1b28:	11 91       	ld	r17, Z+
    1b2a:	ef 01       	movw	r28, r30
    1b2c:	15 32       	cpi	r17, 0x25	; 37
    1b2e:	81 f4       	brne	.+32     	; 0x1b50 <vfscanf+0x8a>
    1b30:	c6 01       	movw	r24, r12
    1b32:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <fgetc>
    1b36:	97 fd       	sbrc	r25, 7
    1b38:	d4 c0       	rjmp	.+424    	; 0x1ce2 <vfscanf+0x21c>
    1b3a:	41 2f       	mov	r20, r17
    1b3c:	50 e0       	ldi	r21, 0x00	; 0
    1b3e:	9c 01       	movw	r18, r24
    1b40:	33 27       	eor	r19, r19
    1b42:	24 17       	cp	r18, r20
    1b44:	35 07       	cpc	r19, r21
    1b46:	a9 f2       	breq	.-86     	; 0x1af2 <vfscanf+0x2c>
    1b48:	b6 01       	movw	r22, r12
    1b4a:	0e 94 da 0e 	call	0x1db4	; 0x1db4 <ungetc>
    1b4e:	cb c0       	rjmp	.+406    	; 0x1ce6 <vfscanf+0x220>
    1b50:	1a 32       	cpi	r17, 0x2A	; 42
    1b52:	39 f4       	brne	.+14     	; 0x1b62 <vfscanf+0x9c>
    1b54:	e3 fc       	sbrc	r14, 3
    1b56:	15 91       	lpm	r17, Z+
    1b58:	e3 fe       	sbrs	r14, 3
    1b5a:	11 91       	ld	r17, Z+
    1b5c:	ef 01       	movw	r28, r30
    1b5e:	01 e0       	ldi	r16, 0x01	; 1
    1b60:	01 c0       	rjmp	.+2      	; 0x1b64 <vfscanf+0x9e>
    1b62:	00 e0       	ldi	r16, 0x00	; 0
    1b64:	f1 2c       	mov	r15, r1
    1b66:	20 ed       	ldi	r18, 0xD0	; 208
    1b68:	21 0f       	add	r18, r17
    1b6a:	2a 30       	cpi	r18, 0x0A	; 10
    1b6c:	80 f4       	brcc	.+32     	; 0x1b8e <vfscanf+0xc8>
    1b6e:	02 60       	ori	r16, 0x02	; 2
    1b70:	6f 2d       	mov	r22, r15
    1b72:	70 e0       	ldi	r23, 0x00	; 0
    1b74:	80 e0       	ldi	r24, 0x00	; 0
    1b76:	90 e0       	ldi	r25, 0x00	; 0
    1b78:	40 e2       	ldi	r20, 0x20	; 32
    1b7a:	0e 94 b6 0b 	call	0x176c	; 0x176c <mulacc>
    1b7e:	f6 2e       	mov	r15, r22
    1b80:	fe 01       	movw	r30, r28
    1b82:	e3 fc       	sbrc	r14, 3
    1b84:	15 91       	lpm	r17, Z+
    1b86:	e3 fe       	sbrs	r14, 3
    1b88:	11 91       	ld	r17, Z+
    1b8a:	ef 01       	movw	r28, r30
    1b8c:	ec cf       	rjmp	.-40     	; 0x1b66 <vfscanf+0xa0>
    1b8e:	01 ff       	sbrs	r16, 1
    1b90:	03 c0       	rjmp	.+6      	; 0x1b98 <vfscanf+0xd2>
    1b92:	f1 10       	cpse	r15, r1
    1b94:	03 c0       	rjmp	.+6      	; 0x1b9c <vfscanf+0xd6>
    1b96:	a7 c0       	rjmp	.+334    	; 0x1ce6 <vfscanf+0x220>
    1b98:	ff 24       	eor	r15, r15
    1b9a:	fa 94       	dec	r15
    1b9c:	18 36       	cpi	r17, 0x68	; 104
    1b9e:	19 f0       	breq	.+6      	; 0x1ba6 <vfscanf+0xe0>
    1ba0:	1c 36       	cpi	r17, 0x6C	; 108
    1ba2:	51 f0       	breq	.+20     	; 0x1bb8 <vfscanf+0xf2>
    1ba4:	10 c0       	rjmp	.+32     	; 0x1bc6 <vfscanf+0x100>
    1ba6:	fe 01       	movw	r30, r28
    1ba8:	e3 fc       	sbrc	r14, 3
    1baa:	15 91       	lpm	r17, Z+
    1bac:	e3 fe       	sbrs	r14, 3
    1bae:	11 91       	ld	r17, Z+
    1bb0:	ef 01       	movw	r28, r30
    1bb2:	18 36       	cpi	r17, 0x68	; 104
    1bb4:	41 f4       	brne	.+16     	; 0x1bc6 <vfscanf+0x100>
    1bb6:	08 60       	ori	r16, 0x08	; 8
    1bb8:	04 60       	ori	r16, 0x04	; 4
    1bba:	fe 01       	movw	r30, r28
    1bbc:	e3 fc       	sbrc	r14, 3
    1bbe:	15 91       	lpm	r17, Z+
    1bc0:	e3 fe       	sbrs	r14, 3
    1bc2:	11 91       	ld	r17, Z+
    1bc4:	ef 01       	movw	r28, r30
    1bc6:	11 23       	and	r17, r17
    1bc8:	09 f4       	brne	.+2      	; 0x1bcc <vfscanf+0x106>
    1bca:	8d c0       	rjmp	.+282    	; 0x1ce6 <vfscanf+0x220>
    1bcc:	61 2f       	mov	r22, r17
    1bce:	70 e0       	ldi	r23, 0x00	; 0
    1bd0:	86 e0       	ldi	r24, 0x06	; 6
    1bd2:	93 e0       	ldi	r25, 0x03	; 3
    1bd4:	0e 94 91 0e 	call	0x1d22	; 0x1d22 <strchr_P>
    1bd8:	89 2b       	or	r24, r25
    1bda:	09 f4       	brne	.+2      	; 0x1bde <vfscanf+0x118>
    1bdc:	84 c0       	rjmp	.+264    	; 0x1ce6 <vfscanf+0x220>
    1bde:	00 fd       	sbrc	r16, 0
    1be0:	07 c0       	rjmp	.+14     	; 0x1bf0 <vfscanf+0x12a>
    1be2:	f5 01       	movw	r30, r10
    1be4:	80 80       	ld	r8, Z
    1be6:	91 80       	ldd	r9, Z+1	; 0x01
    1be8:	c5 01       	movw	r24, r10
    1bea:	02 96       	adiw	r24, 0x02	; 2
    1bec:	5c 01       	movw	r10, r24
    1bee:	02 c0       	rjmp	.+4      	; 0x1bf4 <vfscanf+0x12e>
    1bf0:	81 2c       	mov	r8, r1
    1bf2:	91 2c       	mov	r9, r1
    1bf4:	1e 36       	cpi	r17, 0x6E	; 110
    1bf6:	51 f4       	brne	.+20     	; 0x1c0c <vfscanf+0x146>
    1bf8:	f6 01       	movw	r30, r12
    1bfa:	46 81       	ldd	r20, Z+6	; 0x06
    1bfc:	57 81       	ldd	r21, Z+7	; 0x07
    1bfe:	60 e0       	ldi	r22, 0x00	; 0
    1c00:	70 e0       	ldi	r23, 0x00	; 0
    1c02:	20 2f       	mov	r18, r16
    1c04:	c4 01       	movw	r24, r8
    1c06:	0e 94 aa 0b 	call	0x1754	; 0x1754 <putval>
    1c0a:	73 cf       	rjmp	.-282    	; 0x1af2 <vfscanf+0x2c>
    1c0c:	13 36       	cpi	r17, 0x63	; 99
    1c0e:	a9 f4       	brne	.+42     	; 0x1c3a <vfscanf+0x174>
    1c10:	01 fd       	sbrc	r16, 1
    1c12:	02 c0       	rjmp	.+4      	; 0x1c18 <vfscanf+0x152>
    1c14:	ff 24       	eor	r15, r15
    1c16:	f3 94       	inc	r15
    1c18:	c6 01       	movw	r24, r12
    1c1a:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <fgetc>
    1c1e:	97 fd       	sbrc	r25, 7
    1c20:	60 c0       	rjmp	.+192    	; 0x1ce2 <vfscanf+0x21c>
    1c22:	81 14       	cp	r8, r1
    1c24:	91 04       	cpc	r9, r1
    1c26:	29 f0       	breq	.+10     	; 0x1c32 <vfscanf+0x16c>
    1c28:	f4 01       	movw	r30, r8
    1c2a:	80 83       	st	Z, r24
    1c2c:	c4 01       	movw	r24, r8
    1c2e:	01 96       	adiw	r24, 0x01	; 1
    1c30:	4c 01       	movw	r8, r24
    1c32:	fa 94       	dec	r15
    1c34:	f1 10       	cpse	r15, r1
    1c36:	f0 cf       	rjmp	.-32     	; 0x1c18 <vfscanf+0x152>
    1c38:	50 c0       	rjmp	.+160    	; 0x1cda <vfscanf+0x214>
    1c3a:	1b 35       	cpi	r17, 0x5B	; 91
    1c3c:	59 f4       	brne	.+22     	; 0x1c54 <vfscanf+0x18e>
    1c3e:	9e 01       	movw	r18, r28
    1c40:	a4 01       	movw	r20, r8
    1c42:	6f 2d       	mov	r22, r15
    1c44:	c6 01       	movw	r24, r12
    1c46:	0e 94 88 0c 	call	0x1910	; 0x1910 <conv_brk>
    1c4a:	ec 01       	movw	r28, r24
    1c4c:	89 2b       	or	r24, r25
    1c4e:	09 f0       	breq	.+2      	; 0x1c52 <vfscanf+0x18c>
    1c50:	44 c0       	rjmp	.+136    	; 0x1cda <vfscanf+0x214>
    1c52:	3e c0       	rjmp	.+124    	; 0x1cd0 <vfscanf+0x20a>
    1c54:	c6 01       	movw	r24, r12
    1c56:	0e 94 dd 0b 	call	0x17ba	; 0x17ba <skip_spaces>
    1c5a:	97 fd       	sbrc	r25, 7
    1c5c:	42 c0       	rjmp	.+132    	; 0x1ce2 <vfscanf+0x21c>
    1c5e:	1f 36       	cpi	r17, 0x6F	; 111
    1c60:	61 f1       	breq	.+88     	; 0x1cba <vfscanf+0x1f4>
    1c62:	28 f4       	brcc	.+10     	; 0x1c6e <vfscanf+0x1a8>
    1c64:	14 36       	cpi	r17, 0x64	; 100
    1c66:	39 f1       	breq	.+78     	; 0x1cb6 <vfscanf+0x1f0>
    1c68:	19 36       	cpi	r17, 0x69	; 105
    1c6a:	51 f1       	breq	.+84     	; 0x1cc0 <vfscanf+0x1fa>
    1c6c:	28 c0       	rjmp	.+80     	; 0x1cbe <vfscanf+0x1f8>
    1c6e:	13 37       	cpi	r17, 0x73	; 115
    1c70:	71 f0       	breq	.+28     	; 0x1c8e <vfscanf+0x1c8>
    1c72:	15 37       	cpi	r17, 0x75	; 117
    1c74:	01 f1       	breq	.+64     	; 0x1cb6 <vfscanf+0x1f0>
    1c76:	23 c0       	rjmp	.+70     	; 0x1cbe <vfscanf+0x1f8>
    1c78:	81 14       	cp	r8, r1
    1c7a:	91 04       	cpc	r9, r1
    1c7c:	29 f0       	breq	.+10     	; 0x1c88 <vfscanf+0x1c2>
    1c7e:	f4 01       	movw	r30, r8
    1c80:	60 82       	st	Z, r6
    1c82:	c4 01       	movw	r24, r8
    1c84:	01 96       	adiw	r24, 0x01	; 1
    1c86:	4c 01       	movw	r8, r24
    1c88:	fa 94       	dec	r15
    1c8a:	ff 20       	and	r15, r15
    1c8c:	71 f0       	breq	.+28     	; 0x1caa <vfscanf+0x1e4>
    1c8e:	c6 01       	movw	r24, r12
    1c90:	0e 94 9c 0e 	call	0x1d38	; 0x1d38 <fgetc>
    1c94:	3c 01       	movw	r6, r24
    1c96:	97 fd       	sbrc	r25, 7
    1c98:	08 c0       	rjmp	.+16     	; 0x1caa <vfscanf+0x1e4>
    1c9a:	0e 94 88 0e 	call	0x1d10	; 0x1d10 <isspace>
    1c9e:	89 2b       	or	r24, r25
    1ca0:	59 f3       	breq	.-42     	; 0x1c78 <vfscanf+0x1b2>
    1ca2:	b6 01       	movw	r22, r12
    1ca4:	c3 01       	movw	r24, r6
    1ca6:	0e 94 da 0e 	call	0x1db4	; 0x1db4 <ungetc>
    1caa:	81 14       	cp	r8, r1
    1cac:	91 04       	cpc	r9, r1
    1cae:	a9 f0       	breq	.+42     	; 0x1cda <vfscanf+0x214>
    1cb0:	f4 01       	movw	r30, r8
    1cb2:	10 82       	st	Z, r1
    1cb4:	12 c0       	rjmp	.+36     	; 0x1cda <vfscanf+0x214>
    1cb6:	00 62       	ori	r16, 0x20	; 32
    1cb8:	03 c0       	rjmp	.+6      	; 0x1cc0 <vfscanf+0x1fa>
    1cba:	00 61       	ori	r16, 0x10	; 16
    1cbc:	01 c0       	rjmp	.+2      	; 0x1cc0 <vfscanf+0x1fa>
    1cbe:	00 64       	ori	r16, 0x40	; 64
    1cc0:	20 2f       	mov	r18, r16
    1cc2:	a4 01       	movw	r20, r8
    1cc4:	6f 2d       	mov	r22, r15
    1cc6:	c6 01       	movw	r24, r12
    1cc8:	0e 94 f6 0b 	call	0x17ec	; 0x17ec <conv_int>
    1ccc:	81 11       	cpse	r24, r1
    1cce:	05 c0       	rjmp	.+10     	; 0x1cda <vfscanf+0x214>
    1cd0:	f6 01       	movw	r30, r12
    1cd2:	83 81       	ldd	r24, Z+3	; 0x03
    1cd4:	80 73       	andi	r24, 0x30	; 48
    1cd6:	29 f4       	brne	.+10     	; 0x1ce2 <vfscanf+0x21c>
    1cd8:	06 c0       	rjmp	.+12     	; 0x1ce6 <vfscanf+0x220>
    1cda:	00 fd       	sbrc	r16, 0
    1cdc:	0a cf       	rjmp	.-492    	; 0x1af2 <vfscanf+0x2c>
    1cde:	53 94       	inc	r5
    1ce0:	08 cf       	rjmp	.-496    	; 0x1af2 <vfscanf+0x2c>
    1ce2:	55 20       	and	r5, r5
    1ce4:	19 f0       	breq	.+6      	; 0x1cec <vfscanf+0x226>
    1ce6:	85 2d       	mov	r24, r5
    1ce8:	90 e0       	ldi	r25, 0x00	; 0
    1cea:	02 c0       	rjmp	.+4      	; 0x1cf0 <vfscanf+0x22a>
    1cec:	8f ef       	ldi	r24, 0xFF	; 255
    1cee:	9f ef       	ldi	r25, 0xFF	; 255
    1cf0:	df 91       	pop	r29
    1cf2:	cf 91       	pop	r28
    1cf4:	1f 91       	pop	r17
    1cf6:	0f 91       	pop	r16
    1cf8:	ff 90       	pop	r15
    1cfa:	ef 90       	pop	r14
    1cfc:	df 90       	pop	r13
    1cfe:	cf 90       	pop	r12
    1d00:	bf 90       	pop	r11
    1d02:	af 90       	pop	r10
    1d04:	9f 90       	pop	r9
    1d06:	8f 90       	pop	r8
    1d08:	7f 90       	pop	r7
    1d0a:	6f 90       	pop	r6
    1d0c:	5f 90       	pop	r5
    1d0e:	08 95       	ret

00001d10 <isspace>:
    1d10:	91 11       	cpse	r25, r1
    1d12:	0c 94 f3 0e 	jmp	0x1de6	; 0x1de6 <__ctype_isfalse>
    1d16:	80 32       	cpi	r24, 0x20	; 32
    1d18:	19 f0       	breq	.+6      	; 0x1d20 <isspace+0x10>
    1d1a:	89 50       	subi	r24, 0x09	; 9
    1d1c:	85 50       	subi	r24, 0x05	; 5
    1d1e:	c8 f7       	brcc	.-14     	; 0x1d12 <isspace+0x2>
    1d20:	08 95       	ret

00001d22 <strchr_P>:
    1d22:	fc 01       	movw	r30, r24
    1d24:	05 90       	lpm	r0, Z+
    1d26:	06 16       	cp	r0, r22
    1d28:	21 f0       	breq	.+8      	; 0x1d32 <strchr_P+0x10>
    1d2a:	00 20       	and	r0, r0
    1d2c:	d9 f7       	brne	.-10     	; 0x1d24 <strchr_P+0x2>
    1d2e:	c0 01       	movw	r24, r0
    1d30:	08 95       	ret
    1d32:	31 97       	sbiw	r30, 0x01	; 1
    1d34:	cf 01       	movw	r24, r30
    1d36:	08 95       	ret

00001d38 <fgetc>:
    1d38:	cf 93       	push	r28
    1d3a:	df 93       	push	r29
    1d3c:	ec 01       	movw	r28, r24
    1d3e:	2b 81       	ldd	r18, Y+3	; 0x03
    1d40:	20 ff       	sbrs	r18, 0
    1d42:	33 c0       	rjmp	.+102    	; 0x1daa <fgetc+0x72>
    1d44:	26 ff       	sbrs	r18, 6
    1d46:	0a c0       	rjmp	.+20     	; 0x1d5c <fgetc+0x24>
    1d48:	2f 7b       	andi	r18, 0xBF	; 191
    1d4a:	2b 83       	std	Y+3, r18	; 0x03
    1d4c:	8e 81       	ldd	r24, Y+6	; 0x06
    1d4e:	9f 81       	ldd	r25, Y+7	; 0x07
    1d50:	01 96       	adiw	r24, 0x01	; 1
    1d52:	8e 83       	std	Y+6, r24	; 0x06
    1d54:	9f 83       	std	Y+7, r25	; 0x07
    1d56:	8a 81       	ldd	r24, Y+2	; 0x02
    1d58:	90 e0       	ldi	r25, 0x00	; 0
    1d5a:	29 c0       	rjmp	.+82     	; 0x1dae <fgetc+0x76>
    1d5c:	22 ff       	sbrs	r18, 2
    1d5e:	0f c0       	rjmp	.+30     	; 0x1d7e <fgetc+0x46>
    1d60:	e8 81       	ld	r30, Y
    1d62:	f9 81       	ldd	r31, Y+1	; 0x01
    1d64:	80 81       	ld	r24, Z
    1d66:	08 2e       	mov	r0, r24
    1d68:	00 0c       	add	r0, r0
    1d6a:	99 0b       	sbc	r25, r25
    1d6c:	00 97       	sbiw	r24, 0x00	; 0
    1d6e:	19 f4       	brne	.+6      	; 0x1d76 <fgetc+0x3e>
    1d70:	20 62       	ori	r18, 0x20	; 32
    1d72:	2b 83       	std	Y+3, r18	; 0x03
    1d74:	1a c0       	rjmp	.+52     	; 0x1daa <fgetc+0x72>
    1d76:	31 96       	adiw	r30, 0x01	; 1
    1d78:	e8 83       	st	Y, r30
    1d7a:	f9 83       	std	Y+1, r31	; 0x01
    1d7c:	0e c0       	rjmp	.+28     	; 0x1d9a <fgetc+0x62>
    1d7e:	ea 85       	ldd	r30, Y+10	; 0x0a
    1d80:	fb 85       	ldd	r31, Y+11	; 0x0b
    1d82:	19 95       	eicall
    1d84:	97 ff       	sbrs	r25, 7
    1d86:	09 c0       	rjmp	.+18     	; 0x1d9a <fgetc+0x62>
    1d88:	2b 81       	ldd	r18, Y+3	; 0x03
    1d8a:	01 96       	adiw	r24, 0x01	; 1
    1d8c:	11 f0       	breq	.+4      	; 0x1d92 <fgetc+0x5a>
    1d8e:	80 e2       	ldi	r24, 0x20	; 32
    1d90:	01 c0       	rjmp	.+2      	; 0x1d94 <fgetc+0x5c>
    1d92:	80 e1       	ldi	r24, 0x10	; 16
    1d94:	82 2b       	or	r24, r18
    1d96:	8b 83       	std	Y+3, r24	; 0x03
    1d98:	08 c0       	rjmp	.+16     	; 0x1daa <fgetc+0x72>
    1d9a:	2e 81       	ldd	r18, Y+6	; 0x06
    1d9c:	3f 81       	ldd	r19, Y+7	; 0x07
    1d9e:	2f 5f       	subi	r18, 0xFF	; 255
    1da0:	3f 4f       	sbci	r19, 0xFF	; 255
    1da2:	2e 83       	std	Y+6, r18	; 0x06
    1da4:	3f 83       	std	Y+7, r19	; 0x07
    1da6:	99 27       	eor	r25, r25
    1da8:	02 c0       	rjmp	.+4      	; 0x1dae <fgetc+0x76>
    1daa:	8f ef       	ldi	r24, 0xFF	; 255
    1dac:	9f ef       	ldi	r25, 0xFF	; 255
    1dae:	df 91       	pop	r29
    1db0:	cf 91       	pop	r28
    1db2:	08 95       	ret

00001db4 <ungetc>:
    1db4:	fb 01       	movw	r30, r22
    1db6:	23 81       	ldd	r18, Z+3	; 0x03
    1db8:	20 ff       	sbrs	r18, 0
    1dba:	12 c0       	rjmp	.+36     	; 0x1de0 <ungetc+0x2c>
    1dbc:	26 fd       	sbrc	r18, 6
    1dbe:	10 c0       	rjmp	.+32     	; 0x1de0 <ungetc+0x2c>
    1dc0:	8f 3f       	cpi	r24, 0xFF	; 255
    1dc2:	3f ef       	ldi	r19, 0xFF	; 255
    1dc4:	93 07       	cpc	r25, r19
    1dc6:	61 f0       	breq	.+24     	; 0x1de0 <ungetc+0x2c>
    1dc8:	82 83       	std	Z+2, r24	; 0x02
    1dca:	2f 7d       	andi	r18, 0xDF	; 223
    1dcc:	20 64       	ori	r18, 0x40	; 64
    1dce:	23 83       	std	Z+3, r18	; 0x03
    1dd0:	26 81       	ldd	r18, Z+6	; 0x06
    1dd2:	37 81       	ldd	r19, Z+7	; 0x07
    1dd4:	21 50       	subi	r18, 0x01	; 1
    1dd6:	31 09       	sbc	r19, r1
    1dd8:	26 83       	std	Z+6, r18	; 0x06
    1dda:	37 83       	std	Z+7, r19	; 0x07
    1ddc:	99 27       	eor	r25, r25
    1dde:	08 95       	ret
    1de0:	8f ef       	ldi	r24, 0xFF	; 255
    1de2:	9f ef       	ldi	r25, 0xFF	; 255
    1de4:	08 95       	ret

00001de6 <__ctype_isfalse>:
    1de6:	99 27       	eor	r25, r25
    1de8:	88 27       	eor	r24, r24

00001dea <__ctype_istrue>:
    1dea:	08 95       	ret

00001dec <_exit>:
    1dec:	f8 94       	cli

00001dee <__stop_program>:
    1dee:	ff cf       	rjmp	.-2      	; 0x1dee <__stop_program>
